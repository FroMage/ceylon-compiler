package com.redhat.ceylon.compiler.java.test.expression.invoke;

public class KlassMethodTypeParams {
    
    public KlassMethodTypeParams() {
    }
    
    public final <U, V>U bar(final U u, final V v) {
        return u;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams();
    }
}
class GenericMethodInvocation {
    
    GenericMethodInvocation() {
    }
    
    public final .java.lang.String m() {
        final .com.redhat.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams k = new .com.redhat.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams();
        return k.<.ceylon.language.String, .ceylon.language.Integer>bar(.ceylon.language.String.instance("hello"), .ceylon.language.Integer.instance(1L)).toString();
    }
    
    public final .java.lang.String m2() {
        final .com.redhat.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams k = new .com.redhat.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams();
        return (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams $arg$0$callable$ = k;
                .ceylon.language.String $arg$0$0 = .ceylon.language.String.instance("hello");
                .ceylon.language.Integer $arg$0$1 = .ceylon.language.Integer.instance(1L);
            }
            returning $arg$0$callable$.<.ceylon.language.String, .ceylon.language.Integer>bar($arg$0$0, $arg$0$1);
        ).toString();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.GenericMethodInvocation();
    }
}