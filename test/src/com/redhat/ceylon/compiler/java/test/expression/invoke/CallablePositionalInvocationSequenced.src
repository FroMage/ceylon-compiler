package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class callablePositionalInvocationSequenced_f_ {
    
    private callablePositionalInvocationSequenced_f_() {
    }
    
    static void callablePositionalInvocationSequenced_f(final .ceylon.language.Callable<? extends .java.lang.Object> foo) {
        foo.$call$variadic(.ceylon.language.Integer.instance(1L));
        foo.$call$variadic(.ceylon.language.Integer.instance(1L), .ceylon.language.ArraySequence.<.ceylon.language.String>instance(.ceylon.language.String.$TypeDescriptor, new .java.lang.Object[]{.ceylon.language.String.instance("")}));
        foo.$call$variadic(.ceylon.language.Integer.instance(1L), .ceylon.language.ArraySequence.<.ceylon.language.String>instance(.ceylon.language.String.$TypeDescriptor, new .java.lang.Object[]{
                .ceylon.language.String.instance(""),
                .ceylon.language.String.instance("")}));
        foo.$call$variadic(.ceylon.language.Integer.instance(1L), (.ceylon.language.Sequential<? extends .ceylon.language.String>)(.ceylon.language.Sequential).ceylon.language.empty_.get_());
    }
}