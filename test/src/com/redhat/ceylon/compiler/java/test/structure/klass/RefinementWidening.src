package com.redhat.ceylon.compiler.java.test.structure.klass;

class RWInvParam<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    RWInvParam(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.klass.RWInvParam(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWInvParam.class, $reified$T);
    }
}
class RWInvParamExt<T> extends .com.redhat.ceylon.compiler.java.test.structure.klass.RWInvParam<T> {
    
    RWInvParamExt(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        super($reified$T);
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.klass.RWInvParamExt(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWInvParamExt.class, $reified$T);
    }
}
class RWCovParam<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    RWCovParam(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.klass.RWCovParam(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWCovParam.class, $reified$T);
    }
}
class RWCovParamExt<T> extends .com.redhat.ceylon.compiler.java.test.structure.klass.RWCovParam<T> {
    
    RWCovParamExt(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        super($reified$T);
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.klass.RWCovParamExt(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWCovParamExt.class, $reified$T);
    }
}
class RWContrParam<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    RWContrParam(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.klass.RWContrParam(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWContrParam.class, $reified$T);
    }
}
class RWContrParamExt<T> extends .com.redhat.ceylon.compiler.java.test.structure.klass.RWContrParam<T> {
    
    RWContrParamExt(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        super($reified$T);
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.klass.RWContrParamExt(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWContrParamExt.class, $reified$T);
    }
}
interface RWTopI {
    
    public .com.redhat.ceylon.compiler.java.test.structure.klass.RWTopI$impl $com$redhat$ceylon$compiler$java$test$structure$klass$RWTopI$impl();
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWTopI.class);
}
final class RWTopI$impl {
    
    RWTopI$impl(.com.redhat.ceylon.compiler.java.test.structure.klass.RWTopI $this) {
    }
}
interface RWLeft extends .com.redhat.ceylon.compiler.java.test.structure.klass.RWTopI {
    
    public .com.redhat.ceylon.compiler.java.test.structure.klass.RWLeft$impl $com$redhat$ceylon$compiler$java$test$structure$klass$RWLeft$impl();
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWLeft.class);
}
final class RWLeft$impl {
    
    RWLeft$impl(.com.redhat.ceylon.compiler.java.test.structure.klass.RWLeft $this) {
    }
}
interface RWRight extends .com.redhat.ceylon.compiler.java.test.structure.klass.RWTopI {
    
    public .com.redhat.ceylon.compiler.java.test.structure.klass.RWRight$impl $com$redhat$ceylon$compiler$java$test$structure$klass$RWRight$impl();
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWRight.class);
}
final class RWRight$impl {
    
    RWRight$impl(.com.redhat.ceylon.compiler.java.test.structure.klass.RWRight $this) {
    }
}
abstract class RWTop<X, Y> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    RWTop(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$X, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Y) {
        this.$reified$X = $reified$X;
        this.$reified$Y = $reified$Y;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$X;
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Y;
    
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWInvParam<.ceylon.language.Number> m();
    
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWCovParam<? extends .ceylon.language.Number> m2();
    
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWCovParam<? extends .ceylon.language.Number> m2_erasure();
    
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWContrParam<? super .ceylon.language.Integer> m3();
    
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWContrParam<? super .ceylon.language.Integer> m3_erasure();
    
    public abstract <T>T tParam(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T);
    
    public abstract <T>T tParamErasure(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T);
    
    public abstract <T extends .ceylon.language.Number>T tBoundParam(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T);
    
    public abstract <T extends .ceylon.language.Integer>T tCovBoundParam(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T);
    
    public abstract X typeBound();
    
    public abstract X typeCovBound();
    
    public abstract Y classBound();
    
    public abstract Y classBound_erasure();
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWTop.class, $reified$X, $reified$Y);
    }
}
abstract class RWBottom<Z> extends .com.redhat.ceylon.compiler.java.test.structure.klass.RWTop<.ceylon.language.Number, Z> {
    
    RWBottom(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Z) {
        super(.ceylon.language.Number.$TypeDescriptor$, $reified$Z);
        this.$reified$Z = $reified$Z;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Z;
    
    @.java.lang.Override
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWInvParamExt<.ceylon.language.Number> m();
    
    @.java.lang.Override
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWCovParamExt<? extends .ceylon.language.Integer> m2();
    
    @.java.lang.Override
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWCovParam m2_erasure();
    
    @.java.lang.Override
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWContrParamExt<? super .ceylon.language.Number> m3();
    
    @.java.lang.Override
    public abstract .com.redhat.ceylon.compiler.java.test.structure.klass.RWContrParam m3_erasure();
    
    @.java.lang.Override
    public abstract <S>S tParam(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$S);
    
    @.java.lang.Override
    public abstract <S>S tParamErasure(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$S);
    
    @.java.lang.Override
    public abstract <S extends .ceylon.language.Number>S tBoundParam(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$S);
    
    @.java.lang.Override
    public abstract <S extends .ceylon.language.Integer>S tCovBoundParam(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$S);
    
    @.java.lang.Override
    public abstract .ceylon.language.Number typeBound();
    
    @.java.lang.Override
    public abstract .ceylon.language.Integer typeCovBound();
    
    @.java.lang.Override
    public abstract Z classBound();
    
    @.java.lang.Override
    public abstract Z classBound_erasure();
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.RWBottom.class, $reified$Z);
    }
}