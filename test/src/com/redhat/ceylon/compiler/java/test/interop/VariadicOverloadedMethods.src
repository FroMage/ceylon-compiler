package com.redhat.ceylon.compiler.java.test.interop;

final class variadicOverloadedMethods_ {
    
    private variadicOverloadedMethods_() {
    }
    
    static void variadicOverloadedMethods() {
        final .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembers java = new .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembers();
        java.variadic();
        java.variadic(1L);
        java.variadic(1L, 2L);
        java.variadic(new long[]{
                1L,
                2L,
                3L});
        java.variadic(.com.redhat.ceylon.compiler.java.Util.toLongArray(new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Sequential<? extends .ceylon.language.Integer>>>>(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)})));
        java.variadic(1.0);
        java.variadic(1.0, 2.0);
        java.variadic(new double[]{
                1.0,
                2.0,
                3.0});
        java.variadic(.ceylon.language.String.instance("a"));
        java.variadic("a", "b");
        java.variadic(.com.redhat.ceylon.compiler.java.Util.toJavaStringArray(new .ceylon.language.Tuple<.ceylon.language.String, .ceylon.language.String, .ceylon.language.Tuple<.ceylon.language.String, ? extends .ceylon.language.String, ? extends .ceylon.language.Sequential<? extends .ceylon.language.String>>>(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.String.instance("a"),
                .ceylon.language.String.instance("b")})));
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.variadicOverloadedMethods_.variadicOverloadedMethods();
    }
}