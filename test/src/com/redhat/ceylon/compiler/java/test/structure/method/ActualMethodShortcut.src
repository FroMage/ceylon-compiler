package com.redhat.ceylon.compiler.java.test.structure.method;

abstract class ActualMethodShortcut {
    
    ActualMethodShortcut() {
    }
    
    public abstract .java.lang.Object print1();
    
    public abstract .java.lang.Object print2(final .java.lang.String s);
    
    public abstract .java.lang.Object foo(final .java.lang.String s);
    
    public abstract .java.lang.String foo2(final .java.lang.String s);
}
class ActualMethodShortcutSub extends .com.redhat.ceylon.compiler.java.test.structure.method.ActualMethodShortcut {
    
    ActualMethodShortcutSub() {
        super();
    }
    
    @.java.lang.Override
    public final .java.lang.Object print1() {
        .ceylon.language.process_.getProcess$().writeLine("hello");
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object print2(final .java.lang.String s) {
        (
            let
            {
                .ceylon.language.process_.getProcess$().writeLine(s);
            }
            returning null;
        );
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object foo(final .java.lang.String s) {
        .ceylon.language.print_.print(.ceylon.language.String.instance(s));
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.String foo2(final .java.lang.String s) {
        return s.toString();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.method.ActualMethodShortcutSub();
    }
}