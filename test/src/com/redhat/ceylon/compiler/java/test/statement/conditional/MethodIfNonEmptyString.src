package com.redhat.ceylon.compiler.java.test.statement.conditional;

class MethodIfNonEmptySequence {
    
    MethodIfNonEmptySequence() {
    }
    
    public final void m(final .java.lang.String s) {
        .ceylon.language.String $s$1;
        if (($s$1 = .ceylon.language.String.instance(s)) instanceof .ceylon.language.FixedSized && !((.ceylon.language.FixedSized)$s$1).getEmpty()) {
            final .ceylon.language.List<? extends .ceylon.language.Character> $s$2 = (.ceylon.language.List<? extends .ceylon.language.Character>)$s$1;
            .ceylon.language.print_.print(((.ceylon.language.Some<? extends .ceylon.language.Character>)$s$2).getFirst());
        }
    }
    
    public final void mvar(final .java.lang.String s) {
        .ceylon.language.String $t$4;
        if (($t$4 = .ceylon.language.String.instance(s)) instanceof .ceylon.language.FixedSized && !((.ceylon.language.FixedSized)$t$4).getEmpty()) {
            final .ceylon.language.List<? extends .ceylon.language.Character> $t$5 = (.ceylon.language.List<? extends .ceylon.language.Character>)$t$4;
            .ceylon.language.print_.print(((.ceylon.language.Some<? extends .ceylon.language.Character>)$t$5).getFirst());
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.conditional.MethodIfNonEmptySequence();
    }
}