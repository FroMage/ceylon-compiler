package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class defaultFunctionReference_ {
    
    private defaultFunctionReference_() {
    }
    
    static final void defaultFunctionReference() {
        (
            let
            {
                .ceylon.language.Callable<? extends .java.lang.Object> $ceylontmp$f$1 = .com.redhat.ceylon.compiler.java.test.expression.invoke.defaultFunctionReference_.defaultFunctionReference$f();
                defaultFunctionReference($ceylontmp$f$1);
            }
            returning null;
        );
    }
    
    static final .ceylon.language.Callable<? extends .java.lang.Object> defaultFunctionReference$f() {
        return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("ceylon.language.Callable<ceylon.language.Void,ceylon.language.Void>"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                return (
                    let
                    {
                        .ceylon.language.print_.print($param$0);
                    }
                    returning null;
                );
            }
        };
    }
    
    static void defaultFunctionReference(final .ceylon.language.Callable<? extends .java.lang.Object> f) {
        f.$call(.ceylon.language.Integer.instance(1L));
    }
}
final class defaultFunctionReference_call_ {
    
    private defaultFunctionReference_call_() {
    }
    
    static void defaultFunctionReference_call() {
        .com.redhat.ceylon.compiler.java.test.expression.invoke.defaultFunctionReference_.defaultFunctionReference();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.defaultFunctionReference_call_.defaultFunctionReference_call();
    }
}