package com.redhat.ceylon.compiler.java.test.structure.reified;

public interface TestInterface<Key, Value> {
    
    public boolean $com$redhat$ceylon$compiler$java$test$structure$reified$TestInterface$is(.com.redhat.ceylon.compiler.java.TypeDescriptor type);
}
public final class TestInterface$impl<Key, Value> {
    
    public TestInterface$impl(.com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedKey, .com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedValue, .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<Key, Value> $this) {
        this.$reifiedKey = $reifiedKey;
        this.$reifiedValue = $reifiedValue;
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedKey;
    private final .com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedValue;
    private final .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<Key, Value> $this;
    
    public boolean $com$redhat$ceylon$compiler$java$test$structure$reified$TestInterface$is(.com.redhat.ceylon.compiler.java.TypeDescriptor type) {
        if (.com.redhat.ceylon.compiler.java.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface.class, $reifiedKey, $reifiedValue).equals(type)) return true;
        return false;
    }
}
public class TestClass<Key, Value> implements .com.redhat.ceylon.compiler.java.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<Key, .ceylon.language.Integer> {
    
    public TestClass(.com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedKey, .com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedValue) {
        this.$reifiedKey = $reifiedKey;
        this.$reifiedValue = $reifiedValue;
        this.$com$redhat$ceylon$compiler$java$test$structure$reified$TestInterface$this = new .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface$impl<Key, .ceylon.language.Integer>($reifiedKey, .com.redhat.ceylon.compiler.java.TypeDescriptor.klass(.ceylon.language.Integer.class), this);
    }
    private final .com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedKey;
    private final .com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedValue;
    private final .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface$impl<Key, .ceylon.language.Integer> $com$redhat$ceylon$compiler$java$test$structure$reified$TestInterface$this;
    
    @.java.lang.Override
    public boolean $com$redhat$ceylon$compiler$java$test$structure$reified$TestInterface$is(.com.redhat.ceylon.compiler.java.TypeDescriptor type) {
        return this.$com$redhat$ceylon$compiler$java$test$structure$reified$TestInterface$this.$com$redhat$ceylon$compiler$java$test$structure$reified$TestInterface$is(type);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.reified.TestClass(.com.redhat.ceylon.compiler.java.TypeDescriptor.BottomType, .com.redhat.ceylon.compiler.java.TypeDescriptor.BottomType);
    }
    
    @.java.lang.Override
    public boolean $is(.com.redhat.ceylon.compiler.java.TypeDescriptor type) {
        if (.com.redhat.ceylon.compiler.java.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestClass.class, $reifiedKey, $reifiedValue).equals(type)) return true;
        if ($com$redhat$ceylon$compiler$java$test$structure$reified$TestInterface$is(type)) return true;
        return false;
    }
}
final class test_ {
    
    private test_() {
    }
    
    static <Key, Value>void test(.com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedKey, .com.redhat.ceylon.compiler.java.TypeDescriptor $reifiedValue, final .java.lang.Object obj) {
        .java.lang.Object $obj$0;
        if (.com.redhat.ceylon.compiler.java.Util.isReified($obj$0 = obj, .com.redhat.ceylon.compiler.java.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestClass.class, .com.redhat.ceylon.compiler.java.TypeDescriptor.klass(.ceylon.language.String.class), .com.redhat.ceylon.compiler.java.TypeDescriptor.klass(.ceylon.language.Integer.class)))) {
            final .com.redhat.ceylon.compiler.java.test.structure.reified.TestClass<.ceylon.language.String, .ceylon.language.Integer> $obj$1 = (.com.redhat.ceylon.compiler.java.test.structure.reified.TestClass)$obj$0;
        }
        .java.lang.Object $obj$2;
        if (.com.redhat.ceylon.compiler.java.Util.isReified($obj$2 = obj, .com.redhat.ceylon.compiler.java.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface.class, .com.redhat.ceylon.compiler.java.TypeDescriptor.klass(.ceylon.language.String.class), $reifiedValue))) {
            final .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<.ceylon.language.String, Value> $obj$3 = (.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface)$obj$2;
        }
        .java.lang.Object $obj$4;
        if (.com.redhat.ceylon.compiler.java.Util.isReified($obj$4 = obj, $reifiedKey)) {
            final .java.lang.Object $obj$5 = (.java.lang.Object)$obj$4;
        }
    }
}