package com.redhat.ceylon.compiler.java.test.structure.alias;

public class TypeAliasWithTypeParametersClass<T> {
    
    public TypeAliasWithTypeParametersClass() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.alias.TypeAliasWithTypeParametersClass();
    }
}
public interface TypeAliasWithTypeParametersInterface<T> {
}
public final class TypeAliasWithTypeParametersInterface$impl<T> {
    
    public TypeAliasWithTypeParametersInterface$impl(.com.redhat.ceylon.compiler.java.test.structure.alias.TypeAliasWithTypeParametersInterface<T> $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.alias.TypeAliasWithTypeParametersInterface<T> $this;
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 3)
@.com.redhat.ceylon.compiler.java.metadata.TypeAlias("com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersClass<ceylon.language::Integer>&com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersInterface<ceylon.language::String>")
final class TypeAliasWithTypeParameters1 {
    
    private TypeAliasWithTypeParameters1() {
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 3)
@.com.redhat.ceylon.compiler.java.metadata.TypeAlias("com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersClass<T>|com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersInterface<T>")
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "T", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {})})
final class TypeAliasWithTypeParameters2<T> {
    
    private TypeAliasWithTypeParameters2() {
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 3)
@.com.redhat.ceylon.compiler.java.metadata.TypeAlias("com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersClass<T>")
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "T", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {}), @.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "V", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {})})
final class TypeAliasWithTypeParameters3<T, V> {
    
    private TypeAliasWithTypeParameters3() {
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 3)
@.com.redhat.ceylon.compiler.java.metadata.TypeAlias("com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersInterface<V>")
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "T", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {}), @.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "V", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {})})
final class TypeAliasWithTypeParameters4<T, V> {
    
    private TypeAliasWithTypeParameters4() {
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 3)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class typeAliasWithTypeParametersMethod1_ {
    
    private typeAliasWithTypeParametersMethod1_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(value = "com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersClass<ceylon.language::Integer>&com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersInterface<ceylon.language::String>", erased = true)
    static .java.lang.Object typeAliasWithTypeParametersMethod1(@.com.redhat.ceylon.compiler.java.metadata.Name("f")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(value = "com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersClass<ceylon.language::Integer>&com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersInterface<ceylon.language::String>", erased = true)
    final .java.lang.Object f) {
        return f;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 3)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class typeAliasWithTypeParametersMethod2_ {
    
    private typeAliasWithTypeParametersMethod2_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(value = "com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersClass<ceylon.language::Integer>|com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersInterface<ceylon.language::Integer>", erased = true)
    static .java.lang.Object typeAliasWithTypeParametersMethod2(@.com.redhat.ceylon.compiler.java.metadata.Name("f")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(value = "com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersClass<ceylon.language::Integer>|com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersInterface<ceylon.language::Integer>", erased = true)
    final .java.lang.Object f) {
        return f;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 3)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class typeAliasWithTypeParametersMethod3_ {
    
    private typeAliasWithTypeParametersMethod3_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersClass<T>")
    @.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "T", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {}), @.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "V", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {})})
    static <T, V>.com.redhat.ceylon.compiler.java.test.structure.alias.TypeAliasWithTypeParametersClass<T> typeAliasWithTypeParametersMethod3(@.com.redhat.ceylon.compiler.java.metadata.Name("f")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersClass<T>")
    final .com.redhat.ceylon.compiler.java.test.structure.alias.TypeAliasWithTypeParametersClass<T> f) {
        return f;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 3)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class typeAliasWithTypeParametersMethod4_ {
    
    private typeAliasWithTypeParametersMethod4_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersInterface<V>")
    @.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "T", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {}), @.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "V", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {})})
    static <T, V>.com.redhat.ceylon.compiler.java.test.structure.alias.TypeAliasWithTypeParametersInterface<V> typeAliasWithTypeParametersMethod4(@.com.redhat.ceylon.compiler.java.metadata.Name("f")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.structure.alias::TypeAliasWithTypeParametersInterface<V>")
    final .com.redhat.ceylon.compiler.java.test.structure.alias.TypeAliasWithTypeParametersInterface<V> f) {
        return f;
    }
}