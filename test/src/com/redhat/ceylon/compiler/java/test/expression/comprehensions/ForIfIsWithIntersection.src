package com.redhat.ceylon.compiler.java.test.expression.comprehensions;

class ForIfIsIntersection {
    
    ForIfIsIntersection() {
    }
    
    public final void m(final .ceylon.language.Sequential<? extends .java.lang.Object> xs) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String>(){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> getIterator() {
                return new .ceylon.language.Iterator<.ceylon.language.String>(){
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0 = xs.getIterator();
                    private .java.lang.Object x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem0 = iter$0.next();
                        x$exhausted = $ceylontmpitem0 == .ceylon.language.exhausted_.getExhausted$();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.java.lang.Object)$ceylontmpitem0;
                            return true;
                        }
                    }
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.x()) break;
                            if (x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                break;
                            }
                        }
                        return !x$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        return this.next1() ? .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)x).common().toString()) : .ceylon.language.exhausted_.getExhausted$();
                    }
                };
            }
        });
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String>(){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> getIterator() {
                return new .ceylon.language.Iterator<.ceylon.language.String>(){
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0 = xs.getIterator();
                    private .java.lang.Object x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem2 = iter$0.next();
                        x$exhausted = $ceylontmpitem2 == .ceylon.language.exhausted_.getExhausted$();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.java.lang.Object)$ceylontmpitem2;
                            return true;
                        }
                    }
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.x()) break;
                            if (x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                break;
                            }
                        }
                        return !x$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        return this.next1() ? .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)x).foo().toString()) : .ceylon.language.exhausted_.getExhausted$();
                    }
                };
            }
        });
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String>(){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> getIterator() {
                return new .ceylon.language.Iterator<.ceylon.language.String>(){
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0 = xs.getIterator();
                    private .java.lang.Object x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem4 = iter$0.next();
                        x$exhausted = $ceylontmpitem4 == .ceylon.language.exhausted_.getExhausted$();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.java.lang.Object)$ceylontmpitem4;
                            return true;
                        }
                    }
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.x()) break;
                            if (x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && x instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                break;
                            }
                        }
                        return !x$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        return this.next1() ? .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface)x).bar().toString()) : .ceylon.language.exhausted_.getExhausted$();
                    }
                };
            }
        });
    }
    
    public final void mvar(final .ceylon.language.Sequential<? extends .java.lang.Object> ys) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String>(){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> getIterator() {
                return new .ceylon.language.Iterator<.ceylon.language.String>(){
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0 = ys.getIterator();
                    private .java.lang.Object y;
                    private boolean y$exhausted;
                    
                    private final boolean y() {
                        final .java.lang.Object $ceylontmpitem6 = iter$0.next();
                        y$exhausted = $ceylontmpitem6 == .ceylon.language.exhausted_.getExhausted$();
                        if (y$exhausted) {
                            return false;
                        } else {
                            y = (.java.lang.Object)$ceylontmpitem6;
                            return true;
                        }
                    }
                    private .java.lang.Object $x$8;
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.y()) break;
                            .java.lang.Object $x$7 = null;
                            if (($x$7 = y) instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && $x$7 instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                $x$8 = $x$7;
                                break;
                            }
                        }
                        return !y$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        return this.next1() ? .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)$x$8).common().toString()) : .ceylon.language.exhausted_.getExhausted$();
                    }
                };
            }
        });
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String>(){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> getIterator() {
                return new .ceylon.language.Iterator<.ceylon.language.String>(){
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0 = ys.getIterator();
                    private .java.lang.Object y;
                    private boolean y$exhausted;
                    
                    private final boolean y() {
                        final .java.lang.Object $ceylontmpitem9 = iter$0.next();
                        y$exhausted = $ceylontmpitem9 == .ceylon.language.exhausted_.getExhausted$();
                        if (y$exhausted) {
                            return false;
                        } else {
                            y = (.java.lang.Object)$ceylontmpitem9;
                            return true;
                        }
                    }
                    private .java.lang.Object $x$11;
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.y()) break;
                            .java.lang.Object $x$10 = null;
                            if (($x$10 = y) instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && $x$10 instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                $x$11 = $x$10;
                                break;
                            }
                        }
                        return !y$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        return this.next1() ? .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)$x$11).foo().toString()) : .ceylon.language.exhausted_.getExhausted$();
                    }
                };
            }
        });
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String>(){
            
            public final .ceylon.language.Iterator<.ceylon.language.String> getIterator() {
                return new .ceylon.language.Iterator<.ceylon.language.String>(){
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0 = ys.getIterator();
                    private .java.lang.Object y;
                    private boolean y$exhausted;
                    
                    private final boolean y() {
                        final .java.lang.Object $ceylontmpitem12 = iter$0.next();
                        y$exhausted = $ceylontmpitem12 == .ceylon.language.exhausted_.getExhausted$();
                        if (y$exhausted) {
                            return false;
                        } else {
                            y = (.java.lang.Object)$ceylontmpitem12;
                            return true;
                        }
                    }
                    private .java.lang.Object $x$14;
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.y()) break;
                            .java.lang.Object $x$13 = null;
                            if (($x$13 = y) instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo && $x$13 instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface) {
                                $x$14 = $x$13;
                                break;
                            }
                        }
                        return !y$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        return this.next1() ? .ceylon.language.String.instance(((.com.redhat.ceylon.compiler.java.test.expression.comprehensions.BarInterface)$x$14).bar().toString()) : .ceylon.language.exhausted_.getExhausted$();
                    }
                };
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfIsIntersection();
    }
}