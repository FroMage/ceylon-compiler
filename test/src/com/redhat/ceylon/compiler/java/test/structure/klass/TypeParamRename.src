package com.redhat.ceylon.compiler.java.test.structure.klass;

interface TypeParamRename<T, U> {
    
    public .com.redhat.ceylon.compiler.java.test.structure.klass.TypeParamRename$impl<T, U> $com$redhat$ceylon$compiler$java$test$structure$klass$TypeParamRename$impl();
    
    public U m(final T t1);
    
    public abstract T m$t2(final T t1);
    
    public U m(final T t1, final T t2);
    
    public <V, W>W m2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedV, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedW);
    
    public abstract <V, W>V m2$v(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedV, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedW);
    
    public <V, W>W m2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedV, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedW, final V v);
}
final class TypeParamRename$impl<T, U> {
    
    TypeParamRename$impl(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedU, .com.redhat.ceylon.compiler.java.test.structure.klass.TypeParamRename<T, U> $this) {
        this.$reifiedT = $reifiedT;
        this.$reifiedU = $reifiedU;
        this.$this = $this;
    }
    private .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT;
    private .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedU;
    private final .com.redhat.ceylon.compiler.java.test.structure.klass.TypeParamRename<T, U> $this;
    
    public void $refine(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedU) {
        this.$reifiedU = $reifiedU;
        this.$reifiedT = $reifiedT;
    }
    
    public U m(final T t1) {
        return (
            let
            {
                T $ceylontmp$t2$$0 = m$t2(t1);
            }
            returning m$(t1, $ceylontmp$t2$$0);
        );
    }
    
    public final T m$t2(final T t1) {
        return null;
    }
    
    private U m$(final T t1, final T t2) {
        throw new .ceylon.language.Exception(null, null);
    }
    
    public U m(final T t1, final T t2) {
        return m$(t1, t2);
    }
    
    public <V, W>W m2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedV, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedW) {
        return (
            let
            {
                V $ceylontmp$v$$1 = m2$v($reifiedV, $reifiedW);
            }
            returning m2$($reifiedV, $reifiedW, $ceylontmp$v$$1);
        );
    }
    
    public final <V, W>V m2$v(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedV, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedW) {
        return null;
    }
    
    private <V, W>W m2$(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedV, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedW, final V v) {
        throw new .ceylon.language.Exception(null, null);
    }
    
    public <V, W>W m2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedV, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedW, final V v) {
        return m2$($reifiedV, $reifiedW, v);
    }
}
class TypeParamRenameKls<X, Y> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.klass.TypeParamRename<X, Y> {
    
    TypeParamRenameKls(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedY) {
        this.$reifiedX = $reifiedX;
        this.$reifiedY = $reifiedY;
        this.$com$redhat$ceylon$compiler$java$test$structure$klass$TypeParamRename$this = new .com.redhat.ceylon.compiler.java.test.structure.klass.TypeParamRename$impl<X, Y>($reifiedX, $reifiedY, this);
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX;
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedY;
    protected final .com.redhat.ceylon.compiler.java.test.structure.klass.TypeParamRename$impl<X, Y> $com$redhat$ceylon$compiler$java$test$structure$klass$TypeParamRename$this;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.test.structure.klass.TypeParamRename$impl<X, Y> $com$redhat$ceylon$compiler$java$test$structure$klass$TypeParamRename$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$klass$TypeParamRename$this;
    }
    
    @.java.lang.Override
    public final X m$t2(final X t1) {
        return $com$redhat$ceylon$compiler$java$test$structure$klass$TypeParamRename$this.m$t2(t1);
    }
    
    @.java.lang.Override
    public Y m(final X t1) {
        return (
            let
            {
                X $ceylontmp$t2$$2 = m$t2(t1);
            }
            returning m$(t1, $ceylontmp$t2$$2);
        );
    }
    
    @.java.lang.Override
    public final Y m(final X t1, final X t2) {
        return $com$redhat$ceylon$compiler$java$test$structure$klass$TypeParamRename$this.m(t1, t2);
    }
    
    private Y m$(final X t1, final X t2) {
        return $com$redhat$ceylon$compiler$java$test$structure$klass$TypeParamRename$this.m(t1, t2);
    }
    
    @.java.lang.Override
    public final <A, B>A m2$v(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedA, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedB) {
        return $com$redhat$ceylon$compiler$java$test$structure$klass$TypeParamRename$this.m2$v($reifiedA, $reifiedB);
    }
    
    public <A, B>B m2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedA, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedB) {
        return (
            let
            {
                A $ceylontmp$v$$3 = m2$v($reifiedA, $reifiedB);
            }
            returning m2$($reifiedA, $reifiedB, $ceylontmp$v$$3);
        );
    }
    
    private <A, B>B m2$(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedA, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedB, final A v) {
        throw new .ceylon.language.Exception(null, null);
    }
    
    @.java.lang.Override
    public <A, B>B m2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedA, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedB, final A v) {
        return m2$($reifiedA, $reifiedB, v);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.klass.TypeParamRenameKls(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.TypeParamRenameKls.class, $reifiedX, $reifiedY);
    }
}