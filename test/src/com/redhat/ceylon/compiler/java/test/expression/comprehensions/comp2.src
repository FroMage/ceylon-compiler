package com.redhat.ceylon.compiler.java.test.expression.comprehensions;

final class comp2_ {
    
    private comp2_() {
    }
    
    static void comp2(final .ceylon.language.List<? extends .ceylon.language.Integer> ints) {
        final .ceylon.language.List<? extends .ceylon.language.Integer> i = new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer>(){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> getIterator() {
                return new .ceylon.language.Iterator<.ceylon.language.Integer>(){
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0 = ints.getIterator();
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmpitem0 = iter$0.next();
                        i$exhausted = $ceylontmpitem0 == .ceylon.language.exhausted_.getExhausted$();
                        if (i$exhausted) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmpitem0;
                        }
                        return true;
                    }
                    private .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$1;
                    
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$1() {
                        if (iter$1 == null) this.i();
                        iter$1 = ints.getIterator();
                        return iter$1;
                    }
                    private .ceylon.language.Integer j;
                    private boolean j$exhausted;
                    
                    private final boolean j() {
                        if (iter$1 == null) this.iter$1();
                        final .java.lang.Object $ceylontmpitem1 = iter$1.next();
                        j$exhausted = $ceylontmpitem1 == .ceylon.language.exhausted_.getExhausted$();
                        if (j$exhausted) {
                            if (this.i()) {
                                iter$1 = this.iter$1();
                                return this.j();
                            }
                            return false;
                        } else {
                            j = (.ceylon.language.Integer)$ceylontmpitem1;
                        }
                        return true;
                    }
                    
                    public final .java.lang.Object next() {
                        return this.j() ? i.times(.ceylon.language.Integer.instance(2L)).plus(.ceylon.language.Integer.instance(3L).divided(j)) : .ceylon.language.exhausted_.getExhausted$();
                    }
                };
            }
        }.getSequence();
    }
}