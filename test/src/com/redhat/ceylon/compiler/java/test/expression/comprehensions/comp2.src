package com.redhat.ceylon.compiler.java.test.expression.comprehensions;

final class comp2_ {
    
    private comp2_() {
    }
    
    static void comp2(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> ints) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer> i = new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer>(){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> getIterator() {
                return new .ceylon.language.Iterator<.ceylon.language.Integer>(){
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0 = ints.getIterator();
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmpitem0 = iter$0.next();
                        i$exhausted = $ceylontmpitem0 == .ceylon.language.finished_.getFinished$();
                        if (i$exhausted) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmpitem0;
                            return true;
                        }
                    }
                    private .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$1;
                    
                    private final boolean iter$1() {
                        if (i$exhausted) return false;
                        if (iter$1 != null) return true;
                        if (!this.i()) return false;
                        iter$1 = ints.getIterator();
                        return true;
                    }
                    private .ceylon.language.Integer j;
                    private boolean j$exhausted;
                    
                    private final boolean j() {
                        while (this.iter$1()) {
                            final .java.lang.Object $ceylontmpitem1 = iter$1.next();
                            j$exhausted = $ceylontmpitem1 == .ceylon.language.finished_.getFinished$();
                            if (j$exhausted) {
                                iter$1 = null;
                            } else {
                                j = (.ceylon.language.Integer)$ceylontmpitem1;
                                return true;
                            }
                        }
                        return false;
                    }
                    
                    public final .java.lang.Object next() {
                        return this.j() ? i.times(.ceylon.language.Integer.instance(2L)).plus(.ceylon.language.Integer.instance(3L).divided(j)) : .ceylon.language.finished_.getFinished$();
                    }
                };
            }
        };
    }
}