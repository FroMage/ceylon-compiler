package com.redhat.ceylon.compiler.java.test.structure.nesting.icc;

interface I<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
    
    public .com.redhat.ceylon.compiler.java.test.structure.nesting.icc.I$impl<? extends T, ? super X> $com$redhat$ceylon$compiler$java$test$structure$nesting$icc$I$impl();
    
    public abstract <U>T m1(final X b);
    
    public abstract <U>U m1$u(final X b);
    
    public abstract <U>T m1(final X b, final U u);
}
final class I$impl<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
    
    I$impl(.com.redhat.ceylon.compiler.java.test.structure.nesting.icc.I<? extends T, ? super X> $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.nesting.icc.I<? extends T, ? super X> $this;
    
    public final <U>T m1(final X b) {
        return (
            let
            {
                U $ceylontmp$u$1 = m1$u(b);
            }
            returning $this.m1(b, $ceylontmp$u$1);
        );
    }
    
    public final <U>U m1$u(final X b) {
        return null;
    }
    
    class IC {
        
        IC() {
        }
        
        class ICC {
            
            ICC() {
            }
            
            private final T m2() {
                return m1(null);
            }
        }
    }
}