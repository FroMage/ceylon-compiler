package com.redhat.ceylon.compiler.java.test.quoting.$goto;

final class keywordInForLoop_ {
    
    private keywordInForLoop_() {
    }
    
    static void keywordInForLoop(final .ceylon.language.Sequence<? extends .ceylon.language.Integer> seq) {
        final .ceylon.language.Range<.ceylon.language.Integer> range$0 = new .ceylon.language.Range<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(10L));
        final .ceylon.language.Integer last$1 = range$0.getLast();
        final boolean deceasing$2 = range$0.getDecreasing();
        loop_0: for (.ceylon.language.Integer item$3 = range$0.getFirst(); item$3.compare(last$1) != (deceasing$2 ? .ceylon.language.smaller_.get_() : .ceylon.language.larger_.get_()); item$3 = deceasing$2 ? item$3.getPredecessor() : item$3.getSuccessor()) {
            final long $byte = item$3.longValue();
            if ($byte > 5L) {
            }
        }
        .java.lang.Object elem$5;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> $byte$iterator$$6 = seq.iterator();
        loop_1: while (!((elem$5 = $byte$iterator$$6.next()) instanceof .ceylon.language.Finished)) {
            final long $byte = ((.ceylon.language.Integer)elem$5).longValue();
            if ($byte > 5L) {
            }
        }
        .java.lang.Object elem$8;
        .ceylon.language.Iterator<? extends .ceylon.language.String> $byte$iterator$$9 = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 3, false){
            
            @.java.lang.Override
            protected final .java.lang.Object $evaluate$(int $index$) {
                switch ($index$) {
                case 0: 
                    return .ceylon.language.String.instance("aap");
                
                case 1: 
                    return .ceylon.language.String.instance("noot");
                
                case 2: 
                    return .ceylon.language.String.instance("mies");
                
                default: 
                    return null;
                
                }
            }
        }.iterator();
        loop_2: while (!((elem$8 = $byte$iterator$$9.next()) instanceof .ceylon.language.Finished)) {
            final .java.lang.String $byte = ((.ceylon.language.String)elem$8).toString();
        }
        .java.lang.Object elem$10;
        .ceylon.language.Iterator<? extends .ceylon.language.String> $byte$iterator$$11 = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.String, .java.lang.Object>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 3, false){
            
            @.java.lang.Override
            protected final .java.lang.Object $evaluate$(int $index$) {
                switch ($index$) {
                case 0: 
                    return .ceylon.language.String.instance("aap");
                
                case 1: 
                    return null;
                
                case 2: 
                    return .ceylon.language.String.instance("mies");
                
                default: 
                    return null;
                
                }
            }
        }.iterator();
        loop_3: while (!((elem$10 = $byte$iterator$$11.next()) instanceof .ceylon.language.Finished)) {
            final .ceylon.language.String $byte = (.ceylon.language.String)elem$10;
        }
        .java.lang.Object elem$12;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> $byte$iterator$$13 = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 3, false){
            
            @.java.lang.Override
            protected final .java.lang.Object $evaluate$(int $index$) {
                switch ($index$) {
                case 0: 
                    return .ceylon.language.Integer.instance(1L);
                
                case 1: 
                    return .ceylon.language.Integer.instance(2L);
                
                case 2: 
                    return .ceylon.language.Integer.instance(3L);
                
                default: 
                    return null;
                
                }
            }
        }.iterator();
        loop_4: while (!((elem$12 = $byte$iterator$$13.next()) instanceof .ceylon.language.Finished)) {
            final long $byte = ((.ceylon.language.Integer)elem$12).longValue();
        }
        .java.lang.Object elem$14;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> $byte$iterator$$15 = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Integer, .java.lang.Object>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Null.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 3, false){
            
            @.java.lang.Override
            protected final .java.lang.Object $evaluate$(int $index$) {
                switch ($index$) {
                case 0: 
                    return .ceylon.language.Integer.instance(1L);
                
                case 1: 
                    return null;
                
                case 2: 
                    return .ceylon.language.Integer.instance(3L);
                
                default: 
                    return null;
                
                }
            }
        }.iterator();
        loop_5: while (!((elem$14 = $byte$iterator$$15.next()) instanceof .ceylon.language.Finished)) {
            final .ceylon.language.Integer $byte = (.ceylon.language.Integer)elem$14;
        }
        .java.lang.Object elem$16;
        .ceylon.language.Iterator<? extends .ceylon.language.Character> $byte$iterator$$17 = .ceylon.language.String.instance("wim").iterator();
        loop_6: while (!((elem$16 = $byte$iterator$$17.next()) instanceof .ceylon.language.Finished)) {
            final int $byte = ((.ceylon.language.Character)elem$16).intValue();
        }
        .java.lang.Object elem$18;
        .ceylon.language.Iterator<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.String>> $byte$iterator$$19 = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.String>, .java.lang.Object>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Entry.class, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 3, false){
            
            @.java.lang.Override
            protected final .java.lang.Object $evaluate$(int $index$) {
                switch ($index$) {
                case 0: 
                    return new .ceylon.language.Entry<.ceylon.language.Integer, .ceylon.language.String>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.instance(1L), .ceylon.language.String.instance("a"));
                
                case 1: 
                    return new .ceylon.language.Entry<.ceylon.language.Integer, .ceylon.language.String>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.instance(2L), .ceylon.language.String.instance("b"));
                
                case 2: 
                    return new .ceylon.language.Entry<.ceylon.language.Integer, .ceylon.language.String>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.instance(3L), .ceylon.language.String.instance("c"));
                
                default: 
                    return null;
                
                }
            }
        }.iterator();
        loop_7: while (!((elem$18 = $byte$iterator$$19.next()) instanceof .ceylon.language.Finished)) {
            final long $byte = ((.ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.String>)elem$18).getKey().longValue();
            final .java.lang.String long = ((.ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.String>)elem$18).getItem().toString();
            if ($byte > 5L) {
            }
        }
    }
}
public final class keywordInForLoop2_ {
    
    private keywordInForLoop2_() {
    }
    
    public static long keywordInForLoop2(final .ceylon.language.Sequence<? extends .ceylon.language.Integer> seq) {
        boolean doforelse$21 = true;
        .java.lang.Object elem$22;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> $byte$iterator$$23 = seq.iterator();
        loop_8: while (!((elem$22 = $byte$iterator$$23.next()) instanceof .ceylon.language.Finished)) {
            final long $byte = ((.ceylon.language.Integer)elem$22).longValue();
            loop_9: while (true) {
                if (true) {
                    boolean doforelse$24 = true;
                    .java.lang.Object elem$25;
                    .ceylon.language.Iterator<? extends .ceylon.language.Integer> $long$iterator$$26 = seq.iterator();
                    loop_10: while (!((elem$25 = $long$iterator$$26.next()) instanceof .ceylon.language.Finished)) {
                        final long $long = ((.ceylon.language.Integer)elem$25).longValue();
                        if ($byte > $long) {
                            doforelse$24 = false;
                            break loop_10;
                        }
                    }
                    if (doforelse$24) {
                        return 1L;
                    }
                    break loop_9;
                } else break loop_9;
            }
            doforelse$21 = false;
            break loop_8;
        }
        if (doforelse$21) {
            return 0L;
        }
        return 2L;
    }
}
class KeywordInForLoop3 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    KeywordInForLoop3(final long age) {
        this.age = age;
        final .ceylon.language.Sequential<? extends .com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3> people = new .ceylon.language.Tuple<.com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3, .com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3, .ceylon.language.Tuple<.com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3, ? extends .com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3, ? extends .ceylon.language.Sequential<? extends .com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3>>>(.com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3.$TypeDescriptor$, new .java.lang.Object[]{
                new .com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3(1L),
                new .com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3(18L)});
        final boolean minors;
        boolean minors$28 = false;
        boolean doforelse$29 = true;
        .java.lang.Object elem$30;
        .ceylon.language.Iterator<? extends .com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3> $byte$iterator$$31 = people.iterator();
        loop_11: while (!((elem$30 = $byte$iterator$$31.next()) instanceof .ceylon.language.Finished)) {
            final .com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3 $byte = (.com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3)elem$30;
            if ($byte.getAge() < 18L) {
                minors$28 = true;
                final boolean minors$33 = minors$28;
                doforelse$29 = false;
                break loop_11;
            }
        }
        if (doforelse$29) {
            minors$28 = false;
            final boolean minors$34 = minors$28;
        }
        minors = minors$28;
    }
    private final long age;
    
    public final long getAge() {
        return age;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.quoting.$goto.KeywordInForLoop3.class);
}