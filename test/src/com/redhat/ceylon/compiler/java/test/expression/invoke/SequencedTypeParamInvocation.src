package com.redhat.ceylon.compiler.java.test.expression.invoke;

class SequencedTypeParamInvocation<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    SequencedTypeParamInvocation(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT) {
        this.$reifiedT = $reifiedT;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT;
    
    public final void algo() {
        (
            let
            {
                .ceylon.language.Sequential<? extends T> $ceylontmp$strings$1 = algo$strings();
                algo($ceylontmp$strings$1);
            }
            returning null;
        );
    }
    
    public final .ceylon.language.Sequential<? extends T> algo$strings() {
        return (.ceylon.language.Sequential).ceylon.language.empty_.getEmpty$();
    }
    
    public final void algo(final .ceylon.language.Sequential<? extends T> strings) {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.SequencedTypeParamInvocation(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.SequencedTypeParamInvocation.class, $reifiedT);
    }
}
final class sequencedTypeParamInvocationMethod_ {
    
    private sequencedTypeParamInvocationMethod_() {
    }
    
    static void sequencedTypeParamInvocationMethod() {
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.SequencedTypeParamInvocation<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor).algo(.ceylon.language.ArraySequence.<.ceylon.language.String>instance(.ceylon.language.String.$TypeDescriptor, new .java.lang.Object[]{
                .ceylon.language.String.instance("x"),
                .ceylon.language.String.instance("y")}));
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.sequencedTypeParamInvocationMethod_.sequencedTypeParamInvocationMethod();
    }
}