package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class methodArgumentNamedIncovation_ {
    
    private methodArgumentNamedIncovation_() {
    }
    
    static void methodArgumentNamedIncovation() {
        
        final class callFunction_ {
            
            private callFunction_() {
            }
            
            void callFunction(final .ceylon.language.Callable<? extends .ceylon.language.String> f) {
            }
        }
        final callFunction_ callFunction = new callFunction_();
        (
            let
            {
                .ceylon.language.Callable arg$0$0 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "String(Integer)", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.String $call(final .java.lang.Object $param$0) {
                        final long i = ((.ceylon.language.Integer)$param$0).longValue();
                        return .ceylon.language.String.instance(.ceylon.language.Integer.instance(i).power(.ceylon.language.Integer.instance(2L)).toString());
                    }
                };
                callFunction.callFunction(arg$0$0);
            }
            returning null;
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.methodArgumentNamedIncovation_.methodArgumentNamedIncovation();
    }
}