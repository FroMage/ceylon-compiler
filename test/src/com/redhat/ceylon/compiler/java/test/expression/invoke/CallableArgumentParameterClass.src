package com.redhat.ceylon.compiler.java.test.expression.invoke;

class CallableArgumentParameterClass {
    
    CallableArgumentParameterClass() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentParameterClass();
    }
}
final class callableArgumentParameterClass_f_ {
    
    private callableArgumentParameterClass_f_() {
    }
    
    static void callableArgumentParameterClass_f(final .ceylon.language.Callable<? extends .java.lang.Object> foo) {
    }
}
final class callableArgumentParameterClass_bar_ {
    
    private callableArgumentParameterClass_bar_() {
    }
    
    static void callableArgumentParameterClass_bar(final .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentParameterClass c) {
    }
}
final class callableArgumentParameterClass_m_ {
    
    private callableArgumentParameterClass_m_() {
    }
    
    static void callableArgumentParameterClass_m() {
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterClass_f_.callableArgumentParameterClass_f(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("ceylon.language::Callable<ceylon.language::Void,com.redhat.ceylon.compiler.java.test.expression.invoke::CallableArgumentParameterClass>"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterClass_bar_.callableArgumentParameterClass_bar((.com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentParameterClass)$param$0);
                    }
                    returning null;
                );
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterClass_m_.callableArgumentParameterClass_m();
    }
}