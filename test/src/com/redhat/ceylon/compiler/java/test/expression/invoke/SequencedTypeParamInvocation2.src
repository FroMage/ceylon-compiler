package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class sequencedTypeParamInvocation2_ {
    
    private sequencedTypeParamInvocation2_() {
    }
    
    static <T>void sequencedTypeParamInvocation2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT) {
        (
            let
            {
                .ceylon.language.Sequential<? extends T> $ceylontmp$ts$0 = .com.redhat.ceylon.compiler.java.test.expression.invoke.sequencedTypeParamInvocation2_.sequencedTypeParamInvocation2$ts($reifiedT);
                sequencedTypeParamInvocation2($reifiedT, $ceylontmp$ts$0);
            }
            returning null;
        );
    }
    
    static final <T>.ceylon.language.Sequential<? extends T> sequencedTypeParamInvocation2$ts(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT) {
        return (.ceylon.language.Sequential).ceylon.language.empty_.$get();
    }
    
    static <T>void sequencedTypeParamInvocation2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT, final .ceylon.language.Sequential<? extends T> ts) {
    }
}
final class sequencedTypeParamInvocation2_test_ {
    
    private sequencedTypeParamInvocation2_test_() {
    }
    
    static void sequencedTypeParamInvocation2_test() {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $arg$1$0 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L));
                .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $arg$1$reified$0 = .ceylon.language.Integer.$TypeDescriptor;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.sequencedTypeParamInvocation2_.<.ceylon.language.Integer>sequencedTypeParamInvocation2($arg$1$reified$0, $arg$1$0);
            }
            returning null;
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.sequencedTypeParamInvocation2_test_.sequencedTypeParamInvocation2_test();
    }
}