package com.redhat.ceylon.compiler.java.test.issues.bug15xx;

final class bug1507_ {
    
    private bug1507_() {
    }
    
    static void bug1507() {
        try {
            final .com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper i;
            .com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper i$0 = null;
            if (new .java.util.Random().nextBoolean()) {
                i = new .com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper(2L);
            } else {
                boolean doforelse$2 = true;
                final long $ceylontmp$start$3 = 0L;
                final long $ceylontmp$end$4 = new .java.util.Random().nextInt(.com.redhat.ceylon.compiler.java.Util.toInt(10L));
                final boolean $ceylontmp$increasing$5 = $ceylontmp$start$3 <= $ceylontmp$end$4;
                final long $ceylontmp$incr$6 = $ceylontmp$increasing$5 ? 1L : -1L;
                loop_0: for (long j$7 = $ceylontmp$start$3; $ceylontmp$increasing$5 ? j$7 - $ceylontmp$end$4 <= 0L : j$7 - $ceylontmp$end$4 >= 0L; j$7 += $ceylontmp$incr$6) {
                    final long j = j$7;
                    .java.lang.Object k$9;
                    if ((k$9 = .com.redhat.ceylon.compiler.java.test.issues.bug15xx.bug1507generateInt_.bug1507generateInt(j == 0L)) != null) {
                        final .com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper k$10 = (.com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper)k$9;
                        i$0 = k$10;
                        final .com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper i$11 = i$0;
                        .ceylon.language.process_.get_().write(new .java.lang.StringBuilder().append("J is ").append(j).toString());
                        doforelse$2 = false;
                        break loop_0;
                    } else {
                        .ceylon.language.process_.get_().write("Nope");
                    }
                }
                if (doforelse$2) {
                    throw new .ceylon.language.Exception(null, null);
                }
                i = i$0;
            }
            .ceylon.language.process_.get_().write(.ceylon.language.Integer.toString(.ceylon.language.Integer.minus(i.getWrappedInt(), 1L)));
        } catch (final .java.lang.Exception e) {
            .ceylon.language.process_.get_().write(e.toString());
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug15xx.bug1507_.bug1507();
    }
}
class Bug1507IntWrapper implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    Bug1507IntWrapper(final long wrappedInt) {
        this.wrappedInt = wrappedInt;
    }
    private final long wrappedInt;
    
    public final long getWrappedInt() {
        return wrappedInt;
    }
    
    @.java.lang.Override
    public final .java.lang.String toString() {
        return .ceylon.language.Integer.toString(getWrappedInt());
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper.class);
}
final class bug1507generateInt_ {
    
    private bug1507generateInt_() {
    }
    
    static .com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper bug1507generateInt(final boolean b) {
        if (b) {
            return new .com.redhat.ceylon.compiler.java.test.issues.bug15xx.Bug1507IntWrapper(5L);
        }
        return null;
    }
}
final class bug1507test_ {
    
    private bug1507test_() {
    }
    
    static void bug1507test() {
        final boolean found;
        boolean found$13 = false;
        final .ceylon.language.Array<.ceylon.language.Integer> array = .ceylon.language.arrayOfSize_.<.ceylon.language.Integer>arrayOfSize(.ceylon.language.Integer.$TypeDescriptor$, 2L, .ceylon.language.Integer.instance(0L));
        boolean doforelse$14 = true;
        .java.lang.Object elem$15;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> i$iterator$$16 = array.iterator();
        loop_1: while (!((elem$15 = i$iterator$$16.next()) instanceof .ceylon.language.Finished)) {
            final long i = ((.ceylon.language.Integer)elem$15).longValue();
            if (i == 0L) {
                found$13 = true;
                final boolean found$18 = found$13;
                doforelse$14 = false;
                break loop_1;
            } else {
                .ceylon.language.process_.get_().write("");
            }
        }
        if (doforelse$14) {
            found$13 = false;
            final boolean found$19 = found$13;
        }
        found = found$13;
        .ceylon.language.process_.get_().write(new .java.lang.StringBuilder().append(found).toString());
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug15xx.bug1507test_.bug1507test();
    }
}
final class bug1507test2_ {
    
    private bug1507test2_() {
    }
    
    static void bug1507test2() {
        final boolean found;
        boolean found$20 = false;
        final .ceylon.language.Array<.ceylon.language.Integer> array = .ceylon.language.arrayOfSize_.<.ceylon.language.Integer>arrayOfSize(.ceylon.language.Integer.$TypeDescriptor$, 2L, .ceylon.language.Integer.instance(0L));
        boolean doforelse$24 = true;
        final .java.lang.Object array$21 = array.toArray();
        final int length$22 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$21);
        loop_2: for (int i$23 = 0; i$23 < length$22; i$23++) {
            final long i = .com.redhat.ceylon.compiler.java.Util.getIntegerArray(array$21, i$23);
            if (i == 0L) {
                found$20 = true;
                final boolean found$26 = found$20;
                doforelse$24 = false;
                break loop_2;
            } else {
                .ceylon.language.process_.get_().write("");
            }
        }
        if (doforelse$24) {
            found$20 = false;
            final boolean found$27 = found$20;
        }
        found = found$20;
        .ceylon.language.process_.get_().write(new .java.lang.StringBuilder().append(found).toString());
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug15xx.bug1507test2_.bug1507test2();
    }
}
final class bug1507test3_ {
    
    private bug1507test3_() {
    }
    
    static void bug1507test3() {
        final boolean found;
        boolean found$28 = false;
        boolean doforelse$32 = true;
        final long start$29 = 1L;
        final long end$30 = start$29 + .java.lang.Math.max(0L, 2L);
        loop_3: for (long i$31 = start$29; i$31 < end$30; i$31++) {
            final long i = i$31;
            if (i == 0L) {
                found$28 = true;
                final boolean found$34 = found$28;
                doforelse$32 = false;
                break loop_3;
            } else {
                .ceylon.language.process_.get_().write("");
            }
        }
        if (doforelse$32) {
            found$28 = false;
            final boolean found$35 = found$28;
        }
        found = found$28;
        .ceylon.language.process_.get_().write(new .java.lang.StringBuilder().append(found).toString());
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug15xx.bug1507test3_.bug1507test3();
    }
}
final class bug1507test4_ {
    
    private bug1507test4_() {
    }
    
    static void bug1507test4() {
        final boolean found;
        boolean found$36 = false;
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> span = .com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>spreadOp(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.instance(1L), 2L);
        boolean doforelse$37 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$42 = span;
        final boolean isArraySequence$43 = iterable$42 instanceof .ceylon.language.ArraySequence;
        .java.lang.Object elem$38 = null;
        final .java.lang.Object array$44;
        int i$45 = 0;
        final int length$46;
        if (isArraySequence$43) {
            array$44 = ((.ceylon.language.ArraySequence)iterable$42).$getArray$();
            i$45 = ((.ceylon.language.ArraySequence)iterable$42).$getFirst$();
            length$46 = i$45 + ((.ceylon.language.ArraySequence)iterable$42).$getLength$();
        } else {
            array$44 = null;
            length$46 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> i$iterator$$39 = isArraySequence$43 ? null : iterable$42.iterator();
        loop_4: while (isArraySequence$43 ? i$45 < length$46 : !((elem$38 = i$iterator$$39.next()) instanceof .ceylon.language.Finished)) {
            if (isArraySequence$43) elem$38 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$44, i$45++);
            final long i = ((.ceylon.language.Integer)elem$38).longValue();
            if (i == 0L) {
                found$36 = true;
                final boolean found$41 = found$36;
                doforelse$37 = false;
                break loop_4;
            } else {
                .ceylon.language.process_.get_().write("");
            }
        }
        if (doforelse$37) {
            found$36 = false;
            final boolean found$47 = found$36;
        }
        found = found$36;
        .ceylon.language.process_.get_().write(new .java.lang.StringBuilder().append(found).toString());
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug15xx.bug1507test4_.bug1507test4();
    }
}
final class bug1507test5_ {
    
    private bug1507test5_() {
    }
    
    static void bug1507test5() {
        final boolean found;
        boolean found$48 = false;
        final .ceylon.language.Range<.ceylon.language.Integer> range = new .ceylon.language.Range<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L));
        boolean doforelse$53 = true;
        final .ceylon.language.Range<.ceylon.language.Integer> range$49 = range;
        final .ceylon.language.Integer last$50 = range$49.getLast();
        final boolean deceasing$51 = range$49.getDecreasing();
        loop_5: for (.ceylon.language.Integer item$52 = range$49.getFirst(); item$52.compare(last$50) != (deceasing$51 ? .ceylon.language.smaller_.get_() : .ceylon.language.larger_.get_()); item$52 = deceasing$51 ? item$52.getPredecessor() : item$52.getSuccessor()) {
            final long i = item$52.longValue();
            if (i == 0L) {
                found$48 = true;
                final boolean found$55 = found$48;
                doforelse$53 = false;
                break loop_5;
            } else {
                .ceylon.language.process_.get_().write("");
            }
        }
        if (doforelse$53) {
            found$48 = false;
            final boolean found$56 = found$48;
        }
        found = found$48;
        .ceylon.language.process_.get_().write(new .java.lang.StringBuilder().append(found).toString());
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug15xx.bug1507test5_.bug1507test5();
    }
}
final class bug1507test6_ {
    
    private bug1507test6_() {
    }
    
    static void bug1507test6() {
        final boolean found;
        boolean found$57 = false;
        boolean doforelse$58 = true;
        final long $ceylontmp$start$59 = 1L;
        final long $ceylontmp$end$60 = 2L;
        final boolean $ceylontmp$increasing$61 = $ceylontmp$start$59 <= $ceylontmp$end$60;
        final long $ceylontmp$incr$62 = $ceylontmp$increasing$61 ? 1L : -1L;
        loop_6: for (long i$63 = $ceylontmp$start$59; $ceylontmp$increasing$61 ? i$63 - $ceylontmp$end$60 <= 0L : i$63 - $ceylontmp$end$60 >= 0L; i$63 += $ceylontmp$incr$62) {
            final long i = i$63;
            if (i == 0L) {
                found$57 = true;
                final boolean found$65 = found$57;
                doforelse$58 = false;
                break loop_6;
            } else {
                .ceylon.language.process_.get_().write("");
            }
        }
        if (doforelse$58) {
            found$57 = false;
            final boolean found$66 = found$57;
        }
        found = found$57;
        .ceylon.language.process_.get_().write(new .java.lang.StringBuilder().append(found).toString());
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug15xx.bug1507test6_.bug1507test6();
    }
}