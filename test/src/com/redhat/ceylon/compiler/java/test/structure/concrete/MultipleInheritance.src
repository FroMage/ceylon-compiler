package com.redhat.ceylon.compiler.java.test.structure.concrete;

public interface MultipleInheritance {
    
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$impl();
    
    public long getA();
    
    public void setA(final long a);
    
    public .java.lang.Object m();
}
public final class MultipleInheritance$impl {
    
    public MultipleInheritance$impl(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance $this;
    
    public final long getA() {
        return 1L;
    }
    
    public final void setA(final long a) {
    }
    
    public .java.lang.Object m() {
        return null;
    }
}
class MultipleInheritanceImpl implements .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance {
    
    MultipleInheritanceImpl() {
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this = new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl(this);
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this;
    }
    
    @.java.lang.Override
    public long getA() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this.getA();
    }
    
    @.java.lang.Override
    public void setA(final long a) {
        $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this.setA(a);
    }
    
    @.java.lang.Override
    public .java.lang.Object m() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this.m();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImpl();
    }
}
interface MultipleInheritanceSub extends .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance {
    
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritanceSub$impl();
}
final class MultipleInheritanceSub$impl {
    
    MultipleInheritanceSub$impl(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub $this;
}
class MultipleInheritanceSubImpl implements .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub {
    
    MultipleInheritanceSubImpl() {
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritanceSub$this = new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub$impl(this);
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this = new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl(this);
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritanceSub$this;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritanceSub$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritanceSub$this;
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this;
    }
    
    @.java.lang.Override
    public long getA() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this.getA();
    }
    
    @.java.lang.Override
    public void setA(final long a) {
        $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this.setA(a);
    }
    
    @.java.lang.Override
    public .java.lang.Object m() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this.m();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImpl();
    }
}
class MultipleInheritanceImplSub extends .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImpl implements .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub {
    
    MultipleInheritanceImplSub() {
        super();
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritanceSub$this = new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub$impl(this);
        this.a = 1L;
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritanceSub$this;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritanceSub$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritanceSub$this;
    }
    private long a;
    
    @.java.lang.Override
    public final long getA() {
        return a;
    }
    
    @.java.lang.Override
    public final void setA(final long a) {
        this.a = a;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m() {
        $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this.m();
        return null;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImplSub();
    }
}
class MultipleInheritanceSubImplSub extends .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImpl implements .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance {
    
    MultipleInheritanceSubImplSub() {
        super();
        this.a = 1L;
    }
    private long a;
    
    @.java.lang.Override
    public final long getA() {
        return a;
    }
    
    @.java.lang.Override
    public final void setA(final long a) {
        this.a = a;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m() {
        $com$redhat$ceylon$compiler$java$test$structure$concrete$MultipleInheritance$this.m();
        return null;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImplSub();
    }
}