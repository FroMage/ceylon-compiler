package com.redhat.ceylon.compiler.java.test.issues.bug06xx;

class Bug689<X, Y> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    Bug689(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedY, final X x, final Y y, final .java.lang.Object xy) {
        this.$reifiedX = $reifiedX;
        this.$reifiedY = $reifiedY;
        this.attributeWithUnion = new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), x, y);
        this.attributeWithIntersection = new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.intersection($reifiedX, $reifiedY), xy);
        this.variableWithUnion = new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), x, y);
        this.variableWithIntersection = new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.intersection($reifiedX, $reifiedY), xy);
        this.attributeWithUnionWithinTypeArg = new .ceylon.language.Tuple<.ceylon.language.Tuple<.java.lang.Object, ? extends X, ? extends .ceylon.language.Tuple<Y, ? extends Y, ? extends .ceylon.language.Empty>>, .ceylon.language.Tuple<.java.lang.Object, ? extends X, ? extends .ceylon.language.Tuple<Y, ? extends Y, ? extends .ceylon.language.Empty>>, .ceylon.language.Empty>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), $reifiedX, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, $reifiedY, $reifiedY, .ceylon.language.Empty.$TypeDescriptor)), new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), x, y));
        this.attributeWithUnionErasedToIterable = new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), x, y);
        .ceylon.language.Number sync = null;
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)<.ceylon.language.Integer, .ceylon.language.Integer>parameterisedMethodWithUnion$priv(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L))).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)<.ceylon.language.Integer, .ceylon.language.Integer>parameterisedMethodWithIntersection$priv(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L))).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).methodWithUnion$priv(.ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L))).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).methodWithIntersection$priv(.ceylon.language.Integer.instance(1L))).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).getAttributeWithUnion$priv()).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).getAttributeWithIntersection$priv()).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).getVariableWithUnion$priv()).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).getVariableWithIntersection$priv()).getFirst();
        sync = ((.ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>)(
            let
            {
                .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer> $ceylontmpopE0 = new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
                .ceylon.language.Sequence<? extends .ceylon.language.Integer> $ceylontmpopV1 = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L));
                $ceylontmpopE0.setVariableWithUnion$priv($ceylontmpopV1);
            }
            returning $ceylontmpopV1;
        )).getFirst();
        sync = ((.ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>)(
            let
            {
                .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer> $ceylontmpopE2 = new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
                .ceylon.language.Sequence<? extends .ceylon.language.Integer> $ceylontmpopV3 = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L));
                $ceylontmpopE2.setVariableWithIntersection$priv($ceylontmpopV3);
            }
            returning $ceylontmpopV3;
        )).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Sequence<? extends .ceylon.language.Integer>>)(.ceylon.language.Sequence)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).getAttributeWithUnionWithinTypeArg$priv()).getFirst().getFirst();
        final .ceylon.language.Number o = ((.ceylon.language.List<? extends .ceylon.language.Integer>)(.ceylon.language.List)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).getAttributeWithUnionErasedToIterable$priv()).get(.ceylon.language.Integer.instance(0L));
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689_ModelLoader<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).<.ceylon.language.Integer, .ceylon.language.Integer>parameterisedMethodWithUnion(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L))).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689_ModelLoader<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).methodWithUnion(.ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L))).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689_ModelLoader<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).getAttributeWithUnion()).getFirst();
        sync = ((.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689_ModelLoader<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)).getVariableWithUnion()).getFirst();
        sync = ((.ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>)(
            let
            {
                .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689_ModelLoader<.ceylon.language.Integer, .ceylon.language.Integer> $ceylontmpopE4 = new .com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689_ModelLoader<.ceylon.language.Integer, .ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
                .ceylon.language.Sequence<? extends .ceylon.language.Integer> $ceylontmpopV5 = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>)new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L));
                $ceylontmpopE4.setVariableWithUnion($ceylontmpopV5);
            }
            returning $ceylontmpopV5;
        )).getFirst();
        final int c = ((.ceylon.language.Sequence<? extends .ceylon.language.Character>).ceylon.language.String.<.ceylon.language.Character>withLeading(.ceylon.language.Character.$TypeDescriptor, "abc", .ceylon.language.Character.instance(100))).getFirst().intValue();
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX;
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedY;
    
    private final <X, Y>.ceylon.language.Sequence parameterisedMethodWithUnion$priv(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedY, final X x, final Y y) {
        return new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), x, y);
    }
    
    private final <X, Y>.ceylon.language.Sequence parameterisedMethodWithIntersection$priv(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedY, final .java.lang.Object xy) {
        return new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.intersection($reifiedX, $reifiedY), xy);
    }
    
    private final .ceylon.language.Sequence methodWithUnion$priv(final X x, final Y y) {
        return new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), x, y);
    }
    
    private final .ceylon.language.Sequence methodWithIntersection$priv(final .java.lang.Object xy) {
        return new .ceylon.language.Tuple(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.intersection($reifiedX, $reifiedY), xy);
    }
    private final .ceylon.language.Sequence attributeWithUnion;
    
    private final .ceylon.language.Sequence getAttributeWithUnion$priv() {
        return attributeWithUnion;
    }
    private final .ceylon.language.Sequence attributeWithIntersection;
    
    private final .ceylon.language.Sequence getAttributeWithIntersection$priv() {
        return attributeWithIntersection;
    }
    private .ceylon.language.Sequence variableWithUnion;
    
    private final .ceylon.language.Sequence getVariableWithUnion$priv() {
        return variableWithUnion;
    }
    
    private final void setVariableWithUnion$priv(final .ceylon.language.Sequence variableWithUnion) {
        this.variableWithUnion = variableWithUnion;
    }
    private .ceylon.language.Sequence variableWithIntersection;
    
    private final .ceylon.language.Sequence getVariableWithIntersection$priv() {
        return variableWithIntersection;
    }
    
    private final void setVariableWithIntersection$priv(final .ceylon.language.Sequence variableWithIntersection) {
        this.variableWithIntersection = variableWithIntersection;
    }
    private final .ceylon.language.Sequence<? extends .ceylon.language.Sequence<? extends .java.lang.Object>> attributeWithUnionWithinTypeArg;
    
    private final .ceylon.language.Sequence<? extends .ceylon.language.Sequence<? extends .java.lang.Object>> getAttributeWithUnionWithinTypeArg$priv() {
        return attributeWithUnionWithinTypeArg;
    }
    private final .ceylon.language.Sequential attributeWithUnionErasedToIterable;
    
    private final .ceylon.language.Sequential getAttributeWithUnionErasedToIterable$priv() {
        return attributeWithUnionErasedToIterable;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug06xx.Bug689.class, $reifiedX, $reifiedY);
    }
}