package com.redhat.ceylon.compiler.java.test.expression.operator;

abstract class MyInteger extends .java.lang.Object implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.Integral<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger>, .ceylon.language.Exponentiable<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger, .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> {
    
    MyInteger() {
        super();
        this.$ceylon$language$Integral$this = new .ceylon.language.Integral$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger>(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.$TypeDescriptor, this);
        this.$ceylon$language$Numeric$this = new .ceylon.language.Numeric$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger>(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.$TypeDescriptor, this);
        this.$ceylon$language$Summable$this = new .ceylon.language.Summable$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger>(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.$TypeDescriptor, this);
        this.$ceylon$language$Invertable$this = new .ceylon.language.Invertable$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger>(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.$TypeDescriptor, this);
        this.$ceylon$language$Enumerable$this = new .ceylon.language.Enumerable$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger>(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.$TypeDescriptor, this);
        this.$ceylon$language$Ordinal$this = new .ceylon.language.Ordinal$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger>(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.$TypeDescriptor, this);
        this.$ceylon$language$Exponentiable$this = new .ceylon.language.Exponentiable$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger, .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger>(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.$TypeDescriptor, .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.$TypeDescriptor, this);
    }
    protected final .ceylon.language.Integral$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Integral$this;
    
    @.java.lang.Override
    public .ceylon.language.Integral$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Integral$impl() {
        return $ceylon$language$Integral$this;
    }
    
    @.java.lang.Override
    public final boolean divides(final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger other) {
        return $ceylon$language$Integral$this.divides(other);
    }
    protected final .ceylon.language.Numeric$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Numeric$this;
    
    @.java.lang.Override
    public .ceylon.language.Numeric$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Numeric$impl() {
        return $ceylon$language$Numeric$this;
    }
    protected final .ceylon.language.Summable$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Summable$this;
    
    @.java.lang.Override
    public .ceylon.language.Summable$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Summable$impl() {
        return $ceylon$language$Summable$this;
    }
    protected final .ceylon.language.Invertable$impl<? extends .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Invertable$this;
    
    @.java.lang.Override
    public .ceylon.language.Invertable$impl<? extends .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Invertable$impl() {
        return $ceylon$language$Invertable$this;
    }
    protected final .ceylon.language.Enumerable$impl<? extends .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Enumerable$this;
    
    @.java.lang.Override
    public .ceylon.language.Enumerable$impl<? extends .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Enumerable$impl() {
        return $ceylon$language$Enumerable$this;
    }
    protected final .ceylon.language.Ordinal$impl<? extends .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Ordinal$this;
    
    @.java.lang.Override
    public .ceylon.language.Ordinal$impl<? extends .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Ordinal$impl() {
        return $ceylon$language$Ordinal$this;
    }
    protected final .ceylon.language.Exponentiable$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger, .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Exponentiable$this;
    
    @.java.lang.Override
    public .ceylon.language.Exponentiable$impl<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger, .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> $ceylon$language$Exponentiable$impl() {
        return $ceylon$language$Exponentiable$this;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger.class);
}
class ArithmeticOperators implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    ArithmeticOperators(final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initN, final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initI) {
        this.initN = initN;
        this.initI = initI;
        this.n1 = 0L;
        this.n2 = 0L;
        this.i1 = 0L;
        this.boxedN1 = getInitN$priv();
        this.boxedN2 = getInitN$priv();
        this.boxedI1 = getInitI$priv();
    }
    private final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initN;
    
    private final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger getInitN$priv() {
        return initN;
    }
    private final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initI;
    
    private final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger getInitI$priv() {
        return initI;
    }
    private long n1;
    
    public final long getN1() {
        return n1;
    }
    
    public final void setN1(final long n1) {
        this.n1 = n1;
    }
    private long n2;
    
    public final long getN2() {
        return n2;
    }
    
    public final void setN2(final long n2) {
        this.n2 = n2;
    }
    private long i1;
    
    public final long getI1() {
        return i1;
    }
    
    public final void setI1(final long i1) {
        this.i1 = i1;
    }
    
    public final long getGetterN1() {
        return getN1();
    }
    
    public final void setGetterN1(final long getterN1) {
        setN1(getterN1);
    }
    
    public final long getGetterN2() {
        return getN2();
    }
    
    public final void setGetterN2(final long getterN2) {
        setN2(getterN2);
    }
    
    public final long getGetterI1() {
        return getI1();
    }
    
    public final void setGetterI1(final long getterI1) {
        setI1(getterI1);
    }
    private .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedN1;
    
    public final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger getBoxedN1() {
        return boxedN1;
    }
    
    public final void setBoxedN1(final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedN1) {
        this.boxedN1 = boxedN1;
    }
    private .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedN2;
    
    public final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger getBoxedN2() {
        return boxedN2;
    }
    
    public final void setBoxedN2(final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedN2) {
        this.boxedN2 = boxedN2;
    }
    private .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedI1;
    
    public final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger getBoxedI1() {
        return boxedI1;
    }
    
    public final void setBoxedI1(final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedI1) {
        this.boxedI1 = boxedI1;
    }
    
    private final void unboxedAttributes$priv() {
        (
            let
            {
                long $ceylontmpop$0 = getN1();
                setN1($ceylontmpop$0 + 1);
            }
            returning $ceylontmpop$0;
        );
        (
            let
            {
                long $ceylontmpop$1 = getN1() + 1;
                setN1($ceylontmpop$1);
            }
            returning $ceylontmpop$1;
        );
        (
            let
            {
                long $ceylontmpop$2 = getN1();
                setN1($ceylontmpop$2 - 1);
            }
            returning $ceylontmpop$2;
        );
        (
            let
            {
                long $ceylontmpop$3 = getN1() - 1;
                setN1($ceylontmpop$3);
            }
            returning $ceylontmpop$3;
        );
        setI1(getN1());
        setI1(-getN1());
        setN1(getN1() + getN2());
        setI1(getN1() - getN2());
        setN1(getN1() * getN2());
        setN1(getN1() / getN2());
        setN1(getN1() % getN2());
        setN1(.ceylon.language.Integer.instance(getN1()).power(.ceylon.language.Integer.instance(getN2())).longValue());
        (
            let
            {
                long $ceylontmpop$4 = getN1() + getN2();
                setN1($ceylontmpop$4);
            }
            returning $ceylontmpop$4;
        );
        (
            let
            {
                long $ceylontmpop$5 = getN1() * getN1();
                setN1($ceylontmpop$5);
            }
            returning $ceylontmpop$5;
        );
        (
            let
            {
                long $ceylontmpop$6 = getN1() / getN2();
                setN1($ceylontmpop$6);
            }
            returning $ceylontmpop$6;
        );
        (
            let
            {
                long $ceylontmpop$7 = getN1() % getN2();
                setN1($ceylontmpop$7);
            }
            returning $ceylontmpop$7;
        );
    }
    
    private final void unboxedGetterAttributes$priv() {
        (
            let
            {
                long $ceylontmpop$8 = getGetterN1();
                setGetterN1($ceylontmpop$8 + 1);
            }
            returning $ceylontmpop$8;
        );
        (
            let
            {
                long $ceylontmpop$9 = getGetterN1() + 1;
                setGetterN1($ceylontmpop$9);
            }
            returning $ceylontmpop$9;
        );
        (
            let
            {
                long $ceylontmpop$10 = getGetterN1();
                setGetterN1($ceylontmpop$10 - 1);
            }
            returning $ceylontmpop$10;
        );
        (
            let
            {
                long $ceylontmpop$11 = getGetterN1() - 1;
                setGetterN1($ceylontmpop$11);
            }
            returning $ceylontmpop$11;
        );
        setGetterI1(getGetterN1());
        setGetterI1(-getGetterN1());
        setGetterN1(getGetterN1() + getGetterN2());
        setGetterI1(getGetterN1() - getGetterN2());
        setGetterN1(getGetterN1() * getGetterN2());
        setGetterN1(getGetterN1() / getGetterN2());
        setGetterN1(getGetterN1() % getGetterN2());
        setGetterN1(.ceylon.language.Integer.instance(getGetterN1()).power(.ceylon.language.Integer.instance(getGetterN2())).longValue());
        (
            let
            {
                long $ceylontmpop$12 = getGetterN1() + getGetterN2();
                setGetterN1($ceylontmpop$12);
            }
            returning $ceylontmpop$12;
        );
        (
            let
            {
                long $ceylontmpop$13 = getGetterN1() * getGetterN1();
                setGetterN1($ceylontmpop$13);
            }
            returning $ceylontmpop$13;
        );
        (
            let
            {
                long $ceylontmpop$14 = getGetterN1() / getGetterN2();
                setGetterN1($ceylontmpop$14);
            }
            returning $ceylontmpop$14;
        );
        (
            let
            {
                long $ceylontmpop$15 = getGetterN1() % getGetterN2();
                setGetterN1($ceylontmpop$15);
            }
            returning $ceylontmpop$15;
        );
    }
    
    private final void unboxedQualifiedAttributes$priv() {
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$16 = this;
                long $ceylontmpopV$17 = $ceylontmpopE$16.getN1();
                $ceylontmpopE$16.setN1($ceylontmpopV$17 + 1);
            }
            returning $ceylontmpopV$17;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$18 = this;
                long $ceylontmpopV$19 = $ceylontmpopE$18.getN1() + 1;
                $ceylontmpopE$18.setN1($ceylontmpopV$19);
            }
            returning $ceylontmpopV$19;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$20 = this;
                long $ceylontmpopV$21 = $ceylontmpopE$20.getN1();
                $ceylontmpopE$20.setN1($ceylontmpopV$21 - 1);
            }
            returning $ceylontmpopV$21;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$22 = this;
                long $ceylontmpopV$23 = $ceylontmpopE$22.getN1() - 1;
                $ceylontmpopE$22.setN1($ceylontmpopV$23);
            }
            returning $ceylontmpopV$23;
        );
        this.setI1(this.getN1());
        this.setI1(-this.getN1());
        this.setN1(this.getN1() + this.getN2());
        this.setI1(this.getN1() - this.getN2());
        this.setN1(this.getN1() * this.getN2());
        this.setN1(this.getN1() / this.getN2());
        this.setN1(this.getN1() % this.getN2());
        this.setN1(.ceylon.language.Integer.instance(this.getN1()).power(.ceylon.language.Integer.instance(this.getN2())).longValue());
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$24 = this;
                long $ceylontmpopV$25 = $ceylontmpopE$24.getN1() + this.getN2();
                $ceylontmpopE$24.setN1($ceylontmpopV$25);
            }
            returning $ceylontmpopV$25;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$26 = this;
                long $ceylontmpopV$27 = $ceylontmpopE$26.getN1() * this.getN1();
                $ceylontmpopE$26.setN1($ceylontmpopV$27);
            }
            returning $ceylontmpopV$27;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$28 = this;
                long $ceylontmpopV$29 = $ceylontmpopE$28.getN1() / this.getN2();
                $ceylontmpopE$28.setN1($ceylontmpopV$29);
            }
            returning $ceylontmpopV$29;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$30 = this;
                long $ceylontmpopV$31 = $ceylontmpopE$30.getN1() % this.getN2();
                $ceylontmpopE$30.setN1($ceylontmpopV$31);
            }
            returning $ceylontmpopV$31;
        );
    }
    
    public .java.lang.Object unboxedQualifiedGetterAttributes() {
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$32 = this;
                long $ceylontmpopV$33 = $ceylontmpopE$32.getGetterN1();
                $ceylontmpopE$32.setGetterN1($ceylontmpopV$33 + 1);
            }
            returning $ceylontmpopV$33;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$34 = this;
                long $ceylontmpopV$35 = $ceylontmpopE$34.getGetterN1() + 1;
                $ceylontmpopE$34.setGetterN1($ceylontmpopV$35);
            }
            returning $ceylontmpopV$35;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$36 = this;
                long $ceylontmpopV$37 = $ceylontmpopE$36.getGetterN1();
                $ceylontmpopE$36.setGetterN1($ceylontmpopV$37 - 1);
            }
            returning $ceylontmpopV$37;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$38 = this;
                long $ceylontmpopV$39 = $ceylontmpopE$38.getGetterN1() - 1;
                $ceylontmpopE$38.setGetterN1($ceylontmpopV$39);
            }
            returning $ceylontmpopV$39;
        );
        this.setGetterI1(this.getGetterN1());
        this.setGetterI1(-this.getGetterN1());
        this.setGetterN1(this.getGetterN1() + this.getGetterN2());
        this.setGetterI1(this.getGetterN1() - this.getGetterN2());
        this.setGetterN1(this.getGetterN1() * this.getGetterN2());
        this.setGetterN1(this.getGetterN1() / this.getGetterN2());
        this.setGetterN1(this.getGetterN1() % this.getGetterN2());
        this.setGetterN1(.ceylon.language.Integer.instance(this.getGetterN1()).power(.ceylon.language.Integer.instance(this.getGetterN2())).longValue());
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$40 = this;
                long $ceylontmpopV$41 = $ceylontmpopE$40.getGetterN1() + this.getGetterN2();
                $ceylontmpopE$40.setGetterN1($ceylontmpopV$41);
            }
            returning $ceylontmpopV$41;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$42 = this;
                long $ceylontmpopV$43 = $ceylontmpopE$42.getGetterN1() * this.getGetterN1();
                $ceylontmpopE$42.setGetterN1($ceylontmpopV$43);
            }
            returning $ceylontmpopV$43;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$44 = this;
                long $ceylontmpopV$45 = $ceylontmpopE$44.getGetterN1() / this.getGetterN2();
                $ceylontmpopE$44.setGetterN1($ceylontmpopV$45);
            }
            returning $ceylontmpopV$45;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$46 = this;
                long $ceylontmpopV$47 = $ceylontmpopE$46.getGetterN1() % this.getGetterN2();
                $ceylontmpopE$46.setGetterN1($ceylontmpopV$47);
            }
            returning $ceylontmpopV$47;
        );
        return null;
    }
    
    public .java.lang.Object boxedQualifiedAttributes() {
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$48 = this;
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$49 = $ceylontmpopE$48.getBoxedN1();
                $ceylontmpopE$48.setBoxedN1($ceylontmpopV$49.getSuccessor());
            }
            returning $ceylontmpopV$49;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$50 = this;
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$51 = $ceylontmpopE$50.getBoxedN1().getSuccessor();
                $ceylontmpopE$50.setBoxedN1($ceylontmpopV$51);
            }
            returning $ceylontmpopV$51;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$52 = this;
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$53 = $ceylontmpopE$52.getBoxedN1();
                $ceylontmpopE$52.setBoxedN1($ceylontmpopV$53.getPredecessor());
            }
            returning $ceylontmpopV$53;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$54 = this;
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$55 = $ceylontmpopE$54.getBoxedN1().getPredecessor();
                $ceylontmpopE$54.setBoxedN1($ceylontmpopV$55);
            }
            returning $ceylontmpopV$55;
        );
        this.setBoxedI1(this.getBoxedN1().getPositiveValue());
        this.setBoxedI1(this.getBoxedN1().getNegativeValue());
        this.setBoxedN1(this.getBoxedN1().plus(this.getBoxedN2()));
        this.setBoxedI1(this.getBoxedN1().minus(this.getBoxedN2()));
        this.setBoxedN1(this.getBoxedN1().times(this.getBoxedN2()));
        this.setBoxedN1(this.getBoxedN1().divided(this.getBoxedN2()));
        this.setBoxedN1(this.getBoxedN1().remainder(this.getBoxedN2()));
        this.setBoxedN1(this.getBoxedN1().power(this.getBoxedN2()));
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$56 = this;
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$57 = $ceylontmpopE$56.getBoxedN1().plus(this.getBoxedN2());
                $ceylontmpopE$56.setBoxedN1($ceylontmpopV$57);
            }
            returning $ceylontmpopV$57;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$58 = this;
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$59 = $ceylontmpopE$58.getBoxedN1().times(this.getBoxedN1());
                $ceylontmpopE$58.setBoxedN1($ceylontmpopV$59);
            }
            returning $ceylontmpopV$59;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$60 = this;
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$61 = $ceylontmpopE$60.getBoxedN1().divided(this.getBoxedN2());
                $ceylontmpopE$60.setBoxedN1($ceylontmpopV$61);
            }
            returning $ceylontmpopV$61;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE$62 = this;
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$63 = $ceylontmpopE$62.getBoxedN1().remainder(this.getBoxedN2());
                $ceylontmpopE$62.setBoxedN1($ceylontmpopV$63);
            }
            returning $ceylontmpopV$63;
        );
        return null;
    }
    
    private final void unboxedLocals$priv() {
        long n1 = 0L;
        long n2 = 0L;
        long i1 = 0L;
        n1++;
        ++n1;
        n1--;
        --n1;
        i1 = n1;
        i1 = -n1;
        n1 = n1 + n2;
        i1 = n1 - n2;
        n1 = n1 * n2;
        n1 = n1 / n2;
        n1 = n1 % n2;
        n1 = .ceylon.language.Integer.instance(n1).power(.ceylon.language.Integer.instance(n2)).longValue();
        n1 += n2;
        n1 *= n1;
        n1 /= n2;
        n1 %= n2;
    }
    
    private final void unboxedLocalGetters$priv() {
        final .com.redhat.ceylon.compiler.java.language.VariableBoxLong n1 = new .com.redhat.ceylon.compiler.java.language.VariableBoxLong(0L);
        final .com.redhat.ceylon.compiler.java.language.VariableBoxLong n2 = new .com.redhat.ceylon.compiler.java.language.VariableBoxLong(0L);
        final .com.redhat.ceylon.compiler.java.language.VariableBoxLong i1 = new .com.redhat.ceylon.compiler.java.language.VariableBoxLong(0L);
        
        final class getterN1$getter_ implements .com.redhat.ceylon.compiler.java.language.GetterLong {
            
            private getterN1$getter_() {
            }
            
            public long get_() {
                return n1.ref;
            }
        }
        final .com.redhat.ceylon.compiler.java.language.GetterLong getterN1$getter_ = new getterN1$getter_();
        
        final class getterN1$setter_ {
            
            private getterN1$setter_() {
            }
            private long value;
            
            public void set_(final long getterN1) {
                n1.ref = getterN1;
            }
        }
        final getterN1$setter_ getterN1$setter_ = new getterN1$setter_();
        
        final class getterN2$getter_ implements .com.redhat.ceylon.compiler.java.language.GetterLong {
            
            private getterN2$getter_() {
            }
            
            public long get_() {
                return n2.ref;
            }
        }
        final .com.redhat.ceylon.compiler.java.language.GetterLong getterN2$getter_ = new getterN2$getter_();
        
        final class getterN2$setter_ {
            
            private getterN2$setter_() {
            }
            private long value;
            
            public void set_(final long getterN2) {
                n2.ref = getterN2;
            }
        }
        final getterN2$setter_ getterN2$setter_ = new getterN2$setter_();
        
        final class getterI1$getter_ implements .com.redhat.ceylon.compiler.java.language.GetterLong {
            
            private getterI1$getter_() {
            }
            
            public long get_() {
                return i1.ref;
            }
        }
        final .com.redhat.ceylon.compiler.java.language.GetterLong getterI1$getter_ = new getterI1$getter_();
        
        final class getterI1$setter_ {
            
            private getterI1$setter_() {
            }
            private long value;
            
            public void set_(final long getterI1) {
                i1.ref = getterI1;
            }
        }
        final getterI1$setter_ getterI1$setter_ = new getterI1$setter_();
        (
            let
            {
                long $ceylontmpop$64 = getterN1$getter_.get_();
                getterN1$setter_.set_($ceylontmpop$64 + 1);
            }
            returning $ceylontmpop$64;
        );
        (
            let
            {
                long $ceylontmpop$65 = getterN1$getter_.get_() + 1;
                getterN1$setter_.set_($ceylontmpop$65);
            }
            returning $ceylontmpop$65;
        );
        (
            let
            {
                long $ceylontmpop$66 = getterN1$getter_.get_();
                getterN1$setter_.set_($ceylontmpop$66 - 1);
            }
            returning $ceylontmpop$66;
        );
        (
            let
            {
                long $ceylontmpop$67 = getterN1$getter_.get_() - 1;
                getterN1$setter_.set_($ceylontmpop$67);
            }
            returning $ceylontmpop$67;
        );
        getterI1$setter_.set_(getterN1$getter_.get_());
        getterI1$setter_.set_(-getterN1$getter_.get_());
        getterN1$setter_.set_(getterN1$getter_.get_() + getterN2$getter_.get_());
        getterI1$setter_.set_(getterN1$getter_.get_() - getterN2$getter_.get_());
        getterN1$setter_.set_(getterN1$getter_.get_() * getterN2$getter_.get_());
        getterN1$setter_.set_(getterN1$getter_.get_() / getterN2$getter_.get_());
        getterN1$setter_.set_(getterN1$getter_.get_() % getterN2$getter_.get_());
        getterN1$setter_.set_(.ceylon.language.Integer.instance(getterN1$getter_.get_()).power(.ceylon.language.Integer.instance(getterN2$getter_.get_())).longValue());
        (
            let
            {
                long $ceylontmpop$68 = getterN1$getter_.get_() + getterN2$getter_.get_();
                getterN1$setter_.set_($ceylontmpop$68);
            }
            returning $ceylontmpop$68;
        );
        (
            let
            {
                long $ceylontmpop$69 = getterN1$getter_.get_() * getterN1$getter_.get_();
                getterN1$setter_.set_($ceylontmpop$69);
            }
            returning $ceylontmpop$69;
        );
        (
            let
            {
                long $ceylontmpop$70 = getterN1$getter_.get_() / getterN2$getter_.get_();
                getterN1$setter_.set_($ceylontmpop$70);
            }
            returning $ceylontmpop$70;
        );
        (
            let
            {
                long $ceylontmpop$71 = getterN1$getter_.get_() % getterN2$getter_.get_();
                getterN1$setter_.set_($ceylontmpop$71);
            }
            returning $ceylontmpop$71;
        );
    }
    
    private final void boxedLocals$priv() {
        .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger n1 = getInitN$priv();
        .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger n2 = getInitN$priv();
        .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger i1 = getInitI$priv();
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop$72 = n1;
                n1 = $ceylontmpop$72.getSuccessor();
            }
            returning $ceylontmpop$72;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop$73 = n1.getSuccessor();
                n1 = $ceylontmpop$73;
            }
            returning $ceylontmpop$73;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop$74 = n1;
                n1 = $ceylontmpop$74.getPredecessor();
            }
            returning $ceylontmpop$74;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop$75 = n1.getPredecessor();
                n1 = $ceylontmpop$75;
            }
            returning $ceylontmpop$75;
        );
        i1 = n1.getPositiveValue();
        i1 = n1.getNegativeValue();
        n1 = n1.plus(n2);
        i1 = n1.minus(n2);
        n1 = n1.times(n2);
        n1 = n1.divided(n2);
        n1 = n1.remainder(n2);
        n1 = n1.power(n2);
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop$76 = n1.plus(n2);
                n1 = $ceylontmpop$76;
            }
            returning $ceylontmpop$76;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop$77 = n1.times(n1);
                n1 = $ceylontmpop$77;
            }
            returning $ceylontmpop$77;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop$78 = n1.divided(n2);
                n1 = $ceylontmpop$78;
            }
            returning $ceylontmpop$78;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop$79 = n1.remainder(n2);
                n1 = $ceylontmpop$79;
            }
            returning $ceylontmpop$79;
        );
    }
    
    private final void unboxedToplevel$priv() {
        (
            let
            {
                long $ceylontmpop$80 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_($ceylontmpop$80 + 1);
            }
            returning $ceylontmpop$80;
        );
        (
            let
            {
                long $ceylontmpop$81 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() + 1;
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_($ceylontmpop$81);
            }
            returning $ceylontmpop$81;
        );
        (
            let
            {
                long $ceylontmpop$82 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_($ceylontmpop$82 - 1);
            }
            returning $ceylontmpop$82;
        );
        (
            let
            {
                long $ceylontmpop$83 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() - 1;
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_($ceylontmpop$83);
            }
            returning $ceylontmpop$83;
        );
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1_.set_(-.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() + .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() - .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() * .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() / .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() % .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_(.ceylon.language.Integer.instance(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_()).power(.ceylon.language.Integer.instance(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_())).longValue());
        (
            let
            {
                long $ceylontmpop$84 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() + .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_($ceylontmpop$84);
            }
            returning $ceylontmpop$84;
        );
        (
            let
            {
                long $ceylontmpop$85 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() * .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_($ceylontmpop$85);
            }
            returning $ceylontmpop$85;
        );
        (
            let
            {
                long $ceylontmpop$86 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() / .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_($ceylontmpop$86);
            }
            returning $ceylontmpop$86;
        );
        (
            let
            {
                long $ceylontmpop$87 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_() % .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_($ceylontmpop$87);
            }
            returning $ceylontmpop$87;
        );
    }
    
    private final void unboxedToplevelGetter$priv() {
        (
            let
            {
                long $ceylontmpop$88 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_($ceylontmpop$88 + 1);
            }
            returning $ceylontmpop$88;
        );
        (
            let
            {
                long $ceylontmpop$89 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() + 1;
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_($ceylontmpop$89);
            }
            returning $ceylontmpop$89;
        );
        (
            let
            {
                long $ceylontmpop$90 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_($ceylontmpop$90 - 1);
            }
            returning $ceylontmpop$90;
        );
        (
            let
            {
                long $ceylontmpop$91 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() - 1;
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_($ceylontmpop$91);
            }
            returning $ceylontmpop$91;
        );
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterI1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterI1_.set_(-.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() + .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterI1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() - .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() * .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() / .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() % .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2_.get_());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_(.ceylon.language.Integer.instance(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_()).power(.ceylon.language.Integer.instance(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2_.get_())).longValue());
        (
            let
            {
                long $ceylontmpop$92 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() + .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_($ceylontmpop$92);
            }
            returning $ceylontmpop$92;
        );
        (
            let
            {
                long $ceylontmpop$93 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() * .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_($ceylontmpop$93);
            }
            returning $ceylontmpop$93;
        );
        (
            let
            {
                long $ceylontmpop$94 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() / .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_($ceylontmpop$94);
            }
            returning $ceylontmpop$94;
        );
        (
            let
            {
                long $ceylontmpop$95 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.get_() % .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2_.get_();
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1_.set_($ceylontmpop$95);
            }
            returning $ceylontmpop$95;
        );
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators.class);
}
class ArithmeticOperatorsSub extends .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators {
    
    ArithmeticOperatorsSub(final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initN, final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initI) {
        super(initN, initI);
    }
    
    @.java.lang.Override
    public final .java.lang.Object unboxedQualifiedGetterAttributes() {
        (
            let
            {
                long $ceylontmpopV$97 = super.getGetterN1();
                super.setGetterN1($ceylontmpopV$97 + 1);
            }
            returning $ceylontmpopV$97;
        );
        (
            let
            {
                long $ceylontmpopV$99 = super.getGetterN1() + 1;
                super.setGetterN1($ceylontmpopV$99);
            }
            returning $ceylontmpopV$99;
        );
        (
            let
            {
                long $ceylontmpopV$101 = super.getGetterN1();
                super.setGetterN1($ceylontmpopV$101 - 1);
            }
            returning $ceylontmpopV$101;
        );
        (
            let
            {
                long $ceylontmpopV$103 = super.getGetterN1() - 1;
                super.setGetterN1($ceylontmpopV$103);
            }
            returning $ceylontmpopV$103;
        );
        super.setGetterI1(super.getGetterN1());
        super.setGetterI1(-super.getGetterN1());
        super.setGetterN1(super.getGetterN1() + super.getGetterN2());
        super.setGetterI1(super.getGetterN1() - super.getGetterN2());
        super.setGetterN1(super.getGetterN1() * super.getGetterN2());
        super.setGetterN1(super.getGetterN1() / super.getGetterN2());
        super.setGetterN1(super.getGetterN1() % super.getGetterN2());
        super.setGetterN1(.ceylon.language.Integer.instance(super.getGetterN1()).power(.ceylon.language.Integer.instance(super.getGetterN2())).longValue());
        (
            let
            {
                long $ceylontmpopV$105 = super.getGetterN1() + super.getGetterN2();
                super.setGetterN1($ceylontmpopV$105);
            }
            returning $ceylontmpopV$105;
        );
        (
            let
            {
                long $ceylontmpopV$107 = super.getGetterN1() * super.getGetterN1();
                super.setGetterN1($ceylontmpopV$107);
            }
            returning $ceylontmpopV$107;
        );
        (
            let
            {
                long $ceylontmpopV$109 = super.getGetterN1() / super.getGetterN2();
                super.setGetterN1($ceylontmpopV$109);
            }
            returning $ceylontmpopV$109;
        );
        (
            let
            {
                long $ceylontmpopV$111 = super.getGetterN1() % super.getGetterN2();
                super.setGetterN1($ceylontmpopV$111);
            }
            returning $ceylontmpopV$111;
        );
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object boxedQualifiedAttributes() {
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$113 = super.getBoxedN1();
                super.setBoxedN1($ceylontmpopV$113.getSuccessor());
            }
            returning $ceylontmpopV$113;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$115 = super.getBoxedN1().getSuccessor();
                super.setBoxedN1($ceylontmpopV$115);
            }
            returning $ceylontmpopV$115;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$117 = super.getBoxedN1();
                super.setBoxedN1($ceylontmpopV$117.getPredecessor());
            }
            returning $ceylontmpopV$117;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$119 = super.getBoxedN1().getPredecessor();
                super.setBoxedN1($ceylontmpopV$119);
            }
            returning $ceylontmpopV$119;
        );
        super.setBoxedI1(super.getBoxedN1().getPositiveValue());
        super.setBoxedI1(super.getBoxedN1().getNegativeValue());
        super.setBoxedN1(super.getBoxedN1().plus(super.getBoxedN2()));
        super.setBoxedI1(super.getBoxedN1().minus(super.getBoxedN2()));
        super.setBoxedN1(super.getBoxedN1().times(super.getBoxedN2()));
        super.setBoxedN1(super.getBoxedN1().divided(super.getBoxedN2()));
        super.setBoxedN1(super.getBoxedN1().remainder(super.getBoxedN2()));
        super.setBoxedN1(super.getBoxedN1().power(super.getBoxedN2()));
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$121 = super.getBoxedN1().plus(super.getBoxedN2());
                super.setBoxedN1($ceylontmpopV$121);
            }
            returning $ceylontmpopV$121;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$123 = super.getBoxedN1().times(super.getBoxedN1());
                super.setBoxedN1($ceylontmpopV$123);
            }
            returning $ceylontmpopV$123;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$125 = super.getBoxedN1().divided(super.getBoxedN2());
                super.setBoxedN1($ceylontmpopV$125);
            }
            returning $ceylontmpopV$125;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV$127 = super.getBoxedN1().remainder(super.getBoxedN2());
                super.setBoxedN1($ceylontmpopV$127);
            }
            returning $ceylontmpopV$127;
        );
        return null;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperatorsSub.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperatorsSub.class);
}
final class toplevelN1_ {
    
    private toplevelN1_() {
    }
    private static long[] value;
    static {
        value = new long[]{0L};
    }
    
    public static long get_() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException("Cyclic initialization");
        }
    }
    
    public static void set_(final long toplevelN1) {
        value[0] = toplevelN1;
    }
}
final class toplevelN2_ {
    
    private toplevelN2_() {
    }
    private static long[] value;
    static {
        value = new long[]{0L};
    }
    
    public static long get_() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException("Cyclic initialization");
        }
    }
    
    public static void set_(final long toplevelN2) {
        value[0] = toplevelN2;
    }
}
final class toplevelI1_ {
    
    private toplevelI1_() {
    }
    private static long[] value;
    static {
        value = new long[]{0L};
    }
    
    public static long get_() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException("Cyclic initialization");
        }
    }
    
    public static void set_(final long toplevelI1) {
        value[0] = toplevelI1;
    }
}
final class toplevelGetterN1_ {
    
    private toplevelGetterN1_() {
    }
    
    public static long get_() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.get_();
    }
    
    public static void set_(final long toplevelGetterN1) {
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1_.set_(toplevelGetterN1);
    }
}
final class toplevelGetterN2_ {
    
    private toplevelGetterN2_() {
    }
    
    public static long get_() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.get_();
    }
    
    public static void set_(final long toplevelGetterN2) {
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2_.set_(toplevelGetterN2);
    }
}
final class toplevelGetterI1_ {
    
    private toplevelGetterI1_() {
    }
    
    public static long get_() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1_.get_();
    }
    
    public static void set_(final long toplevelGetterI1) {
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1_.set_(toplevelGetterI1);
    }
}