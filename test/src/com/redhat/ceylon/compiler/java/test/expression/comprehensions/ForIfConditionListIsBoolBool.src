package com.redhat.ceylon.compiler.java.test.expression.comprehensions;

class ForIfConditionListIsBoolBool implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    ForIfConditionListIsBoolBool() {
    }
    
    private final .ceylon.language.Sequential<? extends .ceylon.language.Boolean> m$priv(final .ceylon.language.Sequential<? extends .java.lang.Object> xs, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> zs) {
        return new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Boolean, .java.lang.Object>(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor){
            
            public final .ceylon.language.Iterator<.ceylon.language.Boolean> getIterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Boolean>(.ceylon.language.Boolean.$TypeDescriptor){
                    {
                        iter$0 = xs.getIterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0;
                    private .java.lang.Object x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem0 = iter$0.next();
                        x$exhausted = $ceylontmpitem0 == .ceylon.language.finished_.getFinished$();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.java.lang.Object)$ceylontmpitem0;
                            return true;
                        }
                    }
                    private .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$1;
                    
                    private final boolean iter$1() {
                        if (x$exhausted) return false;
                        if (iter$1 != null) return true;
                        if (!this.x()) return false;
                        iter$1 = zs.getIterator();
                        return true;
                    }
                    private .ceylon.language.Integer z;
                    private boolean z$exhausted;
                    
                    private final boolean z() {
                        while (this.iter$1()) {
                            final .java.lang.Object $ceylontmpitem1 = iter$1.next();
                            z$exhausted = $ceylontmpitem1 == .ceylon.language.finished_.getFinished$();
                            if (z$exhausted) {
                                iter$1 = null;
                            } else {
                                z = (.ceylon.language.Integer)$ceylontmpitem1;
                                return true;
                            }
                        }
                        return false;
                    }
                    private long $x$3;
                    
                    private final boolean next2() {
                        while (true) {
                            if (!this.z()) break;
                            .java.lang.Object $x$2 = null;
                            if (($x$2 = x) instanceof .ceylon.language.Integer) {
                                $x$3 = ((.ceylon.language.Integer)$x$2).longValue();
                                if ($x$3 > 0L) {
                                    if (z.compare(.ceylon.language.Integer.instance(10L)).smallerThan()) {
                                        break;
                                    }
                                }
                            }
                        }
                        return !z$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.next2()) {
                            final .java.lang.Object x = this.x;
                            final .ceylon.language.Integer z = this.z;
                            return .ceylon.language.Boolean.instance(z.equals(.ceylon.language.Integer.instance(1L)));
                        } else return .ceylon.language.finished_.getFinished$();
                    }
                };
            }
        }.getSequence();
    }
    
    private final .ceylon.language.Sequential<? extends .ceylon.language.Boolean> synthetic$priv(final .ceylon.language.Sequential<? extends .java.lang.Object> xs, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> zs) {
        return new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Boolean, .java.lang.Object>(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor){
            
            public final .ceylon.language.Iterator<.ceylon.language.Boolean> getIterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Boolean>(.ceylon.language.Boolean.$TypeDescriptor){
                    {
                        iter$0 = xs.getIterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0;
                    private .java.lang.Object x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem4 = iter$0.next();
                        x$exhausted = $ceylontmpitem4 == .ceylon.language.finished_.getFinished$();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.java.lang.Object)$ceylontmpitem4;
                            return true;
                        }
                    }
                    private .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$1;
                    
                    private final boolean iter$1() {
                        if (x$exhausted) return false;
                        if (iter$1 != null) return true;
                        if (!this.x()) return false;
                        iter$1 = zs.getIterator();
                        return true;
                    }
                    private .ceylon.language.Integer z;
                    private boolean z$exhausted;
                    
                    private final boolean z() {
                        while (this.iter$1()) {
                            final .java.lang.Object $ceylontmpitem5 = iter$1.next();
                            z$exhausted = $ceylontmpitem5 == .ceylon.language.finished_.getFinished$();
                            if (z$exhausted) {
                                iter$1 = null;
                            } else {
                                z = (.ceylon.language.Integer)$ceylontmpitem5;
                                return true;
                            }
                        }
                        return false;
                    }
                    private long $y$7;
                    
                    private final boolean next2() {
                        while (true) {
                            if (!this.z()) break;
                            .java.lang.Object $y$6 = null;
                            if (($y$6 = x) instanceof .ceylon.language.Integer) {
                                $y$7 = ((.ceylon.language.Integer)$y$6).longValue();
                                if ($y$7 > 0L) {
                                    if (z.compare(.ceylon.language.Integer.instance(10L)).smallerThan()) {
                                        break;
                                    }
                                }
                            }
                        }
                        return !z$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.next2()) {
                            final .java.lang.Object x = this.x;
                            final .ceylon.language.Integer z = this.z;
                            return .ceylon.language.Boolean.instance(z.equals(.ceylon.language.Integer.instance(1L)));
                        } else return .ceylon.language.finished_.getFinished$();
                    }
                };
            }
        }.getSequence();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfConditionListIsBoolBool();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfConditionListIsBoolBool.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfConditionListIsBoolBool.class);
}