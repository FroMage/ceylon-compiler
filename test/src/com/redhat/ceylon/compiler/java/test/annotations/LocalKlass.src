package com.redhat.ceylon.compiler.java.test.annotations;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 5)
@.ceylon.language.Shared$annotation
@.com.redhat.ceylon.compiler.java.metadata.Annotations({@.com.redhat.ceylon.compiler.java.metadata.Annotation("shared")})
public class LocalKlass implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    public LocalKlass() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    private final void m$priv() {
        
        @.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 5)
        @.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"ceylon.language::Summable<com.redhat.ceylon.compiler.java.test.annotations::LocalKlass.m.Local<T>>"})
        @.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
                value = "T",
                variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
                satisfies = {},
                caseTypes = {})})
        class Local<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.Summable<Local<T>> {
            
            Local(@.com.redhat.ceylon.compiler.java.metadata.Ignore
            final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT) {
                this.$reifiedT = $reifiedT;
                this.$ceylon$language$Summable$this = new .ceylon.language.Summable$impl<Local<T>>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(Local.class, $reifiedT), this);
                this.i1 = 1L;
            }
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT;
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            protected final .ceylon.language.Summable$impl<Local<T>> $ceylon$language$Summable$this;
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .ceylon.language.Summable$impl<Local<T>> $ceylon$language$Summable$impl() {
                return $ceylon$language$Summable$this;
            }
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            private final long i1;
            
            @.ceylon.language.Shared$annotation
            @.com.redhat.ceylon.compiler.java.metadata.Annotations({@.com.redhat.ceylon.compiler.java.metadata.Annotation("shared")})
            @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
            public final long getI1() {
                return i1;
            }
            
            @.ceylon.language.Shared$annotation
            @.com.redhat.ceylon.compiler.java.metadata.Annotations({@.com.redhat.ceylon.compiler.java.metadata.Annotation("shared")})
            @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
            public final long getI2() {
                return 1L;
            }
            
            public final void setI2(@.com.redhat.ceylon.compiler.java.metadata.Name("i2")
            @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
            final long i2) {
            }
            
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public final void m2(final long arg1) {
                (
                    let
                    {
                        .ceylon.language.Sequential<? extends T> $ceylontmp$t$0 = m2$t(arg1);
                        m2(arg1, $ceylontmp$t$0);
                    }
                    returning null;
                );
            }
            
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public final .ceylon.language.Sequential<? extends T> m2$t(final long arg1) {
                return (.ceylon.language.Sequential).ceylon.language.empty_.$get();
            }
            
            @.ceylon.language.Shared$annotation
            @.com.redhat.ceylon.compiler.java.metadata.Annotations({@.com.redhat.ceylon.compiler.java.metadata.Annotation("shared")})
            @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
            public final void m2(@.com.redhat.ceylon.compiler.java.metadata.Name("arg1")
            @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Integer")
            final long arg1, @.com.redhat.ceylon.compiler.java.metadata.Name("t")
            @.com.redhat.ceylon.compiler.java.metadata.Sequenced
            @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Sequential<T>")
            final .ceylon.language.Sequential<? extends T> t) {
            }
            
            @.ceylon.language.Shared$annotation
            @.ceylon.language.Actual$annotation
            @.com.redhat.ceylon.compiler.java.metadata.Annotations({
                    @.com.redhat.ceylon.compiler.java.metadata.Annotation("shared"),
                    @.com.redhat.ceylon.compiler.java.metadata.Annotation("actual")})
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.annotations::LocalKlass.m.Local<T>")
            public final Local<T> plus(@.com.redhat.ceylon.compiler.java.metadata.Name("other")
            @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.annotations::LocalKlass.m.Local<T>")
            final Local<T> other) {
                return (Local).ceylon.language.nothing_.$get();
            }
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(Local.class, $reifiedT);
            }
        }
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.annotations.LocalKlass();
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.annotations.LocalKlass.$TypeDescriptor;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.LocalKlass.class);
}