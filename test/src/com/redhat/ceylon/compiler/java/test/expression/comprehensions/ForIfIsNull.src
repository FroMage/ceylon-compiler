package com.redhat.ceylon.compiler.java.test.expression.comprehensions;

class ForIfIsNull implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    ForIfIsNull() {
    }
    
    private final long owt$priv(final .ceylon.language.Integer n) {
        return 0L;
    }
    
    private final long nowt$priv(final .java.lang.Object n) {
        return 0L;
    }
    
    private final void m1$priv(final .ceylon.language.Sequence<? extends .ceylon.language.Integer> xs) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor){
                    {
                        iter$0 = xs.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0;
                    private .ceylon.language.Integer x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem0 = iter$0.next();
                        x$exhausted = $ceylontmpitem0 == .ceylon.language.finished_.$get();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.ceylon.language.Integer)$ceylontmpitem0;
                            return true;
                        }
                    }
                    private long $x$2;
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.x()) break;
                            .java.lang.Object $x$1 = null;
                            if (($x$1 = x) instanceof .ceylon.language.Integer) {
                                $x$2 = ((.ceylon.language.Integer)$x$1).longValue();
                                break;
                            }
                        }
                        return !x$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.next1()) {
                            final .ceylon.language.Integer x = this.x;
                            return .ceylon.language.Integer.instance($x$2);
                        } else return .ceylon.language.finished_.$get();
                    }
                };
            }
        });
    }
    
    private final void m2$priv(final .ceylon.language.Sequence<? extends .ceylon.language.Integer> xs) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor){
                    {
                        iter$0 = xs.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0;
                    private .ceylon.language.Integer x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem3 = iter$0.next();
                        x$exhausted = $ceylontmpitem3 == .ceylon.language.finished_.$get();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.ceylon.language.Integer)$ceylontmpitem3;
                            return true;
                        }
                    }
                    private long $y$5;
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.x()) break;
                            .java.lang.Object $y$4 = null;
                            if (($y$4 = x) instanceof .ceylon.language.Integer) {
                                $y$5 = ((.ceylon.language.Integer)$y$4).longValue();
                                break;
                            }
                        }
                        return !x$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.next1()) {
                            final .ceylon.language.Integer x = this.x;
                            return .ceylon.language.Integer.instance($y$5);
                        } else return .ceylon.language.finished_.$get();
                    }
                };
            }
        });
    }
    
    private final void m3$priv(final .ceylon.language.Sequence<? extends .ceylon.language.Integer> xs) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor){
                    {
                        iter$0 = xs.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0;
                    private .ceylon.language.Integer x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem6 = iter$0.next();
                        x$exhausted = $ceylontmpitem6 == .ceylon.language.finished_.$get();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.ceylon.language.Integer)$ceylontmpitem6;
                            return true;
                        }
                    }
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.x()) break;
                            if (x == null) {
                                break;
                            }
                        }
                        return !x$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.next1()) {
                            final .ceylon.language.Integer x = this.x;
                            return .ceylon.language.Integer.instance(nowt$priv(x));
                        } else return .ceylon.language.finished_.$get();
                    }
                };
            }
        });
    }
    
    private final void m4$priv(final .ceylon.language.Sequence<? extends .ceylon.language.Integer> xs) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor){
                    {
                        iter$0 = xs.iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0;
                    private .ceylon.language.Integer x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem8 = iter$0.next();
                        x$exhausted = $ceylontmpitem8 == .ceylon.language.finished_.$get();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.ceylon.language.Integer)$ceylontmpitem8;
                            return true;
                        }
                    }
                    private .java.lang.Object $y$10;
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.x()) break;
                            .java.lang.Object $y$9 = null;
                            if (($y$9 = x) == null) {
                                $y$10 = $y$9;
                                break;
                            }
                        }
                        return !x$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.next1()) {
                            final .ceylon.language.Integer x = this.x;
                            return .ceylon.language.Integer.instance(nowt$priv($y$10));
                        } else return .ceylon.language.finished_.$get();
                    }
                };
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfIsNull();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfIsNull.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfIsNull.class);
}