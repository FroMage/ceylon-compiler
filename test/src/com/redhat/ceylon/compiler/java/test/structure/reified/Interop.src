package com.redhat.ceylon.compiler.java.test.structure.reified;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 4)
@.com.redhat.ceylon.compiler.java.metadata.Class(extendsType = "com.redhat.ceylon.compiler.java.test.structure.reified::JavaClass<Element>")
@.com.redhat.ceylon.compiler.java.metadata.Annotations({@.com.redhat.ceylon.compiler.java.metadata.Annotation("shared")})
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"com.redhat.ceylon.compiler.java.test.structure.reified::JavaInterface<Element>"})
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "Element", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {}, caseTypes = {})})
public class CeylonClass<Element> extends .com.redhat.ceylon.compiler.java.test.structure.reified.JavaClass<Element> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.reified.JavaInterface<Element> {
    
    public CeylonClass(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedElement) {
        super();
        this.$reifiedElement = $reifiedElement;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedElement;
    
    @.com.redhat.ceylon.compiler.java.metadata.Annotations({@.com.redhat.ceylon.compiler.java.metadata.Annotation("shared"), @.com.redhat.ceylon.compiler.java.metadata.Annotation("actual")})
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    @.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "T", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {}, caseTypes = {})})
    public final <T>void foo() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.reified.CeylonClass(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.CeylonClass.class, $reifiedElement);
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 4)
@.com.redhat.ceylon.compiler.java.metadata.Annotations({@.com.redhat.ceylon.compiler.java.metadata.Annotation("shared")})
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"com.redhat.ceylon.compiler.java.test.structure.reified::JavaInterface<Element>"})
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(value = "Element", variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE, satisfies = {}, caseTypes = {})})
public interface CeylonInterface<Element> extends .com.redhat.ceylon.compiler.java.test.structure.reified.JavaInterface<Element> {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.test.structure.reified.CeylonInterface$impl<Element> $com$redhat$ceylon$compiler$java$test$structure$reified$CeylonInterface$impl();
}
@.com.redhat.ceylon.compiler.java.metadata.Ignore
public final class CeylonInterface$impl<Element> {
    
    public CeylonInterface$impl(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedElement, .com.redhat.ceylon.compiler.java.test.structure.reified.CeylonInterface<Element> $this) {
        this.$reifiedElement = $reifiedElement;
        this.$this = $this;
    }
    private .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedElement;
    private final .com.redhat.ceylon.compiler.java.test.structure.reified.CeylonInterface<Element> $this;
    
    public void $refine(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedElement) {
        this.$reifiedElement = $reifiedElement;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 4)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class reifiedInstantiateInterop_ {
    
    private reifiedInstantiateInterop_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    static void reifiedInstantiateInterop() {
        final .com.redhat.ceylon.compiler.java.test.structure.reified.CeylonClass<.ceylon.language.Integer> c = new .com.redhat.ceylon.compiler.java.test.structure.reified.CeylonClass<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor);
        c.foo();
        c.foo();
        final .ceylon.language.Callable<? extends .java.lang.Object> f = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, "Anything()"){
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .java.lang.Object $call() {
                return (
                    let
                    {
                        c.<.ceylon.language.Integer>foo();
                    }
                    returning null;
                );
            }
        };
        f.$call();
        final .com.redhat.ceylon.compiler.java.test.structure.reified.JavaClass<.ceylon.language.Integer> c2 = new .com.redhat.ceylon.compiler.java.test.structure.reified.JavaClass<.ceylon.language.Integer>();
        final .ceylon.language.Callable<? extends .com.redhat.ceylon.compiler.java.test.structure.reified.JavaClass<.ceylon.language.Integer>> constr = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.com.redhat.ceylon.compiler.java.test.structure.reified.JavaClass<.ceylon.language.Integer>>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.JavaClass.class, .ceylon.language.Integer.$TypeDescriptor), .ceylon.language.Empty.$TypeDescriptor, "JavaClass<Integer>()"){
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .com.redhat.ceylon.compiler.java.test.structure.reified.JavaClass<.ceylon.language.Integer> $call() {
                return new .com.redhat.ceylon.compiler.java.test.structure.reified.JavaClass<.ceylon.language.Integer>();
            }
        };
        final .com.redhat.ceylon.compiler.java.test.structure.reified.JavaClass<.ceylon.language.Integer> c3 = constr.$call();
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.reified.reifiedInstantiateInterop_.reifiedInstantiateInterop();
    }
}