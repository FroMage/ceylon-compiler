package com.redhat.ceylon.compiler.java.test.issues.bug13xx;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 5)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"ceylon.language::Summable<com.redhat.ceylon.compiler.java.test.issues.bug13xx::Bug1313>"})
class Bug1313 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.Summable<.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313> {
    
    Bug1313() {
        this.$ceylon$language$Summable$this = new .ceylon.language.Summable$impl<.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313>(.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.$TypeDescriptor, this);
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected final .ceylon.language.Summable$impl<.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313> $ceylon$language$Summable$this;
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .ceylon.language.Summable$impl<.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313> $ceylon$language$Summable$impl() {
        return $ceylon$language$Summable$this;
    }
    
    @.ceylon.language.SharedAnnotation$annotation
    @.ceylon.language.ActualAnnotation$annotation
    @.com.redhat.ceylon.compiler.java.metadata.Annotations({
            @.com.redhat.ceylon.compiler.java.metadata.Annotation("shared"),
            @.com.redhat.ceylon.compiler.java.metadata.Annotation("actual")})
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.issues.bug13xx::Bug1313")
    public final .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313 plus(@.com.redhat.ceylon.compiler.java.metadata.Name("other")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.issues.bug13xx::Bug1313")
    final .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313 other) {
        return (.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313).ceylon.language.nothing_.$get();
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313();
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.$TypeDescriptor;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 5)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class bug1313_ {
    
    private bug1313_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    static void bug1313() {
        final .ceylon.language.Callable<? extends .ceylon.language.Integer> methodReference = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "Integer(Integer)", (short)-1){
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .ceylon.language.Integer $call(final .java.lang.Object $param$0) {
                final .ceylon.language.Integer $$other = (.ceylon.language.Integer)$param$0;
                return .ceylon.language.Integer.instance(.ceylon.language.Integer.plus(1L, $$other.longValue()));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.String> methodReference2 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.String.$TypeDescriptor, .ceylon.language.String.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "String(String)", (short)-1){
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .ceylon.language.String $call(final .java.lang.Object $param$0) {
                final .ceylon.language.String $$other = (.ceylon.language.String)$param$0;
                return .ceylon.language.String.instance(.ceylon.language.String.plus("", $$other.toString()));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.String> methodReference3 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.String.$TypeDescriptor, .ceylon.language.String.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.String.$TypeDescriptor, .ceylon.language.String.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), "String(String, String)", (short)-1){
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .ceylon.language.String $call(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .java.lang.String $$substring = ((.ceylon.language.String)$param$0).toString();
                final .java.lang.String $$replacement = ((.ceylon.language.String)$param$1).toString();
                return .ceylon.language.String.instance(.ceylon.language.String.replace("", $$substring, $$replacement));
            }
        };
        final .ceylon.language.Callable<? extends .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313> methodReference4 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313>(.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.$TypeDescriptor, .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "Bug1313(Bug1313)", (short)-1){
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313 $call(final .java.lang.Object $param$0) {
                final .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313 $$other = (.com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313)$param$0;
                return new .com.redhat.ceylon.compiler.java.test.issues.bug13xx.Bug1313().plus($$other);
            }
        };
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug13xx.bug1313_.bug1313();
    }
}