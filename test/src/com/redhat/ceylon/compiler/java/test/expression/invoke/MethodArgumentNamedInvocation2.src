package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class methodArgumentNamedIncovation2_ {
    
    private methodArgumentNamedIncovation2_() {
    }
    
    static <A, B>void methodArgumentNamedIncovation2(final A a) {
        
        final class callFunction_ {
            
            private callFunction_() {
            }
            
            <X, Y>void callFunction(final .ceylon.language.Callable<? extends X> f) {
            }
        }
        final callFunction_ callFunction = new callFunction_();
        (
            let
            {
                .ceylon.language.Callable<? extends .ceylon.language.String> $arg$0$0 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>("String()"){
                    
                    @.java.lang.Override
                    public .ceylon.language.String $call(final .java.lang.Object $param$0) {
                        final long i = ((.ceylon.language.Integer)$param$0).longValue();
                        return .ceylon.language.String.instance(.ceylon.language.Integer.toString(.ceylon.language.Integer.instance(i).power(.ceylon.language.Integer.instance(2L)).longValue()));
                    }
                };
                callFunction.<.ceylon.language.String, .ceylon.language.Integer>callFunction($arg$0$0);
            }
            returning null;
        );
        (
            let
            {
                .ceylon.language.Callable<? extends A> $arg$1$0 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<A>("A()"){
                    
                    @.java.lang.Override
                    public A $call(final .java.lang.Object $param$0) {
                        final B i = (B)$param$0;
                        return a;
                    }
                };
                callFunction.<A, B>callFunction($arg$1$0);
            }
            returning null;
        );
    }
}