package com.redhat.ceylon.compiler.java.test.expression.invoke;

class NamedArgumentInvocationInitWithSequence {
    
    NamedArgumentInvocationInitWithSequence(final .java.lang.String a) {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$b$1 = .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithSequence.$init$b(a);
                this(a, $ceylontmp$b$1);
            }
            returning null;
        );
    }
    
    NamedArgumentInvocationInitWithSequence(final .java.lang.String a, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> b) {
    }
    
    static .ceylon.language.Sequential<? extends .ceylon.language.Integer> $init$b(final .java.lang.String a) {
        return (.ceylon.language.Sequential).ceylon.language.empty_.getEmpty$();
    }
    
    private final .ceylon.language.Sequential<? extends .ceylon.language.Integer> $Inner$init$z(final boolean x, final .java.lang.String y) {
        return (.ceylon.language.Sequential).ceylon.language.empty_.getEmpty$();
    }
    
    class Inner {
        
        Inner(final boolean x, final .java.lang.String y) {
            (
                let
                {
                    .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$z$3 = $Inner$init$z(x, y);
                    this(x, y, $ceylontmp$z$3);
                }
                returning null;
            );
        }
        
        Inner(final boolean x, final .java.lang.String y, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> z) {
        }
        
        public final void m2() {
        }
    }
    
    private final void m$priv() {
        (
            let
            {
                .java.lang.String $arg$4$0 = "a";
                .ceylon.language.Sequential $arg$4$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.instance(3L), .ceylon.language.empty_.getEmpty$())));
            }
            returning new .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithSequence($arg$4$0, $arg$4$1);
        ).m$priv();
        (
            let
            {
                .java.lang.String $arg$5$1 = "";
                boolean $arg$5$0 = true;
                .ceylon.language.Sequential $arg$5$2 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.instance(4L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.instance(5L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.instance(6L), .ceylon.language.empty_.getEmpty$())));
            }
            returning new .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithSequence.Inner($arg$5$0, $arg$5$1, $arg$5$2);
        ).m2();
    }
}