package com.redhat.ceylon.compiler.java.test.expression.invoke;

class NamedArgumentInvocationInitWithSequence {
    
    NamedArgumentInvocationInitWithSequence(final .java.lang.String a) {
        (
            let
            {
                .ceylon.language.Iterable<? extends .ceylon.language.Integer> $ceylontmp$b$1 = .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithSequence.$init$b(a);
                this(a, $ceylontmp$b$1);
            }
            returning null;
        );
    }
    
    NamedArgumentInvocationInitWithSequence(.java.lang.String a, .ceylon.language.Iterable<? extends .ceylon.language.Integer> b) {
    }
    
    static .ceylon.language.Iterable<? extends .ceylon.language.Integer> $init$b(final .java.lang.String a) {
        return (.ceylon.language.Iterable).ceylon.language.empty_.getEmpty();
    }
    
    .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithSequence.Inner Inner$new(final boolean x, final .java.lang.String y, final .ceylon.language.Iterable<? extends .ceylon.language.Integer> z) {
        return new Inner(x, y, z);
    }
    
    .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithSequence.Inner Inner$new(final boolean x, final .java.lang.String y) {
        return (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithSequence.Inner$impl $ceylontmp$impl$3 = new .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithSequence.Inner$impl();
                .ceylon.language.Iterable<? extends .ceylon.language.Integer> $ceylontmp$z$4 = $ceylontmp$impl$3.$init$z(x, y);
            }
            returning new Inner(x, y, $ceylontmp$z$4);
        );
    }
    
    final class Inner$impl {
        
        Inner$impl() {
            super();
        }
        
        private final .ceylon.language.Iterable<? extends .ceylon.language.Integer> $init$z(final boolean x, final .java.lang.String y) {
            return (.ceylon.language.Iterable).ceylon.language.empty_.getEmpty();
        }
    }
    
    class Inner {
        
        protected Inner(boolean x, .java.lang.String y, .ceylon.language.Iterable<? extends .ceylon.language.Integer> z) {
        }
        
        public final void m2() {
        }
    }
    
    private final void m() {
        (
            let
            {
                .java.lang.String $arg$5$0 = "a";
                .ceylon.language.Iterable<? extends .ceylon.language.Integer> $arg$5$1 = new .com.redhat.ceylon.compiler.java.language.ArraySequence(.ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
            }
            returning new .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithSequence($arg$5$0, $arg$5$1);
        ).m();
        (
            let
            {
                .java.lang.String $arg$6$1 = "";
                boolean $arg$6$0 = true;
                .ceylon.language.Iterable<? extends .ceylon.language.Integer> $arg$6$2 = new .com.redhat.ceylon.compiler.java.language.ArraySequence(.ceylon.language.Integer.instance(4L), .ceylon.language.Integer.instance(5L), .ceylon.language.Integer.instance(6L));
            }
            returning Inner$new($arg$6$0, $arg$6$1, $arg$6$2);
        ).m2();
    }
}