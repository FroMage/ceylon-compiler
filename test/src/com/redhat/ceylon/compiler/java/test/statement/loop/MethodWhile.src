package com.redhat.ceylon.compiler.java.test.statement.loop;

class MethodWhile implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    MethodWhile() {
    }
    
    public final void m() {
        boolean cont = true;
        while (true) {
            if (cont) {
                cont = false;
            } else break;
        }
    }
    
    public final void whileExists() {
        .ceylon.language.Boolean cont = .ceylon.language.Boolean.instance(true);
        while (true) {
            .ceylon.language.Boolean $c$0;
            if (($c$0 = cont) != null) {
                final boolean $c$1 = $c$0.booleanValue();
                cont = null;
            } else break;
        }
    }
    
    public final void whileNonEmpty() {
        .ceylon.language.Sequential<? extends .ceylon.language.Integer> seq = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(1L), .ceylon.language.empty_.getEmpty$());
        while (true) {
            .ceylon.language.Sequential<? extends .ceylon.language.Integer> $s$2;
            if (($s$2 = seq) instanceof .ceylon.language.Sequence) {
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> $s$3 = $s$2;
                seq = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential).ceylon.language.empty_.getEmpty$();
            } else break;
        }
    }
    
    public final void whileIs() {
        .java.lang.Object int = .ceylon.language.Integer.instance(1L);
        while (true) {
            .java.lang.Object $i$4;
            if (($i$4 = int) instanceof .ceylon.language.Integer) {
                final long $i$5 = ((.ceylon.language.Integer)$i$4).longValue();
                int = .ceylon.language.String.instance("");
            } else break;
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhile();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhile.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhile.class);
}