package com.redhat.ceylon.compiler.java.test.interop;

final class testFiles_ {
    
    private testFiles_() {
    }
    
    static void testFiles() {
        final .java.io.File f = new .java.io.File(".");
        final .java.io.File[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(f.listFiles());
        final .java.io.File f2 = items[(int)0L];
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.testFiles_.testFiles();
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 4)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class booleanArray_ {
    
    private booleanArray_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("java.lang::BooleanArray")
    static boolean[] booleanArray(@.com.redhat.ceylon.compiler.java.metadata.Name("values")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Iterable<ceylon.language::Boolean,ceylon.language::Null>")
    final .ceylon.language.Iterable<? extends .ceylon.language.Boolean, ? extends .java.lang.Object> values) {
        final boolean[] ret = new boolean[(int)values.getSize()];
        long idx = 0L;
        .java.lang.Object $elem$0;
        for (.ceylon.language.Iterator<? extends .ceylon.language.Boolean> $val$iter$1 = values.getIterator(); !(($elem$0 = $val$iter$1.next()) instanceof .ceylon.language.Finished); ) {
            final boolean val = ((.ceylon.language.Boolean)$elem$0).booleanValue();
            ret[(int)idx++] = val;
        }
        return ret;
    }
}
final class test_booleans_ {
    
    private test_booleans_() {
    }
    
    static void test_booleans() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final boolean[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_booleans());
        final .ceylon.language.Boolean b = .ceylon.language.Boolean.instance(items[(int)0L]);
        .ceylon.language.Boolean $b$3;
        if (($b$3 = b) != null) {
            final boolean $b$4 = $b$3.booleanValue();
            items[(int)1L] = $b$4;
        }
        final .ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object> it = .ceylon.language.String.instance("foo");
        java.take_booleans(items);
        java.take_booleans(.com.redhat.ceylon.compiler.java.test.interop.booleanArray_.booleanArray(new .ceylon.language.Tuple<.ceylon.language.Boolean, .ceylon.language.Boolean, .ceylon.language.Tuple<.ceylon.language.Boolean, ? extends .ceylon.language.Boolean, ? extends .ceylon.language.Tuple<.ceylon.language.Boolean, ? extends .ceylon.language.Boolean, ? extends .ceylon.language.Empty>>>(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Boolean.instance(true), new .ceylon.language.Tuple<.ceylon.language.Boolean, .ceylon.language.Boolean, .ceylon.language.Tuple<.ceylon.language.Boolean, ? extends .ceylon.language.Boolean, ? extends .ceylon.language.Empty>>(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Boolean.instance(true), new .ceylon.language.Tuple<.ceylon.language.Boolean, .ceylon.language.Boolean, .ceylon.language.Empty>(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Boolean.instance(false), .ceylon.language.empty_.getEmpty$())))));
        java.take_booleans((
            let
            {
                .ceylon.language.Iterable $arg$5$0 = (.ceylon.language.Iterable).ceylon.language.empty_.getEmpty$();
            }
            returning .com.redhat.ceylon.compiler.java.test.interop.booleanArray_.booleanArray($arg$5$0);
        ));
        java.take_booleans((
            let
            {
                .com.redhat.ceylon.compiler.java.language.arrays_ $arg$6$callable$ = .com.redhat.ceylon.compiler.java.language.arrays_.getArrays$();
                .ceylon.language.Iterable $arg$6$0 = new .com.redhat.ceylon.compiler.java.language.ArraySequence(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Boolean.instance(true), .ceylon.language.Boolean.instance(true), .ceylon.language.Boolean.instance(false));
            }
            returning $arg$6$callable$.toBooleanArray($arg$6$0);
        ));
        (
            let
            {
                int $arg$7$0 = (int)2L;
            }
            returning new boolean[$arg$7$0];
        );
        final long i = items.length;
        final .ceylon.language.Array<.ceylon.language.Boolean> arr = .com.redhat.ceylon.compiler.java.language.BooleanArray.getArray(items);
        if (items == .com.redhat.ceylon.compiler.java.language.arrays_.getArrays$().asBooleanArray(arr)) {
        } else throw new .ceylon.language.AssertionException("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "items === arrays.asBooleanArray(arr)"));
        final boolean[][] matrix = new boolean[(int)10L][];
        .java.lang.Object $elem$9;
        for (.ceylon.language.Iterator<? extends .ceylon.language.Integer> $x$iter$10 = .com.redhat.ceylon.compiler.java.Util.<.ceylon.language.Integer>spreadOp(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(0L), matrix.length).getIterator(); !(($elem$9 = $x$iter$10.next()) instanceof .ceylon.language.Finished); ) {
            final long x = ((.ceylon.language.Integer)$elem$9).longValue();
            matrix[(int)x] = new boolean[(int)2L];
        }
        final .ceylon.language.Array<boolean[]> boolArray = .com.redhat.ceylon.compiler.java.language.ObjectArray<boolean[]>.getArray(matrix);
        final .java.lang.Object o = items;
        .java.lang.Object $o$12;
        if (($o$12 = o) instanceof boolean[]) {
            final boolean[] $o$13 = (boolean[])$o$12;
        }
        .java.lang.Object $o$15;
        if (.com.redhat.ceylon.compiler.java.Util.isReified($o$15 = o, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.language.ObjectArray.class, .com.redhat.ceylon.compiler.java.language.BooleanArray.$TypeDescriptor))) {
            final boolean[][] $o$16 = (boolean[][])$o$15;
        }
        .java.lang.Object $o$18;
        if (.com.redhat.ceylon.compiler.java.Util.isReified($o$18 = o, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.language.ObjectArray.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.language.ObjectArray.class, .ceylon.language.Boolean.$TypeDescriptor)))) {
            final .ceylon.language.Boolean[][] $o$19 = (.ceylon.language.Boolean[][])$o$18;
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_booleans_.test_booleans();
    }
}
final class test_JBooleans_ {
    
    private test_JBooleans_() {
    }
    
    static void test_JBooleans() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Boolean[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Booleans());
        final .java.lang.Boolean b = items[(int)0L];
        .java.lang.Boolean $b$21;
        if (($b$21 = b) != null) {
            final .java.lang.Boolean $b$22 = $b$21;
            items[(int)1L] = $b$22;
        }
        java.take_Booleans(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_JBooleans_.test_JBooleans();
    }
}
final class test_bytes_ {
    
    private test_bytes_() {
    }
    
    static void test_bytes() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final byte[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_bytes());
        final .ceylon.language.Integer n = .ceylon.language.Integer.instance(items[(int)0L]);
        .ceylon.language.Integer $n$24;
        if (($n$24 = n) != null) {
            final long $n$25 = $n$24.longValue();
            items[(int)1L] = (byte)$n$25;
        }
        java.take_bytes(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_bytes_.test_bytes();
    }
}
final class test_JBytes_ {
    
    private test_JBytes_() {
    }
    
    static void test_JBytes() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Byte[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Bytes());
        final .java.lang.Byte n = items[(int)0L];
        .java.lang.Byte $n$27;
        if (($n$27 = n) != null) {
            final .java.lang.Byte $n$28 = $n$27;
            items[(int)1L] = $n$28;
        }
        java.take_Bytes(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_JBytes_.test_JBytes();
    }
}
final class test_shorts_ {
    
    private test_shorts_() {
    }
    
    static void test_shorts() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final short[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_shorts());
        final .ceylon.language.Integer n = .ceylon.language.Integer.instance(items[(int)0L]);
        .ceylon.language.Integer $n$30;
        if (($n$30 = n) != null) {
            final long $n$31 = $n$30.longValue();
            items[(int)1L] = (short)$n$31;
        }
        java.take_shorts(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_shorts_.test_shorts();
    }
}
final class test_JShorts_ {
    
    private test_JShorts_() {
    }
    
    static void test_JShorts() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Short[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Shorts());
        final .java.lang.Short n = items[(int)0L];
        .java.lang.Short $n$33;
        if (($n$33 = n) != null) {
            final .java.lang.Short $n$34 = $n$33;
            items[(int)1L] = $n$34;
        }
        java.take_Shorts(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_JShorts_.test_JShorts();
    }
}
final class test_ints_ {
    
    private test_ints_() {
    }
    
    static void test_ints() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final int[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_ints());
        final .ceylon.language.Integer n = .ceylon.language.Integer.instance(items[(int)0L]);
        .ceylon.language.Integer $n$36;
        if (($n$36 = n) != null) {
            final long $n$37 = $n$36.longValue();
            items[(int)1L] = (int)$n$37;
        }
        java.take_ints(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_ints_.test_ints();
    }
}
final class test_JIntegers_ {
    
    private test_JIntegers_() {
    }
    
    static void test_JIntegers() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Integer[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Integers());
        final .java.lang.Integer n = items[(int)0L];
        .java.lang.Integer $n$39;
        if (($n$39 = n) != null) {
            final .java.lang.Integer $n$40 = $n$39;
            items[(int)1L] = $n$40;
        }
        java.take_Integers(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_JIntegers_.test_JIntegers();
    }
}
final class test_longs_ {
    
    private test_longs_() {
    }
    
    static void test_longs() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final long[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_longs());
        final .ceylon.language.Integer n = .ceylon.language.Integer.instance(items[(int)0L]);
        .ceylon.language.Integer $n$42;
        if (($n$42 = n) != null) {
            final long $n$43 = $n$42.longValue();
            items[(int)1L] = (int)$n$43;
        }
        java.take_longs(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_longs_.test_longs();
    }
}
final class test_JLongs_ {
    
    private test_JLongs_() {
    }
    
    static void test_JLongs() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Long[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Longs());
        final .java.lang.Long n = items[(int)0L];
        .java.lang.Long $n$45;
        if (($n$45 = n) != null) {
            final .java.lang.Long $n$46 = $n$45;
            items[(int)1L] = $n$46;
        }
        java.take_Longs(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_JLongs_.test_JLongs();
    }
}
final class test_floats_ {
    
    private test_floats_() {
    }
    
    static void test_floats() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final float[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_floats());
        final .ceylon.language.Float f = .ceylon.language.Float.instance(items[(int)0L]);
        .ceylon.language.Float $f$48;
        if (($f$48 = f) != null) {
            final double $f$49 = $f$48.doubleValue();
            items[(int)1L] = (float)$f$49;
        }
        java.take_floats(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_floats_.test_floats();
    }
}
final class test_JFloats_ {
    
    private test_JFloats_() {
    }
    
    static void test_JFloats() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Float[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Floats());
        final .java.lang.Float f = items[(int)0L];
        .java.lang.Float $f$51;
        if (($f$51 = f) != null) {
            final .java.lang.Float $f$52 = $f$51;
            items[(int)1L] = $f$52;
        }
        java.take_Floats(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_JFloats_.test_JFloats();
    }
}
final class test_doubles_ {
    
    private test_doubles_() {
    }
    
    static void test_doubles() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final double[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_doubles());
        final .ceylon.language.Float f = .ceylon.language.Float.instance(items[(int)0L]);
        .ceylon.language.Float $f$54;
        if (($f$54 = f) != null) {
            final double $f$55 = $f$54.doubleValue();
            items[(int)1L] = $f$55;
        }
        java.take_doubles(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_doubles_.test_doubles();
    }
}
final class test_JDoubles_ {
    
    private test_JDoubles_() {
    }
    
    static void test_JDoubles() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Double[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Doubles());
        final .java.lang.Double f = items[(int)0L];
        .java.lang.Double $f$57;
        if (($f$57 = f) != null) {
            final .java.lang.Double $f$58 = $f$57;
            items[(int)1L] = $f$58;
        }
        java.take_Doubles(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_JDoubles_.test_JDoubles();
    }
}
final class test_chars_ {
    
    private test_chars_() {
    }
    
    static void test_chars() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final char[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_chars());
        final .ceylon.language.Character c = .ceylon.language.Character.instance(items[(int)0L]);
        .ceylon.language.Character $c$60;
        if (($c$60 = c) != null) {
            final int $c$61 = $c$60.intValue();
            items[(int)1L] = (char)$c$61;
        }
        java.take_chars(items);
        final int[] ints = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_ints());
        final .ceylon.language.Array<.ceylon.language.Character> chars = .com.redhat.ceylon.compiler.java.language.IntArray.getCodePointArray(ints);
        if (.com.redhat.ceylon.compiler.java.language.arrays_.getArrays$().asCodePointArray(chars).equals(ints)) {
        } else throw new .ceylon.language.AssertionException("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "arrays.asCodePointArray(chars) == ints"));
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_chars_.test_chars();
    }
}
final class test_JCharacters_ {
    
    private test_JCharacters_() {
    }
    
    static void test_JCharacters() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Character[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Characters());
        final .java.lang.Character c = items[(int)0L];
        .java.lang.Character $c$64;
        if (($c$64 = c) != null) {
            final .java.lang.Character $c$65 = $c$64;
            items[(int)1L] = $c$65;
        }
        java.take_Characters(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_JCharacters_.test_JCharacters();
    }
}
final class test_Strings_ {
    
    private test_Strings_() {
    }
    
    static void test_Strings() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.String[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Strings());
        final .java.lang.String s = items[(int)0L];
        .java.lang.String $s$67;
        if (($s$67 = s) != null) {
            final .java.lang.String $s$68 = $s$67;
            items[(int)1L] = $s$68;
        }
        java.take_Strings(items);
        final .ceylon.language.String[] ceylonStrings = .com.redhat.ceylon.compiler.java.language.arrays_.getArrays$().javaStringArrayToCeylonStringArray(items);
        final .ceylon.language.Array<.ceylon.language.String> ceylonStringArray = .com.redhat.ceylon.compiler.java.language.ObjectArray<.ceylon.language.String>.getArray(ceylonStrings);
        final .java.lang.String[] javaStrings = .com.redhat.ceylon.compiler.java.language.arrays_.getArrays$().ceylonStringArrayToJavaStringArray(ceylonStrings);
        final .ceylon.language.Array<.java.lang.String> javaStringArray = .com.redhat.ceylon.compiler.java.language.ObjectArray<.java.lang.String>.getArray(javaStrings);
        final .java.lang.String[] javaStrings2 = .com.redhat.ceylon.compiler.java.language.arrays_.getArrays$().toJavaStringArray(ceylonStringArray);
        final .ceylon.language.String[] ceylonStrings2 = .com.redhat.ceylon.compiler.java.language.arrays_.getArrays$().toStringArray(javaStringArray);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_Strings_.test_Strings();
    }
}
final class test_Objects_ {
    
    private test_Objects_() {
    }
    
    static void test_Objects() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Object[] items = .com.redhat.ceylon.compiler.java.Util.checkNull(java.return_Objects());
        final .java.lang.Object o = items[(int)0L];
        final .java.lang.Object o2 = .com.redhat.ceylon.compiler.java.Util.checkNull(items[(int)0L]);
        .java.lang.Object $o$70;
        if (($o$70 = o) != null) {
            final .java.lang.Object $o$71 = $o$70;
            items[(int)1L] = $o$71;
            items[(int)1L] = null;
        }
        java.take_Objects(items);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.test_Objects_.test_Objects();
    }
}