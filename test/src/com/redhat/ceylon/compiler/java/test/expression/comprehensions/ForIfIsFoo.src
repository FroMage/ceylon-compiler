package com.redhat.ceylon.compiler.java.test.expression.comprehensions;

class ForIfIsFoo implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    ForIfIsFoo() {
    }
    
    public final void m(final .ceylon.language.Sequential<? extends .java.lang.Object> xs) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.java.lang.Object, .java.lang.Object>(.ceylon.language.Object.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor, true, new .ceylon.language.Iterable[]{xs}){
            
            public final .ceylon.language.Iterator<.java.lang.Object> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.java.lang.Object>(.ceylon.language.Object.$TypeDescriptor){
                    {
                        iter$0 = $getIterables()[0].iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0;
                    private .java.lang.Object x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem$0 = iter$0.next();
                        x$exhausted = $ceylontmpitem$0 == .ceylon.language.finished_.get_();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.java.lang.Object)$ceylontmpitem$0;
                            return true;
                        }
                    }
                    private .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo x$2;
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.x()) break;
                            .java.lang.Object x$1 = null;
                            if ((x$1 = x) instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo) {
                                x$2 = (.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)x$1;
                                break;
                            }
                        }
                        return !x$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.next1()) {
                            final .java.lang.Object x = this.x;
                            return x$2.foo();
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
    }
    
    public final void mvar(final .ceylon.language.Sequential<? extends .java.lang.Object> ys) {
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.java.lang.Object, .java.lang.Object>(.ceylon.language.Object.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor, true, new .ceylon.language.Iterable[]{ys}){
            
            public final .ceylon.language.Iterator<.java.lang.Object> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.java.lang.Object>(.ceylon.language.Object.$TypeDescriptor){
                    {
                        iter$0 = $getIterables()[0].iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .java.lang.Object> iter$0;
                    private .java.lang.Object y;
                    private boolean y$exhausted;
                    
                    private final boolean y() {
                        final .java.lang.Object $ceylontmpitem$3 = iter$0.next();
                        y$exhausted = $ceylontmpitem$3 == .ceylon.language.finished_.get_();
                        if (y$exhausted) {
                            return false;
                        } else {
                            y = (.java.lang.Object)$ceylontmpitem$3;
                            return true;
                        }
                    }
                    private .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo x$5;
                    
                    private final boolean next1() {
                        while (true) {
                            if (!this.y()) break;
                            .java.lang.Object x$4 = null;
                            if ((x$4 = y) instanceof .com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo) {
                                x$5 = (.com.redhat.ceylon.compiler.java.test.expression.comprehensions.Foo)x$4;
                                break;
                            }
                        }
                        return !y$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.next1()) {
                            final .java.lang.Object y = this.y;
                            return x$5.foo();
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfIsFoo();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfIsFoo.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.comprehensions.ForIfIsFoo.class);
}