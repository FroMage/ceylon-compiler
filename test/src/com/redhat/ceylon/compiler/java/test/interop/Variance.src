package com.redhat.ceylon.compiler.java.test.interop;

final class variance_ {
    
    private variance_() {
    }
    
    static void variance() {
        final .com.redhat.ceylon.compiler.java.test.interop.JavaVariance var = new .com.redhat.ceylon.compiler.java.test.interop.JavaVariance();
        final .ceylon.language.Callable<? extends .java.lang.Object> interfaceMethod = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("ceylon.language::Callable<ceylon.language::Object,ceylon.language::Nothing|com.redhat.ceylon.compiler.java.test.interop::Interface<ceylon.language::Object>>"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                return var.interfaceMethod((.com.redhat.ceylon.compiler.java.test.interop.Interface)$param$0);
            }
        };
        final .java.lang.Object ret1 = var.interfaceMethod((.com.redhat.ceylon.compiler.java.test.interop.Interface)var);
        final .ceylon.language.Callable<? extends .java.lang.Object> classMethod = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("ceylon.language::Callable<ceylon.language::Object,ceylon.language::Nothing|com.redhat.ceylon.compiler.java.test.interop::Class<ceylon.language::Object>>"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                return var.classMethod((.com.redhat.ceylon.compiler.java.test.interop.Class)$param$0);
            }
        };
        final .java.lang.Object ret2 = var.classMethod((.com.redhat.ceylon.compiler.java.test.interop.Class)var);
        final .com.redhat.ceylon.compiler.java.test.interop.JavaVariance m = var.<.com.redhat.ceylon.compiler.java.test.interop.JavaVariance>method(var);
        final .java.lang.Object v1 = var.roField;
        final .java.lang.Object v2 = var.rwField;
        final .java.lang.Object v3 = var.getRoProperty();
        final .java.lang.Object v4 = var.getRwProperty();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.variance_.variance();
    }
}