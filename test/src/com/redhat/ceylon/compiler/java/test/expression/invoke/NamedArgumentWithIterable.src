package com.redhat.ceylon.compiler.java.test.expression.invoke;

class NamedArgumentWithIterable implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    NamedArgumentWithIterable() {
    }
    
    private final void m$priv(final long a, final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> b) {
    }
    
    private final void defaulted$priv(final long a) {
        (
            let
            {
                .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> $ceylontmp$b$1 = defaulted$b(a);
                defaulted$priv(a, $ceylontmp$b$1);
            }
            returning null;
        );
    }
    
    private final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> defaulted$b(final long a) {
        return new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(1L));
    }
    
    private final void defaulted$priv(final long a, final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> b) {
    }
    
    private final void m2$priv(final .java.lang.Throwable a, final .ceylon.language.Iterable<? extends .java.lang.Throwable, ? extends .java.lang.Object> b) {
    }
    
    private final void m3$priv(final .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable a, final .ceylon.language.Iterable<? extends .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable, ? extends .java.lang.Object> b) {
    }
    
    private final void invoke$priv() {
        (
            let
            {
                long $arg$2$0 = 1L;
                .ceylon.language.Iterable $arg$2$1 = (.ceylon.language.Iterable).ceylon.language.empty_.getEmpty$();
                m$priv($arg$2$0, $arg$2$1);
            }
            returning null;
        );
        (
            let
            {
                long $arg$3$0 = 1L;
                .ceylon.language.Iterable $arg$3$1 = new .com.redhat.ceylon.compiler.java.language.ArraySequence(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L), .ceylon.language.Integer.instance(4L));
                m$priv($arg$3$0, $arg$3$1);
            }
            returning null;
        );
        (
            let
            {
                long $arg$4$0 = 1L;
                .ceylon.language.Iterable $arg$4$1 = (.ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object>)(.ceylon.language.Iterable)new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(4L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(5L), .ceylon.language.empty_.getEmpty$()));
                m$priv($arg$4$0, $arg$4$1);
            }
            returning null;
        );
        (
            let
            {
                long $arg$5$0 = 1L;
                .ceylon.language.Iterable $arg$5$1 = new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(4L), .ceylon.language.Integer.instance(5L));
                m$priv($arg$5$0, $arg$5$1);
            }
            returning null;
        );
        (
            let
            {
                long $arg$6$0 = 1L;
                .ceylon.language.Iterable $arg$6$1 = .com.redhat.ceylon.compiler.java.language.ArrayIterable.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, (.ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object>)(.ceylon.language.Iterable)new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(4L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(5L), .ceylon.language.empty_.getEmpty$())), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
                m$priv($arg$6$0, $arg$6$1);
            }
            returning null;
        );
        (
            let
            {
                long $arg$7$0 = 1L;
                .ceylon.language.Iterable $arg$7$1 = .com.redhat.ceylon.compiler.java.language.ArrayIterable.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(4L), .ceylon.language.Integer.instance(5L)), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
                m$priv($arg$7$0, $arg$7$1);
            }
            returning null;
        );
        (
            let
            {
                long $arg$8$0 = 1L;
                .ceylon.language.Iterable $arg$8$1 = new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
                    
                    public final .ceylon.language.Iterator<.ceylon.language.Integer> getIterator() {
                        return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor){
                            {
                                iter$0 = new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(2L)).getIterator();
                            }
                            private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0;
                            private .ceylon.language.Integer i;
                            private boolean i$exhausted;
                            
                            private final boolean i() {
                                final .java.lang.Object $ceylontmpitem9 = iter$0.next();
                                i$exhausted = $ceylontmpitem9 == .ceylon.language.finished_.getFinished$();
                                if (i$exhausted) {
                                    return false;
                                } else {
                                    i = (.ceylon.language.Integer)$ceylontmpitem9;
                                    return true;
                                }
                            }
                            
                            public final .java.lang.Object next() {
                                if (this.i()) {
                                    final .ceylon.language.Integer i = this.i;
                                    return i;
                                } else return .ceylon.language.finished_.getFinished$();
                            }
                        };
                    }
                };
                m$priv($arg$8$0, $arg$8$1);
            }
            returning null;
        );
        (
            let
            {
                long $arg$10$0 = 1L;
                .ceylon.language.Iterable $arg$10$1 = .com.redhat.ceylon.compiler.java.language.ArrayIterable.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
                    
                    public final .ceylon.language.Iterator<.ceylon.language.Integer> getIterator() {
                        return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor){
                            {
                                iter$0 = new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.instance(4L)).getIterator();
                            }
                            private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0;
                            private .ceylon.language.Integer i;
                            private boolean i$exhausted;
                            
                            private final boolean i() {
                                final .java.lang.Object $ceylontmpitem11 = iter$0.next();
                                i$exhausted = $ceylontmpitem11 == .ceylon.language.finished_.getFinished$();
                                if (i$exhausted) {
                                    return false;
                                } else {
                                    i = (.ceylon.language.Integer)$ceylontmpitem11;
                                    return true;
                                }
                            }
                            
                            public final .java.lang.Object next() {
                                if (this.i()) {
                                    final .ceylon.language.Integer i = this.i;
                                    return i;
                                } else return .ceylon.language.finished_.getFinished$();
                            }
                        };
                    }
                }, .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
                m$priv($arg$10$0, $arg$10$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable $arg$12$this$ = this;
                long $arg$12$0 = 1L;
                .ceylon.language.Iterable $arg$12$1 = $arg$12$this$.defaulted$b($arg$12$0);
                defaulted$priv($arg$12$0, $arg$12$1);
            }
            returning null;
        );
        final .java.lang.Throwable e = new .ceylon.language.Exception(.ceylon.language.String.instance(""), null);
        (
            let
            {
                .java.lang.Throwable $arg$13$0 = e;
                .ceylon.language.Iterable $arg$13$1 = new .com.redhat.ceylon.compiler.java.language.ArraySequence(.ceylon.language.Exception.$TypeDescriptor, e, e, e);
                m2$priv($arg$13$0, $arg$13$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable $arg$14$0 = this;
                .ceylon.language.Iterable $arg$14$1 = new .com.redhat.ceylon.compiler.java.language.ArraySequence(.com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable.$TypeDescriptor, this, this, this);
                m3$priv($arg$14$0, $arg$14$1);
            }
            returning null;
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable.class);
}