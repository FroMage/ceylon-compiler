package com.redhat.ceylon.compiler.java.test.expression.operator;

class IndexingTuples {
    
    IndexingTuples() {
    }
    
    private final void index$priv() {
        final .ceylon.language.Tuple<.java.lang.Object, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Sequential<? extends .ceylon.language.Character>, ? extends .ceylon.language.String, ? extends .ceylon.language.Tuple<.ceylon.language.Singleton<? extends .ceylon.language.Character>, ? extends .ceylon.language.Singleton<? extends .ceylon.language.Character>, ? extends .ceylon.language.Empty>>> t = new .ceylon.language.Tuple(.ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Sequential<? extends .ceylon.language.Character>, .ceylon.language.String, .ceylon.language.Tuple<.ceylon.language.Singleton<? extends .ceylon.language.Character>, ? extends .ceylon.language.Singleton<? extends .ceylon.language.Character>, ? extends .ceylon.language.Empty>>(.ceylon.language.String.instance("2"), new .ceylon.language.Tuple<.ceylon.language.Singleton<? extends .ceylon.language.Character>, .ceylon.language.Singleton<? extends .ceylon.language.Character>, .ceylon.language.Empty>(new .ceylon.language.Singleton<.ceylon.language.Character>(.ceylon.language.Character.instance(51)), .ceylon.language.empty_.getEmpty$())));
        final long v1 = ((.ceylon.language.Integer)((.ceylon.language.Correspondence<? super .ceylon.language.Integer, ? extends .java.lang.Object>)(.ceylon.language.Correspondence)t).get(.ceylon.language.Integer.instance(0L))).longValue();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.operator.IndexingTuples();
    }
}