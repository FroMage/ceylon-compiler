package com.redhat.ceylon.compiler.java.test.expression.lambda;

final class anonFunctionNullary_ {
    
    private anonFunctionNullary_() {
    }
    
    static <T>void anonFunctionNullary(final T t) {
        final .ceylon.language.Callable<? extends .ceylon.language.String> s1 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>("ceylon.language::Callable<ceylon.language::String>"){
            
            @.java.lang.Override
            public .ceylon.language.String $call() {
                return .ceylon.language.String.instance("");
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.String> s2 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>("ceylon.language::Callable<ceylon.language::String>"){
            
            @.java.lang.Override
            public .ceylon.language.String $call() {
                return .ceylon.language.String.instance("");
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.List<? extends .ceylon.language.String>> s3 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequence<? extends .ceylon.language.String>>("ceylon.language::Callable<ceylon.language::Sequence<ceylon.language::String>>"){
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.String> $call() {
                return new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.String>(.ceylon.language.String.instance(""));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Integer> i1 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>("ceylon.language::Callable<ceylon.language::Integer>"){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call() {
                return .ceylon.language.Integer.instance(1L);
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Integer> i2 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>("ceylon.language::Callable<ceylon.language::Integer>"){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call() {
                return .ceylon.language.Integer.instance(1L);
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.List<? extends .ceylon.language.Integer>> i3 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequence<? extends .ceylon.language.Integer>>("ceylon.language::Callable<ceylon.language::Sequence<ceylon.language::Integer>>"){
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Integer> $call() {
                return new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.Integer>(.ceylon.language.Integer.instance(1L));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Float> f1 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Float>("ceylon.language::Callable<ceylon.language::Float>"){
            
            @.java.lang.Override
            public .ceylon.language.Float $call() {
                return .ceylon.language.Float.instance(1.0);
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Float> f2 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Float>("ceylon.language::Callable<ceylon.language::Float>"){
            
            @.java.lang.Override
            public .ceylon.language.Float $call() {
                return .ceylon.language.Float.instance(1.0);
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.List<? extends .ceylon.language.Float>> f3 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequence<? extends .ceylon.language.Float>>("ceylon.language::Callable<ceylon.language::Sequence<ceylon.language::Float>>"){
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Float> $call() {
                return new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.Float>(.ceylon.language.Float.instance(1.0));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.List<? extends .java.lang.Object>> if3 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequence<? extends .java.lang.Object>>("ceylon.language::Callable<ceylon.language::Sequence<ceylon.language::Integer|ceylon.language::Float>>"){
            
            @.java.lang.Override
            public .ceylon.language.Sequence $call() {
                return new .com.redhat.ceylon.compiler.java.language.ArraySequence(.ceylon.language.Integer.instance(1L), .ceylon.language.Float.instance(1.0));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Boolean> b1 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Boolean>("ceylon.language::Callable<ceylon.language::Boolean>"){
            
            @.java.lang.Override
            public .ceylon.language.Boolean $call() {
                return .ceylon.language.Boolean.instance(true);
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Boolean> b2 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Boolean>("ceylon.language::Callable<ceylon.language::Boolean>"){
            
            @.java.lang.Override
            public .ceylon.language.Boolean $call() {
                return .ceylon.language.Boolean.instance(true);
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.List<? extends .ceylon.language.Boolean>> b3 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequence<? extends .ceylon.language.Boolean>>("ceylon.language::Callable<ceylon.language::Sequence<ceylon.language::Boolean>>"){
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Boolean> $call() {
                return new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.Boolean>(.ceylon.language.Boolean.instance(true));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Comparison> c1 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Comparison>("ceylon.language::Callable<ceylon.language::Comparison>"){
            
            @.java.lang.Override
            public .ceylon.language.Comparison $call() {
                return .ceylon.language.larger_.getLarger$();
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Comparison> c2 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Comparison>("ceylon.language::Callable<ceylon.language::Comparison>"){
            
            @.java.lang.Override
            public .ceylon.language.Comparison $call() {
                return .ceylon.language.larger_.getLarger$();
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.List<? extends .ceylon.language.Comparison>> c3 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequence<? extends .ceylon.language.Comparison>>("ceylon.language::Callable<ceylon.language::Sequence<ceylon.language::Comparison>>"){
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends .ceylon.language.Comparison> $call() {
                return new .com.redhat.ceylon.compiler.java.language.ArraySequence<.ceylon.language.Comparison>(.ceylon.language.larger_.getLarger$(), .ceylon.language.smaller_.getSmaller$());
            }
        };
        final .ceylon.language.Callable<? extends T> t1 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<T>("ceylon.language::Callable<T>"){
            
            @.java.lang.Override
            public T $call() {
                return t;
            }
        };
        final .ceylon.language.Callable<? extends T> t2 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<T>("ceylon.language::Callable<T>"){
            
            @.java.lang.Override
            public T $call() {
                return t;
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.List<? extends T>> t3 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequence<? extends T>>("ceylon.language::Callable<ceylon.language::Sequence<T>>"){
            
            @.java.lang.Override
            public .ceylon.language.Sequence<? extends T> $call() {
                return new .com.redhat.ceylon.compiler.java.language.ArraySequence<T>(t);
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.List<? extends .java.lang.Object>> it3 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Sequence<? extends .java.lang.Object>>("ceylon.language::Callable<ceylon.language::Sequence<T|ceylon.language::Integer>>"){
            
            @.java.lang.Override
            public .ceylon.language.Sequence $call() {
                return new .com.redhat.ceylon.compiler.java.language.ArraySequence(t, .ceylon.language.Integer.instance(1L));
            }
        };
    }
}