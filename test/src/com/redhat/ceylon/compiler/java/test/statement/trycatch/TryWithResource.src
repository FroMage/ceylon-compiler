package com.redhat.ceylon.compiler.java.test.statement.trycatch;

class TryWithResource implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.Closeable {
    
    TryWithResource(final long n) {
        this.$ceylon$language$Closeable$this = new .ceylon.language.Closeable$impl(this);
    }
    protected final .ceylon.language.Closeable$impl $ceylon$language$Closeable$this;
    
    @.java.lang.Override
    public .ceylon.language.Closeable$impl $ceylon$language$Closeable$impl() {
        return $ceylon$language$Closeable$this;
    }
    
    @.java.lang.Override
    public final .java.lang.Object open() {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object close(final .java.lang.Throwable e) {
        return null;
    }
    
    public final void m() {
        {
            .ceylon.language.Closeable $ceylontmptry0 = new .com.redhat.ceylon.compiler.java.test.statement.trycatch.TryWithResource(0L);
            $ceylontmptry0.open();
            .java.lang.Exception $ceylontmpex1 = null;
            try {
            } catch (final .java.lang.Exception $ceylontmpex2) {
                $ceylontmpex1 = $ceylontmpex2;
                throw $ceylontmpex2;
            } finally {
                if ($ceylontmpex1 != null) try {
                    $ceylontmptry0.close($ceylontmpex1);
                } catch (final .java.lang.Exception $ceylontmpclosex3) {
                } else $ceylontmptry0.close($ceylontmpex1);
            }
        }
        {
            .ceylon.language.Closeable $ceylontmptry12 = new .com.redhat.ceylon.compiler.java.test.statement.trycatch.TryWithResource(1L);
            $ceylontmptry12.open();
            .java.lang.Exception $ceylontmpex13 = null;
            try {
                .ceylon.language.Closeable $ceylontmptry8 = new .com.redhat.ceylon.compiler.java.test.statement.trycatch.TryWithResource(2L);
                $ceylontmptry8.open();
                .java.lang.Exception $ceylontmpex9 = null;
                try {
                    .ceylon.language.Closeable $ceylontmptry4 = new .com.redhat.ceylon.compiler.java.test.statement.trycatch.TryWithResource(3L);
                    $ceylontmptry4.open();
                    .java.lang.Exception $ceylontmpex5 = null;
                    try {
                    } catch (final .java.lang.Exception $ceylontmpex6) {
                        $ceylontmpex5 = $ceylontmpex6;
                        throw $ceylontmpex6;
                    } finally {
                        if ($ceylontmpex5 != null) try {
                            $ceylontmptry4.close($ceylontmpex5);
                        } catch (final .java.lang.Exception $ceylontmpclosex7) {
                        } else $ceylontmptry4.close($ceylontmpex5);
                    }
                } catch (final .java.lang.Exception $ceylontmpex10) {
                    $ceylontmpex9 = $ceylontmpex10;
                    throw $ceylontmpex10;
                } finally {
                    if ($ceylontmpex9 != null) try {
                        $ceylontmptry8.close($ceylontmpex9);
                    } catch (final .java.lang.Exception $ceylontmpclosex11) {
                    } else $ceylontmptry8.close($ceylontmpex9);
                }
            } catch (final .java.lang.Exception $ceylontmpex14) {
                $ceylontmpex13 = $ceylontmpex14;
                throw $ceylontmpex14;
            } finally {
                if ($ceylontmpex13 != null) try {
                    $ceylontmptry12.close($ceylontmpex13);
                } catch (final .java.lang.Exception $ceylontmpclosex15) {
                } else $ceylontmptry12.close($ceylontmpex13);
            }
        }
    }
    
    private final .ceylon.language.Closeable $getResource$priv() {
        return new .com.redhat.ceylon.compiler.java.test.statement.trycatch.TryWithResource(4L);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.statement.trycatch.TryWithResource.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.trycatch.TryWithResource.class);
}