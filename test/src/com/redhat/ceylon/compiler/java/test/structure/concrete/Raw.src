package com.redhat.ceylon.compiler.java.test.structure.concrete;

interface RawInv<T, U> {
    
    public abstract T getA();
    
    public T getADefault();
    
    public void setADefault(final T aDefault);
    
    public abstract T m(final T t);
    
    public T mDefault(final T t);
    
    public abstract T mDefaulted();
    
    public abstract T mDefaulted$t();
    
    public abstract T mDefaulted(final T t);
    
    public abstract U getA2();
}
final class RawInv$impl<T, U> {
    
    RawInv$impl(.com.redhat.ceylon.compiler.java.test.structure.concrete.RawInv<T, U> $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.concrete.RawInv<T, U> $this;
    
    public final T getA() {
        return $this.getA();
    }
    
    public final T getADefault() {
        throw new .ceylon.language.Exception(null, null);
    }
    
    public void setADefault(final T aDefault) {
    }
    
    public T mDefault(final T t) {
        throw new .ceylon.language.Exception(null, null);
    }
    
    public final T mDefaulted() {
        return (
            let
            {
                T $ceylontmp$t$1 = mDefaulted$t();
            }
            returning $this.mDefaulted($ceylontmp$t$1);
        );
    }
    
    public final T mDefaulted$t() {
        return null;
    }
    
    public final U getA2() {
        return $this.getA2();
    }
}
class RawInvImplementor<X, Y> implements .com.redhat.ceylon.compiler.java.test.structure.concrete.RawInv<.java.lang.Object, Y> {
    
    RawInvImplementor() {
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$RawInv$this = new .com.redhat.ceylon.compiler.java.test.structure.concrete.RawInv$impl<.java.lang.Object, Y>(this);
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.RawInv$impl<.java.lang.Object, Y> $com$redhat$ceylon$compiler$java$test$structure$concrete$RawInv$this;
    
    @.java.lang.Override
    public .java.lang.Object getADefault() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$RawInv$this.getADefault();
    }
    
    @.java.lang.Override
    public void setADefault(final .java.lang.Object aDefault) {
        $com$redhat$ceylon$compiler$java$test$structure$concrete$RawInv$this.setADefault(aDefault);
    }
    
    @.java.lang.Override
    public .java.lang.Object mDefault(final .java.lang.Object t) {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$RawInv$this.mDefault(t);
    }
    
    @.java.lang.Override
    public final .java.lang.Object mDefaulted$t() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$RawInv$this.mDefaulted$t();
    }
    
    @.java.lang.Override
    public final .java.lang.Object mDefaulted() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$RawInv$this.mDefaulted();
    }
    
    @.java.lang.Override
    public final .java.lang.Object getA() {
        throw new .ceylon.language.Exception(null, null);
    }
    
    @.java.lang.Override
    public final Y getA2() {
        throw new .ceylon.language.Exception(null, null);
    }
    
    @.java.lang.Override
    public final .java.lang.Object m(final .java.lang.Object t) {
        throw new .ceylon.language.Exception(null, null);
    }
    
    @.java.lang.Override
    public final .java.lang.Object mDefaulted(final .java.lang.Object t) {
        throw new .ceylon.language.Exception(null, null);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.RawInvImplementor();
    }
}
interface RawIn<T, U> {
    
    public abstract .java.lang.Object m(final T t);
    
    public .java.lang.Object mDefault(final T t);
    
    public abstract .java.lang.Object mDefaulted();
    
    public abstract T mDefaulted$t();
    
    public abstract .java.lang.Object mDefaulted(final T t);
    
    public abstract .java.lang.Object m2(final U u);
}
final class RawIn$impl<T, U> {
    
    RawIn$impl(.com.redhat.ceylon.compiler.java.test.structure.concrete.RawIn<? super T, U> $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.concrete.RawIn<? super T, U> $this;
    
    public .java.lang.Object mDefault(final T t) {
        return null;
    }
    
    public final .java.lang.Object mDefaulted() {
        return (
            let
            {
                T $ceylontmp$t$5 = mDefaulted$t();
            }
            returning $this.mDefaulted($ceylontmp$t$5);
        );
    }
    
    public final T mDefaulted$t() {
        return null;
    }
}
class RawInImplementor<X, Y> implements .com.redhat.ceylon.compiler.java.test.structure.concrete.RawIn<.java.lang.Object, Y> {
    
    RawInImplementor() {
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$RawIn$this = new .com.redhat.ceylon.compiler.java.test.structure.concrete.RawIn$impl<.java.lang.Object, Y>(this);
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.RawIn$impl<.java.lang.Object, Y> $com$redhat$ceylon$compiler$java$test$structure$concrete$RawIn$this;
    
    @.java.lang.Override
    public .java.lang.Object mDefault(final .java.lang.Object t) {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$RawIn$this.mDefault(t);
    }
    
    @.java.lang.Override
    public final .java.lang.Object mDefaulted$t() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$RawIn$this.mDefaulted$t();
    }
    
    @.java.lang.Override
    public final .java.lang.Object mDefaulted() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$RawIn$this.mDefaulted();
    }
    
    @.java.lang.Override
    public final .java.lang.Object m2(final .java.lang.Object u) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m(final .java.lang.Object t) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object mDefaulted(final .java.lang.Object t) {
        return null;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.RawInImplementor();
    }
}
interface RawOut<T, U> {
    
    public abstract T getA();
    
    public T getADefault();
    
    public abstract T m();
    
    public T mDefault();
    
    public abstract U getA2();
}
final class RawOut$impl<T, U> {
    
    RawOut$impl(.com.redhat.ceylon.compiler.java.test.structure.concrete.RawOut<? extends T, U> $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.concrete.RawOut<? extends T, U> $this;
    
    public final T getA() {
        return $this.getA();
    }
    
    public final T getADefault() {
        throw new .ceylon.language.Exception(null, null);
    }
    
    public T mDefault() {
        throw new .ceylon.language.Exception(null, null);
    }
    
    public final U getA2() {
        return $this.getA2();
    }
}
class RawOutImplementor<X, Y> implements .com.redhat.ceylon.compiler.java.test.structure.concrete.RawOut<.java.lang.Object, Y> {
    
    RawOutImplementor() {
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$RawOut$this = new .com.redhat.ceylon.compiler.java.test.structure.concrete.RawOut$impl<.java.lang.Object, Y>(this);
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.RawOut$impl<.java.lang.Object, Y> $com$redhat$ceylon$compiler$java$test$structure$concrete$RawOut$this;
    
    @.java.lang.Override
    public final .java.lang.Object getADefault() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$RawOut$this.getADefault();
    }
    
    @.java.lang.Override
    public .java.lang.Object mDefault() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$RawOut$this.mDefault();
    }
    
    @.java.lang.Override
    public final .java.lang.Object getA() {
        throw new .ceylon.language.Exception(null, null);
    }
    
    @.java.lang.Override
    public final .java.lang.Object m() {
        throw new .ceylon.language.Exception(null, null);
    }
    
    @.java.lang.Override
    public final Y getA2() {
        throw new .ceylon.language.Exception(null, null);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.RawOutImplementor();
    }
}