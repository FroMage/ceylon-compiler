package com.redhat.ceylon.compiler.java.test.structure.concrete;

interface Container {
    
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.Container$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$Container$impl();
}
final class Container$impl {
    
    Container$impl(.com.redhat.ceylon.compiler.java.test.structure.concrete.Container $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.concrete.Container $this;
}
class NameCollision implements .com.redhat.ceylon.compiler.java.test.structure.concrete.Container, .ceylon.language.Container<.ceylon.language.Integer, .java.lang.Object> {
    
    NameCollision() {
        this.$com$redhat$ceylon$compiler$java$test$structure$concrete$Container$this = new .com.redhat.ceylon.compiler.java.test.structure.concrete.Container$impl(this);
        this.$ceylon$language$Container$this = new .ceylon.language.Container$impl<.ceylon.language.Integer, .java.lang.Object>(this);
        this.$ceylon$language$Category$this = new .ceylon.language.Category$impl(this);
        this.empty = true;
    }
    protected final .com.redhat.ceylon.compiler.java.test.structure.concrete.Container$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$Container$this;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.test.structure.concrete.Container$impl $com$redhat$ceylon$compiler$java$test$structure$concrete$Container$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$concrete$Container$this;
    }
    protected final .ceylon.language.Container$impl<.ceylon.language.Integer, .java.lang.Object> $ceylon$language$Container$this;
    
    @.java.lang.Override
    public .ceylon.language.Container$impl<.ceylon.language.Integer, .java.lang.Object> $ceylon$language$Container$impl() {
        return $ceylon$language$Container$this;
    }
    protected final .ceylon.language.Category$impl $ceylon$language$Category$this;
    
    @.java.lang.Override
    public .ceylon.language.Category$impl $ceylon$language$Category$impl() {
        return $ceylon$language$Category$this;
    }
    
    @.java.lang.Override
    public boolean containsEvery(final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> elements) {
        return $ceylon$language$Category$this.containsEvery(elements);
    }
    
    @.java.lang.Override
    public boolean containsAny(final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> elements) {
        return $ceylon$language$Category$this.containsAny(elements);
    }
    private final boolean empty;
    
    @.java.lang.Override
    public final boolean getEmpty() {
        return empty;
    }
    
    @.java.lang.Override
    public final boolean contains(final .java.lang.Object element) {
        return false;
    }
    
    @.java.lang.Override
    public final .ceylon.language.Integer getFirst() {
        return (.ceylon.language.Integer).ceylon.language.nothing_.getNothing$();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Integer getLast() {
        return (.ceylon.language.Integer).ceylon.language.nothing_.getNothing$();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.NameCollision();
    }
}