package com.redhat.ceylon.compiler.java.test.structure.nesting.iic;

interface I$II<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
    
    public .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$II<T, X> $com$redhat$ceylon$compiler$java$test$structure$nesting$iic$I$impl$II$impl();
}
interface I<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
    
    public .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$impl<T, X> $com$redhat$ceylon$compiler$java$test$structure$nesting$iic$I$impl();
    
    public abstract <U>T m1(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedU, final X b);
    
    public abstract <U>U m1$u(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedU, final X b);
    
    public abstract <U>T m1(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedU, final X b, final U u);
}
final class I$impl<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
    
    I$impl(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX, .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I<? extends T, ? super X> $this) {
        this.$reifiedT = $reifiedT;
        this.$reifiedX = $reifiedX;
        this.$this = $this;
    }
    private .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT;
    private .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX;
    private final .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I<? extends T, ? super X> $this;
    
    public void $refine(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX) {
        this.$reifiedX = $reifiedX;
        this.$reifiedT = $reifiedT;
    }
    
    public final <U>T m1(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedU, final X b) {
        return (
            let
            {
                U $ceylontmp$u$0 = m1$u($reifiedU, b);
            }
            returning $this.m1($reifiedU, b, $ceylontmp$u$0);
        );
    }
    
    public final <U>U m1$u(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedU, final X b) {
        return null;
    }
    
    final class II$impl {
        
        II$impl(.com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$II<? extends T, ? super X> $this) {
            this.$this = $this;
        }
        private final .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$II<? extends T, ? super X> $this;
        
        class IIC implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            IIC() {
            }
            
            private final T m2$priv() {
                return .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$impl.this.$this.<.java.lang.Object>m1(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null);
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I.class, .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$impl.this.$reifiedT, .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$impl.this.$reifiedX), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$II.class)), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$impl.II$impl.IIC.class));
            }
        }
    }
}