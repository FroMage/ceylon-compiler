package com.redhat.ceylon.compiler.java.test.statement.conditional;

class AssertConditionList {
    
    AssertConditionList() {
    }
    
    private final boolean m(final .ceylon.language.List<? extends .java.lang.Object> x) {
        .java.lang.String $ceylontmpassert0 = null;
        final long $y$4;
        final .ceylon.language.Sequence<? extends .java.lang.Object> $x$2;
        .ceylon.language.List<? extends .java.lang.Object> $x$1 = null;
        if (($x$1 = x) instanceof .ceylon.language.FixedSized && !((.ceylon.language.FixedSized)$x$1).getEmpty()) {
            $x$2 = (.ceylon.language.Sequence<? extends .java.lang.Object>)$x$1;
            .java.lang.Object $y$3 = null;
            if (($y$3 = $x$2.item(.ceylon.language.Integer.instance(0L))) instanceof .ceylon.language.Integer) {
                $y$4 = ((.ceylon.language.Integer)$y$3).longValue();
                if ($y$4 > 0L) {
                } else {
                    $ceylontmpassert0 = "\tunviolated " + "nonempty x" + .java.lang.System.lineSeparator() + "\tunviolated " + "is Integer y = x[0]" + .java.lang.System.lineSeparator() + "\tviolated " + "y > 0" + .java.lang.System.lineSeparator();
                }
            } else {
                $y$4 = 0L;
                $ceylontmpassert0 = "\tunviolated " + "nonempty x" + .java.lang.System.lineSeparator() + "\tviolated " + "is Integer y = x[0]" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0" + .java.lang.System.lineSeparator();
            }
        } else {
            $x$2 = null;
            $y$4 = 0L;
            $ceylontmpassert0 = "\tviolated " + "nonempty x" + .java.lang.System.lineSeparator() + "\tuntested " + "is Integer y = x[0]" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0" + .java.lang.System.lineSeparator();
        }
        if ($ceylontmpassert0 != null) throw new .ceylon.language.Exception(.ceylon.language.String.instance("Assertion failed" + .java.lang.System.lineSeparator() + ($ceylontmpassert0 + "\tat " + "AssertConditionListNonemptyIsBool.ceylon:23:8-23:55")), null);
        return $y$4 == 1L;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertConditionList();
    }
}