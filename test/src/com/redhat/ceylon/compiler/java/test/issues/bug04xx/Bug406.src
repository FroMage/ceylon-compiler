package com.redhat.ceylon.compiler.java.test.issues.bug04xx;

class Bug406 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    Bug406() {
    }
    
    private final void test$priv$() {
        final .ceylon.language.Sequential<? extends .ceylon.language.String> full = new .ceylon.language.Tuple<.ceylon.language.String, .ceylon.language.String, .ceylon.language.Tuple<.ceylon.language.String, ? extends .ceylon.language.String, ? extends .ceylon.language.Sequential<? extends .ceylon.language.String>>>(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.String.instance("hello"),
                .ceylon.language.String.instance("world")});
        final .ceylon.language.Sequential<? extends .ceylon.language.String> spread1 = (
            let
            {
                .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object> spread$0$iterable$ = full;
                .ceylon.language.impl.SequenceBuilder<.ceylon.language.String> spread$0$sb$ = new .ceylon.language.impl.SequenceBuilder<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$);
                .java.lang.Object spread$0$iteration$;
                .ceylon.language.Iterator<? extends .ceylon.language.String> spread$0$iterator$ = spread$0$iterable$.iterator();
                while (!((spread$0$iteration$ = spread$0$iterator$.next()) instanceof .ceylon.language.Finished)) {
                    .ceylon.language.String spread$0$element$ = (.ceylon.language.String)spread$0$iteration$;
                    spread$0$sb$.append(.ceylon.language.String.instance(spread$0$element$.getUppercased()));
                }
            }
            returning spread$0$sb$.sequence();
        );
        .ceylon.language.String s1s$2;
        if ((s1s$2 = spread1.get(.ceylon.language.Integer.instance(0L))) != null) {
            final .java.lang.String s1s$3 = s1s$2.toString();
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.issues.bug04xx.Bug406();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug04xx.Bug406.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug04xx.Bug406.class);
}