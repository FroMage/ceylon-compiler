package com.redhat.ceylon.compiler.java.test.issues.bug04xx;

class Bug406 {
    
    Bug406() {
    }
    
    private final void test() {
        final .ceylon.language.Sequential<? extends .ceylon.language.String> full = new .ceylon.language.Tuple<.ceylon.language.String, .ceylon.language.String, .ceylon.language.Tuple<.ceylon.language.String, ? extends .ceylon.language.String, ? extends .ceylon.language.Empty>>(.ceylon.language.String.instance("hello"), new .ceylon.language.Tuple<.ceylon.language.String, .ceylon.language.String, .ceylon.language.Empty>(.ceylon.language.String.instance("world"), .ceylon.language.empty_.getEmpty$()));
        final .ceylon.language.Sequential<? extends .ceylon.language.String> spread1 = (
            let
            {
                .ceylon.language.Iterable<? extends .ceylon.language.String> $spread$0$iterable = full;
                .ceylon.language.SequenceBuilder<.ceylon.language.String> $spread$0$sequenceBuilder = new .ceylon.language.SequenceBuilder<.ceylon.language.String>();
                .java.lang.Object $spread$0$iteration;
                for (.ceylon.language.Iterator<? extends .ceylon.language.String> $spread$0$iterator = $spread$0$iterable.getIterator(); !(($spread$0$iteration = $spread$0$iterator.next()) instanceof .ceylon.language.Finished); ) {
                    .ceylon.language.String $spread$0$element = (.ceylon.language.String)$spread$0$iteration;
                    $spread$0$sequenceBuilder.append(.ceylon.language.String.instance($spread$0$element.getUppercased()));
                }
            }
            returning $spread$0$sequenceBuilder.getSequence();
        );
        .ceylon.language.String $s1s$2;
        if (($s1s$2 = spread1.item(.ceylon.language.Integer.instance(0L))) != null) {
            final .java.lang.String $s1s$3 = $s1s$2.toString();
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.issues.bug04xx.Bug406();
    }
}