package com.redhat.ceylon.compiler.java.test.expression.invoke;

class CallableArgumentAnything implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    CallableArgumentAnything() {
    }
    
    private final void f$priv(final .ceylon.language.Callable<? extends .java.lang.Object> g) {
        g.$call();
    }
    
    private final void m$priv() {
    }
    
    public .java.lang.Object m2() {
        return null;
    }
    
    public .java.lang.Object m3() {
        return .ceylon.language.Integer.instance(1L);
    }
    
    private final void callsite$priv() {
        f$priv(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, "Anything()"){
            
            @.java.lang.Override
            public .java.lang.Object $call() {
                return (
                    let
                    {
                        m$priv();
                    }
                    returning null;
                );
            }
        });
        f$priv(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, "Anything()"){
            
            @.java.lang.Override
            public .java.lang.Object $call() {
                return m2();
            }
        });
        f$priv(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, "Anything()"){
            
            @.java.lang.Override
            public .java.lang.Object $call() {
                return m3();
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentAnything();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentAnything.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentAnything.class);
}