package com.redhat.ceylon.compiler.java.test.expression.invoke;

class NamedArgumentInvocationInitWithEmptySequence implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    NamedArgumentInvocationInitWithEmptySequence() {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$b$0 = .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithEmptySequence.$init$b();
                this($ceylontmp$b$0);
            }
            returning null;
        );
    }
    
    NamedArgumentInvocationInitWithEmptySequence(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> b) {
        final .java.lang.Object o = (
            let
            {
                .ceylon.language.Sequential $arg$1$0 = .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithEmptySequence.$init$b();
            }
            returning new .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithEmptySequence($arg$1$0);
        );
    }
    
    static .ceylon.language.Sequential<? extends .ceylon.language.Integer> $init$b() {
        return (.ceylon.language.Sequential).ceylon.language.empty_.$get();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithEmptySequence.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentInvocationInitWithEmptySequence.class);
}