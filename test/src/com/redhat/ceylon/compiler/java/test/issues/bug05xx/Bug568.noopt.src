package com.redhat.ceylon.compiler.java.test.issues.bug05xx;

final class bug568_ {
    
    private bug568_() {
    }
    
    static void bug568() {
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> childPaths = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential).ceylon.language.empty_.get_();
        .java.lang.Object elem$0;
        .ceylon.language.Iterator<? extends .ceylon.language.String> s$iterator$$2 = (
            let
            {
                .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> spread$1$iterable$ = childPaths;
                .com.redhat.ceylon.compiler.java.language.SequenceBuilder<.ceylon.language.String> spread$1$sb$ = new .com.redhat.ceylon.compiler.java.language.SequenceBuilder<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$);
                .java.lang.Object spread$1$iteration$;
                .ceylon.language.Iterator<? extends .ceylon.language.Integer> spread$1$iterator$ = spread$1$iterable$.iterator();
                while (!((spread$1$iteration$ = spread$1$iterator$.next()) instanceof .ceylon.language.Finished)) {
                    .ceylon.language.Integer spread$1$element$ = (.ceylon.language.Integer)spread$1$iteration$;
                    spread$1$sb$.append(.ceylon.language.String.instance(spread$1$element$.toString()));
                }
            }
            returning spread$1$sb$.getSequence();
        ).iterator();
        loop_0: while (!((elem$0 = s$iterator$$2.next()) instanceof .ceylon.language.Finished)) {
            final .java.lang.String s = ((.ceylon.language.String)elem$0).toString();
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug05xx.bug568_.bug568();
    }
}