package com.redhat.ceylon.compiler.java.test.structure.klass;

class DeferredMethodInitializationMultipleSpecification {
    
    DeferredMethodInitializationMultipleSpecification(boolean b) {
        this.s = null;
        if (b) {
            s = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>("String()"){
                
                @.java.lang.Override
                public .ceylon.language.String $call(final .java.lang.Object $param$0) {
                    final .java.lang.String name2 = ((.ceylon.language.String)$param$0).toString();
                    return .ceylon.language.String.instance("hello " + name2);
                }
            };
            s();
        }
    }
    private .ceylon.language.Callable<? extends .ceylon.language.String> s;
    
    private final .java.lang.String s() {
        return (
            let
            {
                .java.lang.String $ceylontmp$name$1 = s$name();
            }
            returning s($ceylontmp$name$1);
        );
    }
    
    private final .java.lang.String s$name() {
        return "world";
    }
    
    private final .java.lang.String s(final .java.lang.String name) {
        if (s == null) throw new .com.redhat.ceylon.compiler.java.language.UninitializedMethodError(); else return s.$call(name).toString();
    }
}