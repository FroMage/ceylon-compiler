package com.redhat.ceylon.compiler.java.test.expression.selfref;

class SuperReference {
    
    SuperReference() {
        this.a = 0L;
    }
    private long a;
    
    public final long getA() {
        return a;
    }
    
    public final void setA(final long a) {
        this.a = a;
    }
    
    public .java.lang.Object m(final .com.redhat.ceylon.compiler.java.test.expression.selfref.SuperReferenceChild x) {
        x.test();
        return null;
    }
    
    public .java.lang.Object test() {
        return null;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.selfref.SuperReference();
    }
}
class SuperReferenceChild extends .com.redhat.ceylon.compiler.java.test.expression.selfref.SuperReference {
    
    SuperReferenceChild() {
        super();
    }
    
    @.java.lang.Override
    public final .java.lang.Object test() {
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.selfref.SuperReference $ceylontmpopE0 = super;
                long $ceylontmpopV1 = $ceylontmpopE0.getA();
                $ceylontmpopE0.setA($ceylontmpopV1 + 1);
            }
            returning $ceylontmpopV1;
        );
        super.test();
        return null;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.selfref.SuperReferenceChild();
    }
}