package com.redhat.ceylon.compiler.java.test.statement.conditional;

class AssertConditionListExistsIsBool {
    
    AssertConditionListExistsIsBool() {
    }
    
    private final boolean m$priv(final .ceylon.language.Sequential<? extends .java.lang.Object> x) {
        .java.lang.String $ceylontmpassert0 = null;
        final long $y$4;
        final .java.lang.Object $z$2;
        .java.lang.Object $z$1 = null;
        if (($z$1 = x.get(.ceylon.language.Integer.instance(0L))) != null) {
            $z$2 = $z$1;
            .java.lang.Object $y$3 = null;
            if (($y$3 = $z$2) instanceof .ceylon.language.Integer) {
                $y$4 = ((.ceylon.language.Integer)$y$3).longValue();
                if ($y$4 > 0L) {
                } else {
                    $ceylontmpassert0 = .java.lang.System.lineSeparator() + "\tunviolated " + "exists z=x[0]" + (.java.lang.System.lineSeparator() + "\tunviolated ") + "is Integer y = z" + (.java.lang.System.lineSeparator() + "\tviolated ") + "y > 0";
                }
            } else {
                $y$4 = 0L;
                $ceylontmpassert0 = .java.lang.System.lineSeparator() + "\tunviolated " + "exists z=x[0]" + (.java.lang.System.lineSeparator() + "\tviolated ") + "is Integer y = z" + (.java.lang.System.lineSeparator() + "\tuntested ") + "y > 0";
            }
        } else {
            $z$2 = null;
            $y$4 = 0L;
            $ceylontmpassert0 = .java.lang.System.lineSeparator() + "\tviolated " + "exists z=x[0]" + (.java.lang.System.lineSeparator() + "\tuntested ") + "is Integer y = z" + (.java.lang.System.lineSeparator() + "\tuntested ") + "y > 0";
        }
        if ($ceylontmpassert0 != null) throw new .ceylon.language.AssertionException("Assertion failed" + $ceylontmpassert0);
        return $y$4 == 1L;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertConditionListExistsIsBool();
    }
}