package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class namedArgumentInvocationWithDefaultedSequence_ {
    
    private namedArgumentInvocationWithDefaultedSequence_() {
    }
    
    static void namedArgumentInvocationWithDefaultedSequence(final long num) {
        
        final class callFunction_ {
            
            private callFunction_() {
            }
            
            final void callFunction() {
                (
                    let
                    {
                        long $ceylontmp$i$1 = callFunction$i();
                        .java.lang.String $ceylontmp$s$2 = callFunction$s($ceylontmp$i$1);
                        .ceylon.language.Sequential<? extends .ceylon.language.Character> $ceylontmp$c$3 = callFunction$c($ceylontmp$i$1, $ceylontmp$s$2);
                        callFunction($ceylontmp$i$1, $ceylontmp$s$2, $ceylontmp$c$3);
                    }
                    returning null;
                );
            }
            
            private final long callFunction$i() {
                return 2L;
            }
            
            final void callFunction(final long i) {
                (
                    let
                    {
                        .java.lang.String $ceylontmp$s$5 = callFunction$s(i);
                        .ceylon.language.Sequential<? extends .ceylon.language.Character> $ceylontmp$c$6 = callFunction$c(i, $ceylontmp$s$5);
                        callFunction(i, $ceylontmp$s$5, $ceylontmp$c$6);
                    }
                    returning null;
                );
            }
            
            private final .java.lang.String callFunction$s(final long i) {
                return "";
            }
            
            final void callFunction(final long i, final .java.lang.String s) {
                (
                    let
                    {
                        .ceylon.language.Sequential<? extends .ceylon.language.Character> $ceylontmp$c$8 = callFunction$c(i, s);
                        callFunction(i, s, $ceylontmp$c$8);
                    }
                    returning null;
                );
            }
            
            private final .ceylon.language.Sequential<? extends .ceylon.language.Character> callFunction$c(final long i, final .java.lang.String s) {
                return new .ceylon.language.Tuple(.ceylon.language.Character.instance(97), new .ceylon.language.Tuple(.ceylon.language.Character.instance(98), .ceylon.language.empty_.getEmpty$()));
            }
            
            void callFunction(final long i, final .java.lang.String s, final .ceylon.language.Sequential<? extends .ceylon.language.Character> c) {
            }
        }
        final callFunction_ callFunction = new callFunction_();
        (
            let
            {
                callFunction_ $arg$9$this$ = callFunction;
                .java.lang.String $arg$9$1 = "s";
                long $arg$9$0 = 0L;
                .ceylon.language.Sequential<? extends .ceylon.language.Character> $arg$9$2 = $arg$9$this$.callFunction$c($arg$9$0, $arg$9$1);
                callFunction.callFunction($arg$9$0, $arg$9$1, $arg$9$2);
            }
            returning null;
        );
    }
}