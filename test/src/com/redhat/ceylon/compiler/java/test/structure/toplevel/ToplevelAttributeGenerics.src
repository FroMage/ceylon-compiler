package com.redhat.ceylon.compiler.java.test.structure.toplevel;

final class topLevelAttributeGenerics_ {
    
    private topLevelAttributeGenerics_() {
    }
    private static final .ceylon.language.List<? extends .ceylon.language.String>[] value;
    static {
        value = new .ceylon.language.List[]{new .ceylon.language.Tuple<.ceylon.language.String, .ceylon.language.String, .ceylon.language.Empty>(.ceylon.language.String.$TypeDescriptor, .ceylon.language.String.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.String.instance("hello"), .ceylon.language.empty_.getEmpty$())};
    }
    
    static .ceylon.language.List<? extends .ceylon.language.String> getTopLevelAttributeGenerics$() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException(.ceylon.language.String.instance("Cyclic initialization"));
        }
    }
}
public final class topLevelAttributeGenericsShared_ {
    
    private topLevelAttributeGenericsShared_() {
    }
    private static final .ceylon.language.List<? extends .ceylon.language.String>[] value;
    static {
        value = new .ceylon.language.List[]{new .ceylon.language.Tuple<.ceylon.language.String, .ceylon.language.String, .ceylon.language.Empty>(.ceylon.language.String.$TypeDescriptor, .ceylon.language.String.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.String.instance("hello"), .ceylon.language.empty_.getEmpty$())};
    }
    
    public static .ceylon.language.List<? extends .ceylon.language.String> getTopLevelAttributeGenericsShared$() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException(.ceylon.language.String.instance("Cyclic initialization"));
        }
    }
}
final class topLevelVariableGenerics_ {
    
    private topLevelVariableGenerics_() {
    }
    private static .ceylon.language.List<? extends .ceylon.language.String>[] value;
    static {
        value = new .ceylon.language.List[]{new .ceylon.language.Tuple<.ceylon.language.String, .ceylon.language.String, .ceylon.language.Empty>(.ceylon.language.String.$TypeDescriptor, .ceylon.language.String.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.String.instance("hello"), .ceylon.language.empty_.getEmpty$())};
    }
    
    static .ceylon.language.List<? extends .ceylon.language.String> getTopLevelVariableGenerics$() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException(.ceylon.language.String.instance("Cyclic initialization"));
        }
    }
    
    static void setTopLevelVariableGenerics(final .ceylon.language.List<? extends .ceylon.language.String> topLevelVariableGenerics) {
        value[0] = topLevelVariableGenerics;
    }
}
public final class topLevelVariableGenericsShared_ {
    
    private topLevelVariableGenericsShared_() {
    }
    private static .ceylon.language.List<? extends .ceylon.language.String>[] value;
    static {
        value = new .ceylon.language.List[]{new .ceylon.language.Tuple<.ceylon.language.String, .ceylon.language.String, .ceylon.language.Empty>(.ceylon.language.String.$TypeDescriptor, .ceylon.language.String.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.String.instance("hello"), .ceylon.language.empty_.getEmpty$())};
    }
    
    public static .ceylon.language.List<? extends .ceylon.language.String> getTopLevelVariableGenericsShared$() {
        try {
            return value[0];
        } catch (.java.lang.NullPointerException ex) {
            throw new .ceylon.language.InitializationException(.ceylon.language.String.instance("Cyclic initialization"));
        }
    }
    
    public static void setTopLevelVariableGenericsShared(final .ceylon.language.List<? extends .ceylon.language.String> topLevelVariableGenericsShared) {
        value[0] = topLevelVariableGenericsShared;
    }
}