package com.redhat.ceylon.compiler.java.test.statement.loop;

class MethodWhileExists2dArray implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    MethodWhileExists2dArray() {
    }
    
    private final void ints$priv() {
        final .ceylon.language.Array<.ceylon.language.Array<.ceylon.language.Integer>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.ceylon.language.Integer>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .ceylon.language.Integer.$TypeDescriptor), .ceylon.language.Array.class, 2L, .ceylon.language.arrayOfSize_.<.ceylon.language.Integer>arrayOfSize(.ceylon.language.Integer.$TypeDescriptor, long.class, 2L, .ceylon.language.Integer.instance(0L)));
        while (true) {
            .ceylon.language.Array<.ceylon.language.Integer> $r$0;
            if (($r$0 = t.get(.ceylon.language.Integer.instance(0L))) != null) {
                final .ceylon.language.Array<.ceylon.language.Integer> $r$1 = $r$0;
                $r$1.setItem(0L, .ceylon.language.Integer.instance(100L));
            } else break;
        }
    }
    
    private final void strings$priv() {
        final .ceylon.language.Array<.ceylon.language.Array<.ceylon.language.String>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.ceylon.language.String>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .ceylon.language.String.$TypeDescriptor), .ceylon.language.Array.class, 2L, .ceylon.language.arrayOfSize_.<.ceylon.language.String>arrayOfSize(.ceylon.language.String.$TypeDescriptor, .java.lang.String.class, 2L, .ceylon.language.String.instance("")));
        while (true) {
            .ceylon.language.Array<.ceylon.language.String> $r$2;
            if (($r$2 = t.get(.ceylon.language.Integer.instance(0L))) != null) {
                final .ceylon.language.Array<.ceylon.language.String> $r$3 = $r$2;
                $r$3.setItem(0L, .ceylon.language.String.instance(""));
            } else break;
        }
    }
    
    private final void nulls$priv() {
        final .ceylon.language.Array<.ceylon.language.Array<.java.lang.Object>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.java.lang.Object>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .ceylon.language.Null.$TypeDescriptor), .ceylon.language.Array.class, 2L, .ceylon.language.arrayOfSize_.arrayOfSize(.ceylon.language.Null.$TypeDescriptor, .java.lang.Object.class, 2L, null));
        while (true) {
            .ceylon.language.Array<.java.lang.Object> $r$4;
            if (($r$4 = t.get(.ceylon.language.Integer.instance(0L))) != null) {
                final .ceylon.language.Array<.java.lang.Object> $r$5 = $r$4;
                $r$5.setItem(0L, null);
            } else break;
        }
    }
    
    private final void objects$priv(final .java.lang.Object obj) {
        final .ceylon.language.Array<.ceylon.language.Array<.java.lang.Object>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.java.lang.Object>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .ceylon.language.Object.$TypeDescriptor), .ceylon.language.Array.class, 2L, .ceylon.language.arrayOfSize_.arrayOfSize(.ceylon.language.Object.$TypeDescriptor, .java.lang.Object.class, 2L, obj));
        while (true) {
            .ceylon.language.Array<.java.lang.Object> $r$6;
            if (($r$6 = t.get(.ceylon.language.Integer.instance(0L))) != null) {
                final .ceylon.language.Array<.java.lang.Object> $r$7 = $r$6;
                $r$7.setItem(0L, obj);
            } else break;
        }
    }
    
    private final void union$priv(final .java.lang.Object obj) {
        final .ceylon.language.Array<.ceylon.language.Array<.java.lang.Object>> t = .ceylon.language.arrayOfSize_.<.ceylon.language.Array<.java.lang.Object>>arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Array.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.String.$TypeDescriptor, .ceylon.language.Float.$TypeDescriptor)), .ceylon.language.Array.class, 2L, .ceylon.language.arrayOfSize_.arrayOfSize(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.String.$TypeDescriptor, .ceylon.language.Float.$TypeDescriptor), null, 2L, obj));
        while (true) {
            .ceylon.language.Array $r$8;
            if (($r$8 = ((.ceylon.language.Correspondence<? super .ceylon.language.Integer, ? extends .ceylon.language.Array<.java.lang.Object>>)(.ceylon.language.Correspondence)t).get(.ceylon.language.Integer.instance(0L))) != null) {
                final .ceylon.language.Array $r$9 = $r$8;
                $r$9.setItem(0L, obj);
            } else break;
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhileExists2dArray();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhileExists2dArray.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhileExists2dArray.class);
}