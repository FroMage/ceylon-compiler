package com.redhat.ceylon.compiler.java.test.statement.loop;

class MethodWhileIsNotObject implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    MethodWhileIsNotObject() {
    }
    
    public final void m(final .java.lang.Object x) {
        while (true) {
            if (!(x != null)) {
                .ceylon.language.print_.print(.ceylon.language.String.instance("x is null"));
                .ceylon.language.print_.print(x);
            } else break;
        }
    }
    
    public final void mvar(final .java.lang.Object y) {
        while (true) {
            .java.lang.Object $x$1;
            if (!(($x$1 = y) != null)) {
                final .java.lang.Object $x$2 = $x$1;
                .ceylon.language.print_.print(.ceylon.language.String.instance("x is null"));
                .ceylon.language.print_.print($x$2);
            } else break;
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhileIsNotObject();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhileIsNotObject.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhileIsNotObject.class);
}