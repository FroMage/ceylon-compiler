package com.redhat.ceylon.compiler.java.test.issues.bug12xx;

final class bug1227_ifBreak_returnElse_ {
    
    private bug1227_ifBreak_returnElse_() {
    }
    
    static long bug1227_ifBreak_returnElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$0 = 0L;
        boolean doforelse$1 = true;
        .java.lang.Object elem$2;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$3 = l.iterator();
        while (!((elem$2 = index$iterator$$3.next()) instanceof .ceylon.language.Finished)) {
            final long index = ((.ceylon.language.Integer)elem$2).longValue();
            if (someBoolean) {
                from$0 = index;
                final long from$5 = from$0;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$5 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$1 = false;
                break;
            }
        }
        if (doforelse$1) {
            return 0L;
        }
        from = from$0;
        return from;
    }
}
final class bug1227_ifBreak_returnElse_opt_ {
    
    private bug1227_ifBreak_returnElse_opt_() {
    }
    
    static long bug1227_ifBreak_returnElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$6 = 0L;
        boolean doforelse$7 = true;
        final long $ceylontmp$start$8 = 1L;
        final long $ceylontmp$end$9 = 10L;
        final boolean $ceylontmp$increasing$10 = $ceylontmp$start$8 <= $ceylontmp$end$9;
        final long $ceylontmp$incr$11 = $ceylontmp$increasing$10 ? 1L : -1L;
        for (long index$12 = $ceylontmp$start$8; $ceylontmp$increasing$10 ? index$12 - $ceylontmp$end$9 <= 0L : index$12 - $ceylontmp$end$9 >= 0L; index$12 += $ceylontmp$incr$11) {
            final long index = index$12;
            if (someBoolean) {
                from$6 = index;
                final long from$14 = from$6;
                doforelse$7 = false;
                break;
            }
        }
        if (doforelse$7) {
            return 0L;
        }
        from = from$6;
        return from;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug12xx.bug1227_ifBreak_returnElse_opt_.bug1227_ifBreak_returnElse_opt();
    }
}
final class bug1227_ifBreak_specifiedElse_ {
    
    private bug1227_ifBreak_specifiedElse_() {
    }
    
    static long bug1227_ifBreak_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$15 = 0L;
        boolean doforelse$16 = true;
        .java.lang.Object elem$17;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$18 = l.iterator();
        while (!((elem$17 = index$iterator$$18.next()) instanceof .ceylon.language.Finished)) {
            final long index = ((.ceylon.language.Integer)elem$17).longValue();
            if (someBoolean) {
                from$15 = index;
                final long from$20 = from$15;
                final long x = from$20 + 1L;
                doforelse$16 = false;
                break;
            }
        }
        if (doforelse$16) {
            from$15 = 0L;
            final long from$21 = from$15;
        }
        from = from$15;
        return from;
    }
}
final class bug1227_ifBreak_specifiedElse_opt_ {
    
    private bug1227_ifBreak_specifiedElse_opt_() {
    }
    
    static long bug1227_ifBreak_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$22 = 0L;
        boolean doforelse$23 = true;
        final long $ceylontmp$start$24 = 1L;
        final long $ceylontmp$end$25 = 10L;
        final boolean $ceylontmp$increasing$26 = $ceylontmp$start$24 <= $ceylontmp$end$25;
        final long $ceylontmp$incr$27 = $ceylontmp$increasing$26 ? 1L : -1L;
        for (long index$28 = $ceylontmp$start$24; $ceylontmp$increasing$26 ? index$28 - $ceylontmp$end$25 <= 0L : index$28 - $ceylontmp$end$25 >= 0L; index$28 += $ceylontmp$incr$27) {
            final long index = index$28;
            if (someBoolean) {
                from$22 = index;
                final long from$30 = from$22;
                final long x = from$30 + 1L;
                doforelse$23 = false;
                break;
            }
        }
        if (doforelse$23) {
            from$22 = 0L;
            final long from$31 = from$22;
        }
        from = from$22;
        return from;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug12xx.bug1227_ifBreak_specifiedElse_opt_.bug1227_ifBreak_specifiedElse_opt();
    }
}
final class bug1227_ifBreak_elseBreak_specifiedElse_ {
    
    private bug1227_ifBreak_elseBreak_specifiedElse_() {
    }
    
    static long bug1227_ifBreak_elseBreak_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$32 = 0L;
        boolean doforelse$33 = true;
        .java.lang.Object elem$34;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$35 = l.iterator();
        while (!((elem$34 = index$iterator$$35.next()) instanceof .ceylon.language.Finished)) {
            final long index = ((.ceylon.language.Integer)elem$34).longValue();
            if (someBoolean) {
                from$32 = index;
                final long from$38 = from$32;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$38 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$33 = false;
                break;
            } else {
                from$32 = index + 1L;
                final long from$37 = from$32;
                
                class C implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
                    
                    C() {
                        final long x = from$37;
                    }
                    
                    @.java.lang.Override
                    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class);
                    }
                }
                doforelse$33 = false;
                break;
            }
        }
        if (doforelse$33) {
            from$32 = 0L;
            final long from$39 = from$32;
        }
        from = from$32;
        return from;
    }
}
final class bug1227_ifBreak_elseBreak_specifiedElse_opt_ {
    
    private bug1227_ifBreak_elseBreak_specifiedElse_opt_() {
    }
    
    static long bug1227_ifBreak_elseBreak_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$40 = 0L;
        boolean doforelse$41 = true;
        final long $ceylontmp$start$42 = 1L;
        final long $ceylontmp$end$43 = 10L;
        final boolean $ceylontmp$increasing$44 = $ceylontmp$start$42 <= $ceylontmp$end$43;
        final long $ceylontmp$incr$45 = $ceylontmp$increasing$44 ? 1L : -1L;
        for (long index$46 = $ceylontmp$start$42; $ceylontmp$increasing$44 ? index$46 - $ceylontmp$end$43 <= 0L : index$46 - $ceylontmp$end$43 >= 0L; index$46 += $ceylontmp$incr$45) {
            final long index = index$46;
            if (someBoolean) {
                from$40 = index;
                final long from$49 = from$40;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$49 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$41 = false;
                break;
            } else {
                from$40 = index + 1L;
                final long from$48 = from$40;
                
                class C implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
                    
                    C() {
                        final long x = from$48;
                    }
                    
                    @.java.lang.Override
                    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class);
                    }
                }
                doforelse$41 = false;
                break;
            }
        }
        if (doforelse$41) {
            from$40 = 0L;
            final long from$50 = from$40;
        }
        from = from$40;
        return from;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug12xx.bug1227_ifBreak_elseBreak_specifiedElse_opt_.bug1227_ifBreak_elseBreak_specifiedElse_opt();
    }
}
final class bug1227_ifReturn_specifiedElse_ {
    
    private bug1227_ifReturn_specifiedElse_() {
    }
    
    static long bug1227_ifReturn_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$51 = 0L;
        .java.lang.Object elem$52;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$53 = l.iterator();
        while (!((elem$52 = index$iterator$$53.next()) instanceof .ceylon.language.Finished)) {
            final long index = ((.ceylon.language.Integer)elem$52).longValue();
            if (someBoolean) {
                from$51 = index;
                final long from$55 = from$51;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$55 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                return from$51;
            }
        }
        from$51 = 0L;
        final long from$56 = from$51;
        from = from$51;
        return from;
    }
}
final class bug1227_ifReturn_specifiedElse_opt_ {
    
    private bug1227_ifReturn_specifiedElse_opt_() {
    }
    
    static long bug1227_ifReturn_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$57 = 0L;
        final long $ceylontmp$start$58 = 1L;
        final long $ceylontmp$end$59 = 10L;
        final boolean $ceylontmp$increasing$60 = $ceylontmp$start$58 <= $ceylontmp$end$59;
        final long $ceylontmp$incr$61 = $ceylontmp$increasing$60 ? 1L : -1L;
        for (long index$62 = $ceylontmp$start$58; $ceylontmp$increasing$60 ? index$62 - $ceylontmp$end$59 <= 0L : index$62 - $ceylontmp$end$59 >= 0L; index$62 += $ceylontmp$incr$61) {
            final long index = index$62;
            if (someBoolean) {
                from$57 = index;
                final long from$64 = from$57;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$64 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                return from$57;
            }
        }
        from$57 = 0L;
        final long from$65 = from$57;
        from = from$57;
        return from;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug12xx.bug1227_ifReturn_specifiedElse_opt_.bug1227_ifReturn_specifiedElse_opt();
    }
}
final class bug1227_ifThrow_specifiedElse_ {
    
    private bug1227_ifThrow_specifiedElse_() {
    }
    
    static long bug1227_ifThrow_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$66 = 0L;
        .java.lang.Object elem$67;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$68 = l.iterator();
        while (!((elem$67 = index$iterator$$68.next()) instanceof .ceylon.language.Finished)) {
            final long index = ((.ceylon.language.Integer)elem$67).longValue();
            if (someBoolean) {
                from$66 = index;
                final long from$70 = from$66;
                throw new .ceylon.language.Exception(null, null);
            }
        }
        from$66 = 0L;
        final long from$71 = from$66;
        from = from$66;
        return from;
    }
}
final class bug1227_ifThrow_specifiedElse_opt_ {
    
    private bug1227_ifThrow_specifiedElse_opt_() {
    }
    
    static long bug1227_ifThrow_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$72 = 0L;
        final long $ceylontmp$start$73 = 1L;
        final long $ceylontmp$end$74 = 10L;
        final boolean $ceylontmp$increasing$75 = $ceylontmp$start$73 <= $ceylontmp$end$74;
        final long $ceylontmp$incr$76 = $ceylontmp$increasing$75 ? 1L : -1L;
        for (long index$77 = $ceylontmp$start$73; $ceylontmp$increasing$75 ? index$77 - $ceylontmp$end$74 <= 0L : index$77 - $ceylontmp$end$74 >= 0L; index$77 += $ceylontmp$incr$76) {
            final long index = index$77;
            if (someBoolean) {
                from$72 = index;
                final long from$79 = from$72;
                throw new .ceylon.language.Exception(null, null);
            }
        }
        from$72 = 0L;
        final long from$80 = from$72;
        from = from$72;
        return from;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug12xx.bug1227_ifThrow_specifiedElse_opt_.bug1227_ifThrow_specifiedElse_opt();
    }
}
final class bug1227_for2_ifReturn_specifiedElse_ {
    
    private bug1227_for2_ifReturn_specifiedElse_() {
    }
    
    static long bug1227_for2_ifReturn_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$81 = 0L;
        .java.lang.Object elem$82;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$83 = l.iterator();
        while (!((elem$82 = index$iterator$$83.next()) instanceof .ceylon.language.Finished)) {
            final long index = ((.ceylon.language.Integer)elem$82).longValue();
            .java.lang.Object elem$84;
            .ceylon.language.Iterator<? extends .ceylon.language.Integer> index2$iterator$$85 = l.iterator();
            while (!((elem$84 = index2$iterator$$85.next()) instanceof .ceylon.language.Finished)) {
                final long index2 = ((.ceylon.language.Integer)elem$84).longValue();
                if (someBoolean) {
                    from$81 = index + index2;
                    final long from$87 = from$81;
                    return from$81;
                }
            }
            from = from$81;
        }
        from = 0L;
        final long from$88 = from;
        return from;
    }
}
final class bug1227_declaredInside_ {
    
    private bug1227_declaredInside_() {
    }
    
    static long bug1227_declaredInside(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        boolean doforelse$89 = true;
        .java.lang.Object elem$90;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$91 = l.iterator();
        while (!((elem$90 = index$iterator$$91.next()) instanceof .ceylon.language.Finished)) {
            final long index = ((.ceylon.language.Integer)elem$90).longValue();
            final long from;
            if (someBoolean) {
                from = index;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$89 = false;
                break;
            }
        }
        if (doforelse$89) {
            return 0L;
        }
        return 0L;
    }
}
final class bug1227_onlySpecifiedElse_ {
    
    private bug1227_onlySpecifiedElse_() {
    }
    
    static long bug1227_onlySpecifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        .java.lang.Object elem$93;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$94 = l.iterator();
        while (!((elem$93 = index$iterator$$94.next()) instanceof .ceylon.language.Finished)) {
            final long index = ((.ceylon.language.Integer)elem$93).longValue();
            throw new .ceylon.language.Exception(null, null);
        }
        from = 0L;
        return from;
    }
}
final class bug1227_function_ {
    
    private bug1227_function_() {
    }
    
    static long bug1227_function(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean).ceylon.language.nothing_.get_()).booleanValue();
        
        final class from_ {
            
            private from_() {
                this.from = null;
            }
            private .ceylon.language.Callable<? extends .ceylon.language.Integer> from;
            
            long from() {
                if (from == null) throw new .com.redhat.ceylon.compiler.java.language.UninitializedMethodError(); else return from.$call$().longValue();
            }
        }
        final from_ from = new from_();
        boolean doforelse$95 = true;
        .java.lang.Object elem$96;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$97 = l.iterator();
        while (!((elem$96 = index$iterator$$97.next()) instanceof .ceylon.language.Finished)) {
            final long index = ((.ceylon.language.Integer)elem$96).longValue();
            if (someBoolean) {
                from.from = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Integer $call$() {
                        return .ceylon.language.Integer.instance(index);
                    }
                };
                doforelse$95 = false;
                break;
            }
        }
        if (doforelse$95) {
            return 0L;
        }
        return from.from();
    }
}