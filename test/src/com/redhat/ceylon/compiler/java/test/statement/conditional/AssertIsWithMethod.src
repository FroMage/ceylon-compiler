package com.redhat.ceylon.compiler.java.test.statement.conditional;

class AssertIsWithMethod {
    
    AssertIsWithMethod() {
    }
    
    private final .com.redhat.ceylon.compiler.java.test.statement.conditional.Foo give() {
        return new .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub();
    }
    
    public final void m() {
        final .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub $y$2;
        .java.lang.Object $y$1 = null;
        if (($y$1 = give()) instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub) {
            $y$2 = (.com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub)$y$1;
        } else throw new .ceylon.language.Exception(.ceylon.language.String.instance("Assertion failed" + .java.lang.System.lineSeparator() + ("\tviolated " + "is FooSub y = give()" + .java.lang.System.lineSeparator() + "\tat " + "AssertIsWithMethod.ceylon:26:8-26:37")), null);
        $y$2.foo();
        final .java.lang.Object $y2$5;
        .java.lang.Object $y2$4 = null;
        if (($y2$4 = give()) == null) {
            $y2$5 = $y2$4;
        } else throw new .ceylon.language.Exception(.ceylon.language.String.instance("Assertion failed" + .java.lang.System.lineSeparator() + ("\tviolated " + "is Nothing y2 = give()" + .java.lang.System.lineSeparator() + "\tat " + "AssertIsWithMethod.ceylon:28:8-28:39")), null);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertIsWithMethod();
    }
}