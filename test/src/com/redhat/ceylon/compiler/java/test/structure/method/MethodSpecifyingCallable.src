package com.redhat.ceylon.compiler.java.test.structure.method;

final class methodSpecifyingCallable_f_ {
    
    private methodSpecifyingCallable_f_() {
    }
    
    static .ceylon.language.Callable<? extends .ceylon.language.String> methodSpecifyingCallable_f() {
        throw new .ceylon.language.Exception(null, null);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.method.methodSpecifyingCallable_f_.methodSpecifyingCallable_f();
    }
}
class MethodSpecifyingCallable implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    MethodSpecifyingCallable() {
        this.noParam = new .com.redhat.ceylon.compiler.java.language.AbstractCallable(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .ceylon.language.Empty.$TypeDescriptor, "Nothing()"){
            
            @.java.lang.Override
            public .java.lang.Object $call() {
                return .ceylon.language.nothing_.getNothing$();
            }
        };
        this.oneParam = new .com.redhat.ceylon.compiler.java.language.AbstractCallable(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "Nothing(Integer)"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                final long i = ((.ceylon.language.Integer)$param$0).longValue();
                return .ceylon.language.nothing_.getNothing$();
            }
        };
        this.oneSequencedParam = new .com.redhat.ceylon.compiler.java.language.AbstractCallable(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Sequential.class, .ceylon.language.Integer.$TypeDescriptor), "Nothing(Integer*)"){
            
            private final .ceylon.language.Sequential<? extends .ceylon.language.Integer> $$i() {
                return (.ceylon.language.Sequential).ceylon.language.empty_.getEmpty$();
            }
            
            @.java.lang.Override
            public .java.lang.Object $call() {
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> i = $$i();
                return $call$typed(i);
            }
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> i = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$0;
                return $call$typed(i);
            }
            
            private .java.lang.Object $call$typed(.ceylon.language.Sequential<? extends .ceylon.language.Integer> i) {
                return .ceylon.language.nothing_.getNothing$();
            }
        };
        this.secondSequencedParam = new .com.redhat.ceylon.compiler.java.language.AbstractCallable(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Sequential.class, .ceylon.language.Integer.$TypeDescriptor)), "Nothing(Integer, Integer*)"){
            
            private final .ceylon.language.Sequential<? extends .ceylon.language.Integer> $$i(final long a) {
                return (.ceylon.language.Sequential).ceylon.language.empty_.getEmpty$();
            }
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> i = $$i(a);
                return $call$typed(a, i);
            }
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> i = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$1;
                return $call$typed(a, i);
            }
            
            private .java.lang.Object $call$typed(long a, .ceylon.language.Sequential<? extends .ceylon.language.Integer> i) {
                return .ceylon.language.nothing_.getNothing$();
            }
        };
    }
    
    private final .java.lang.String foo$priv(final long i) {
        return .com.redhat.ceylon.compiler.java.test.structure.method.methodSpecifyingCallable_f_.methodSpecifyingCallable_f().$call(.ceylon.language.Integer.instance(i)).toString();
    }
    private final .ceylon.language.Callable<? extends .java.lang.Object> noParam;
    
    private final .ceylon.language.Callable<? extends .java.lang.Object> getNoParam$priv() {
        return noParam;
    }
    
    private final .java.lang.Object noParam1$priv() {
        return getNoParam$priv().$call();
    }
    private final .ceylon.language.Callable<? extends .java.lang.Object> oneParam;
    
    private final .ceylon.language.Callable<? extends .java.lang.Object> getOneParam$priv() {
        return oneParam;
    }
    
    private final .java.lang.Object oneParam1$priv() {
        return getOneParam$priv().$call(.ceylon.language.Integer.instance(1L));
    }
    private final .ceylon.language.Callable<? extends .java.lang.Object> oneSequencedParam;
    
    private final .ceylon.language.Callable<? extends .java.lang.Object> getOneSequencedParam$priv() {
        return oneSequencedParam;
    }
    
    private final .java.lang.Object oneSequencedParam0$priv() {
        return getOneSequencedParam$priv().$call();
    }
    
    private final .java.lang.Object oneSequencedParam1$priv() {
        return getOneSequencedParam$priv().$call(.ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{.ceylon.language.Integer.instance(1L)}));
    }
    
    private final .java.lang.Object oneSequencedParam2$priv() {
        return getOneSequencedParam$priv().$call(.ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{.ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L)}));
    }
    
    private final .java.lang.Object oneSequencedParam3$priv() {
        return getOneSequencedParam$priv().$call(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor){
                    {
                        iter$0 = .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{.ceylon.language.Integer.instance(1L)}).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmpitem0 = iter$0.next();
                        i$exhausted = $ceylontmpitem0 == .ceylon.language.finished_.getFinished$();
                        if (i$exhausted) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmpitem0;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return i;
                        } else return .ceylon.language.finished_.getFinished$();
                    }
                };
            }
        }.getSequence());
    }
    
    private final .java.lang.Object oneSequencedParam4$priv() {
        return getOneSequencedParam$priv().$call((.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential).ceylon.language.empty_.getEmpty$());
    }
    private final .ceylon.language.Callable<? extends .java.lang.Object> secondSequencedParam;
    
    private final .ceylon.language.Callable<? extends .java.lang.Object> getSecondSequencedParam$priv() {
        return secondSequencedParam;
    }
    
    private final .java.lang.Object secondSequencedParam0$priv() {
        return getSecondSequencedParam$priv().$call(.ceylon.language.Integer.instance(1L));
    }
    
    private final .java.lang.Object secondSequencedParam1$priv() {
        return getSecondSequencedParam$priv().$call(.ceylon.language.Integer.instance(1L), .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{.ceylon.language.Integer.instance(2L)}));
    }
    
    private final .java.lang.Object secondSequencedParam2$priv() {
        return getSecondSequencedParam$priv().$call(.ceylon.language.Integer.instance(1L), .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{.ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L)}));
    }
    
    private final .java.lang.Object secondSequencedParam3$priv() {
        return getSecondSequencedParam$priv().$call(.ceylon.language.Integer.instance(1L), new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor){
                    {
                        iter$0 = .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{.ceylon.language.Integer.instance(1L)}).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> iter$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmpitem1 = iter$0.next();
                        i$exhausted = $ceylontmpitem1 == .ceylon.language.finished_.getFinished$();
                        if (i$exhausted) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmpitem1;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return i;
                        } else return .ceylon.language.finished_.getFinished$();
                    }
                };
            }
        }.getSequence());
    }
    
    private final .java.lang.Object secondSequencedParam4$priv() {
        return getSecondSequencedParam$priv().$call(.ceylon.language.Integer.instance(1L), (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential).ceylon.language.empty_.getEmpty$());
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.method.MethodSpecifyingCallable();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.structure.method.MethodSpecifyingCallable.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.method.MethodSpecifyingCallable.class);
}