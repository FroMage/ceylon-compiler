package com.redhat.ceylon.compiler.java.test.expression.boxing;

class IntegerBoxing {
    
    IntegerBoxing() {
        this.attrInteger = 1L;
    }
    private long attrInteger;
    
    private final long getAttrInteger() {
        return attrInteger;
    }
    
    private final void setAttrInteger(final long attrInteger) {
        this.attrInteger = attrInteger;
    }
    
    private final <T>T id(final T x) {
        return x;
    }
    
    private final void m() {
        long localAttrInteger = 1L;
        long localAttrOptionalInteger = 1L;
        .java.lang.Object localAttrObject = .ceylon.language.Integer.instance(1L);
        localAttrInteger = localAttrInteger;
        localAttrOptionalInteger = localAttrInteger;
        localAttrObject = .ceylon.language.Integer.instance(localAttrInteger);
        localAttrInteger = <.ceylon.language.Integer>id(.ceylon.language.Integer.instance(1L)).longValue();
        localAttrOptionalInteger = <.ceylon.language.Integer>id(.ceylon.language.Integer.instance(1L)).longValue();
        localAttrObject = <.ceylon.language.Integer>id(.ceylon.language.Integer.instance(1L));
        final .java.lang.Object localAttrConstantObject = .ceylon.language.Integer.instance(localAttrInteger);
        final long localAttrConstantInteger = localAttrInteger;
        .java.lang.Object $localAttrConstantObject$0;
        if (($localAttrConstantObject$0 = localAttrConstantObject) instanceof .ceylon.language.Integer) {
            final long $localAttrConstantObject$1 = ((.ceylon.language.Integer)$localAttrConstantObject$0).longValue();
            localAttrInteger = $localAttrConstantObject$1;
        }
        localAttrInteger = localAttrInteger + 2L;
        localAttrObject = .ceylon.language.Integer.instance(localAttrInteger + 2L);
        setAttrInteger(getAttrInteger() + 2L);
        test(localAttrInteger + 2L);
        test(getAttrInteger() + 2L);
        test(this.getAttrInteger() + 2L);
        localAttrInteger = .ceylon.language.Integer.plus(localAttrInteger, 2L);
        setAttrInteger(.ceylon.language.Integer.plus(getAttrInteger(), 2L));
        this.setAttrInteger(.ceylon.language.Integer.plus(this.getAttrInteger(), 2L));
        test(.ceylon.language.Integer.plus(localAttrInteger, 2L));
        test(.ceylon.language.Integer.plus(getAttrInteger(), 2L));
        test(.ceylon.language.Integer.plus(this.getAttrInteger(), 2L));
        localAttrInteger = localAttrInteger++;
        setAttrInteger((
            let
            {
                long $ceylontmpop2 = getAttrInteger();
                setAttrInteger($ceylontmpop2 + 1);
            }
            returning $ceylontmpop2;
        ));
        this.setAttrInteger((
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.boxing.IntegerBoxing $ceylontmpopE3 = this;
                long $ceylontmpopV4 = $ceylontmpopE3.getAttrInteger();
                $ceylontmpopE3.setAttrInteger($ceylontmpopV4 + 1);
            }
            returning $ceylontmpopV4;
        ));
        test(localAttrInteger++);
        test((
            let
            {
                long $ceylontmpop5 = getAttrInteger();
                setAttrInteger($ceylontmpop5 + 1);
            }
            returning $ceylontmpop5;
        ));
        test((
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.boxing.IntegerBoxing $ceylontmpopE6 = this;
                long $ceylontmpopV7 = $ceylontmpopE6.getAttrInteger();
                $ceylontmpopE6.setAttrInteger($ceylontmpopV7 + 1);
            }
            returning $ceylontmpopV7;
        ));
        localAttrInteger = .ceylon.language.Integer.getSuccessor(localAttrInteger);
        setAttrInteger(.ceylon.language.Integer.getSuccessor(getAttrInteger()));
        this.setAttrInteger(.ceylon.language.Integer.getSuccessor(this.getAttrInteger()));
        test(.ceylon.language.Integer.getSuccessor(localAttrInteger));
        test(.ceylon.language.Integer.getSuccessor(getAttrInteger()));
        test(.ceylon.language.Integer.getSuccessor(this.getAttrInteger()));
        localAttrInteger = .ceylon.language.Integer.getPositiveValue(localAttrInteger);
        setAttrInteger(.ceylon.language.Integer.getPositiveValue(getAttrInteger()));
        this.setAttrInteger(.ceylon.language.Integer.getPositiveValue(this.getAttrInteger()));
        test(.ceylon.language.Integer.getPositiveValue(localAttrInteger));
        test(.ceylon.language.Integer.getPositiveValue(getAttrInteger()));
        test(.ceylon.language.Integer.getPositiveValue(this.getAttrInteger()));
        localAttrInteger = -.ceylon.language.Integer.getPositiveValue(localAttrInteger);
        setAttrInteger(-.ceylon.language.Integer.getPositiveValue(getAttrInteger()));
        this.setAttrInteger(-.ceylon.language.Integer.getPositiveValue(this.getAttrInteger()));
        test(-.ceylon.language.Integer.getPositiveValue(localAttrInteger));
        test(-.ceylon.language.Integer.getPositiveValue(getAttrInteger()));
        test(-.ceylon.language.Integer.getPositiveValue(this.getAttrInteger()));
    }
    
    private final void test(final long i) {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.boxing.IntegerBoxing();
    }
}