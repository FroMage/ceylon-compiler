package com.redhat.ceylon.compiler.java.test.structure.method;

final class twoParamListsVoid_ {
    
    private twoParamListsVoid_() {
    }
    
    static void twoParamListsVoid() {
        
        final class f_ {
            
            private f_() {
            }
            
            .ceylon.language.Callable<? extends .java.lang.Object> f(final .java.lang.String s) {
                return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("Void()"){
                    
                    @.java.lang.Override
                    public .java.lang.Object $call() {
                        .ceylon.language.print_.print(.ceylon.language.String.instance(s));
                        return null;
                    }
                };
            }
        }
        final f_ f = new f_();
        
        final class g_ {
            
            private g_() {
            }
            
            .ceylon.language.Callable<? extends .java.lang.Object> g(final .java.lang.String s) {
                return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("Void()"){
                    
                    @.java.lang.Override
                    public .java.lang.Object $call() {
                        return (
                            let
                            {
                                .ceylon.language.print_.print(.ceylon.language.String.instance(s));
                            }
                            returning null;
                        );
                    }
                };
            }
        }
        final g_ g = new g_();
        f.f("hello").$call();
        g.g("hello").$call();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.method.twoParamListsVoid_.twoParamListsVoid();
    }
}