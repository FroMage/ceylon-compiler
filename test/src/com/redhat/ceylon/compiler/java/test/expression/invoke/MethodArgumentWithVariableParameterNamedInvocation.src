package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class methodArgumentWithVariableParameter_ {
    
    private methodArgumentWithVariableParameter_() {
    }
    
    static void methodArgumentWithVariableParameter(final .ceylon.language.Callable<? extends .java.lang.Object> f) {
    }
}
final class methodArgumentWithVariableParameter_fn_ {
    
    private methodArgumentWithVariableParameter_fn_() {
    }
    
    static void methodArgumentWithVariableParameter_fn() {
        (
            let
            {
                .ceylon.language.Callable arg$0$0 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "Integer(Integer)", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Integer $call(final .java.lang.Object $param$0) {
                        long x = ((.ceylon.language.Integer)$param$0).longValue();
                        x = 0L;
                        (
                            let
                            {
                                long $ceylontmpop$1 = x;
                                x = $ceylontmpop$1 + 1;
                            }
                            returning $ceylontmpop$1;
                        );
                        (
                            let
                            {
                                long $ceylontmpop$2 = x + 1L;
                                x = $ceylontmpop$2;
                            }
                            returning $ceylontmpop$2;
                        );
                        return .ceylon.language.Integer.instance(x);
                    }
                };
                .com.redhat.ceylon.compiler.java.test.expression.invoke.methodArgumentWithVariableParameter_.methodArgumentWithVariableParameter(arg$0$0);
            }
            returning null;
        );
        (
            let
            {
                .ceylon.language.Callable arg$3$0 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "Integer(Integer)", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Integer $call(final .java.lang.Object $param$0) {
                        long y$ = ((.ceylon.language.Integer)$param$0).longValue();
                        final .com.redhat.ceylon.compiler.java.language.VariableBoxLong y = new .com.redhat.ceylon.compiler.java.language.VariableBoxLong(y$);
                        
                        final class fn_ {
                            
                            private fn_() {
                            }
                            
                            long fn() {
                                y.ref = 0L;
                                (
                                    let
                                    {
                                        long $ceylontmpop$4 = y.ref;
                                        y.ref = $ceylontmpop$4 + 1;
                                    }
                                    returning $ceylontmpop$4;
                                );
                                (
                                    let
                                    {
                                        long $ceylontmpop$5 = y.ref + 1L;
                                        y.ref = $ceylontmpop$5;
                                    }
                                    returning $ceylontmpop$5;
                                );
                                return y.ref;
                            }
                        }
                        final fn_ fn = new fn_();
                        return .ceylon.language.Integer.instance(fn.fn());
                    }
                };
                .com.redhat.ceylon.compiler.java.test.expression.invoke.methodArgumentWithVariableParameter_.methodArgumentWithVariableParameter(arg$3$0);
            }
            returning null;
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.methodArgumentWithVariableParameter_fn_.methodArgumentWithVariableParameter_fn();
    }
}