package com.redhat.ceylon.compiler.java.test.statement.loop.optim;

class ArrayIterationDynamic implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    ArrayIterationDynamic() {
    }
    
    private final void arrayOfIntegers$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$2 = array;
        final boolean isArray$3 = iterable$2 instanceof .ceylon.language.Array;
        final boolean isTuple$4 = iterable$2 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$2).$getArray$() != null;
        .java.lang.Object elem$0 = null;
        final .java.lang.Object array$5;
        int i$6 = 0;
        final int length$7;
        if (isTuple$4) {
            array$5 = ((.ceylon.language.Tuple)iterable$2).$getArray$();
            i$6 = ((.ceylon.language.Tuple)iterable$2).$getFirst$();
            length$7 = i$6 + ((.ceylon.language.Tuple)iterable$2).$getLength$();
        } else if (isArray$3) {
            array$5 = ((.ceylon.language.Array)iterable$2).toArray();
            length$7 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$5);
        } else {
            array$5 = null;
            length$7 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$1 = isTuple$4 || isArray$3 ? null : iterable$2.iterator();
        loop_0: while (isTuple$4 || isArray$3 ? i$6 < length$7 : !((elem$0 = element$iterator$$1.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$4 || isArray$3) elem$0 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$5, i$6++);
            final long element = ((.ceylon.language.Integer)elem$0).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfCharacters$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object> iterable$10 = array;
        final boolean isArray$11 = iterable$10 instanceof .ceylon.language.Array;
        final boolean isTuple$12 = iterable$10 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$10).$getArray$() != null;
        .java.lang.Object elem$8 = null;
        final .java.lang.Object array$13;
        int i$14 = 0;
        final int length$15;
        if (isTuple$12) {
            array$13 = ((.ceylon.language.Tuple)iterable$10).$getArray$();
            i$14 = ((.ceylon.language.Tuple)iterable$10).$getFirst$();
            length$15 = i$14 + ((.ceylon.language.Tuple)iterable$10).$getLength$();
        } else if (isArray$11) {
            array$13 = ((.ceylon.language.Array)iterable$10).toArray();
            length$15 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$13);
        } else {
            array$13 = null;
            length$15 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Character> element$iterator$$9 = isTuple$12 || isArray$11 ? null : iterable$10.iterator();
        loop_1: while (isTuple$12 || isArray$11 ? i$14 < length$15 : !((elem$8 = element$iterator$$9.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$12 || isArray$11) elem$8 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$13, i$14++);
            final int element = ((.ceylon.language.Character)elem$8).intValue();
            .ceylon.language.print_.print(.ceylon.language.Character.instance(element));
        }
    }
    
    private final void arrayOfObjects$priv$(final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> iterable$18 = array;
        final boolean isArray$19 = iterable$18 instanceof .ceylon.language.Array;
        final boolean isTuple$20 = iterable$18 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$18).$getArray$() != null;
        .java.lang.Object elem$16 = null;
        final .java.lang.Object array$21;
        int i$22 = 0;
        final int length$23;
        if (isTuple$20) {
            array$21 = ((.ceylon.language.Tuple)iterable$18).$getArray$();
            i$22 = ((.ceylon.language.Tuple)iterable$18).$getFirst$();
            length$23 = i$22 + ((.ceylon.language.Tuple)iterable$18).$getLength$();
        } else if (isArray$19) {
            array$21 = ((.ceylon.language.Array)iterable$18).toArray();
            length$23 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$21);
        } else {
            array$21 = null;
            length$23 = 0;
        }
        .ceylon.language.Iterator<? extends .java.lang.Object> element$iterator$$17 = isTuple$20 || isArray$19 ? null : iterable$18.iterator();
        loop_2: while (isTuple$20 || isArray$19 ? i$22 < length$23 : !((elem$16 = element$iterator$$17.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$20 || isArray$19) elem$16 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$21, i$22++);
            final .java.lang.Object element = (.java.lang.Object)elem$16;
            .ceylon.language.print_.print(element);
        }
    }
    
    private final void arrayOfIntegersWithBreak$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        boolean doforelse$24 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$28 = array;
        final boolean isArray$29 = iterable$28 instanceof .ceylon.language.Array;
        final boolean isTuple$30 = iterable$28 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$28).$getArray$() != null;
        .java.lang.Object elem$25 = null;
        final .java.lang.Object array$31;
        int i$32 = 0;
        final int length$33;
        if (isTuple$30) {
            array$31 = ((.ceylon.language.Tuple)iterable$28).$getArray$();
            i$32 = ((.ceylon.language.Tuple)iterable$28).$getFirst$();
            length$33 = i$32 + ((.ceylon.language.Tuple)iterable$28).$getLength$();
        } else if (isArray$29) {
            array$31 = ((.ceylon.language.Array)iterable$28).toArray();
            length$33 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$31);
        } else {
            array$31 = null;
            length$33 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$26 = isTuple$30 || isArray$29 ? null : iterable$28.iterator();
        loop_3: while (isTuple$30 || isArray$29 ? i$32 < length$33 : !((elem$25 = element$iterator$$26.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$30 || isArray$29) elem$25 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$31, i$32++);
            final long element = ((.ceylon.language.Integer)elem$25).longValue();
            
            final class x_ {
                
                private x_() {
                }
                
                long x() {
                    return element + 10L;
                }
            }
            final x_ x = new x_();
            if (element == 10L) {
                doforelse$24 = false;
                break loop_3;
            }
        }
        if (doforelse$24) {
            .ceylon.language.print_.print(.ceylon.language.String.instance("foo"));
        }
    }
    
    private final void keyValue$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>, ? extends .java.lang.Object> iterable$36 = array;
        final boolean isArray$37 = iterable$36 instanceof .ceylon.language.Array;
        final boolean isTuple$38 = iterable$36 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$36).$getArray$() != null;
        .java.lang.Object elem$34 = null;
        final .java.lang.Object array$39;
        int i$40 = 0;
        final int length$41;
        if (isTuple$38) {
            array$39 = ((.ceylon.language.Tuple)iterable$36).$getArray$();
            i$40 = ((.ceylon.language.Tuple)iterable$36).$getFirst$();
            length$41 = i$40 + ((.ceylon.language.Tuple)iterable$36).$getLength$();
        } else if (isArray$37) {
            array$39 = ((.ceylon.language.Array)iterable$36).toArray();
            length$41 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$39);
        } else {
            array$39 = null;
            length$41 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>> i$iterator$$35 = isTuple$38 || isArray$37 ? null : iterable$36.iterator();
        loop_4: while (isTuple$38 || isArray$37 ? i$40 < length$41 : !((elem$34 = i$iterator$$35.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$38 || isArray$37) elem$34 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$39, i$40++);
            final long i = ((.ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>)elem$34).getKey().longValue();
            final double f = ((.ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>)elem$34).getItem().doubleValue();
            .ceylon.language.print_.print(.ceylon.language.Float.instance(i + f));
        }
    }
    
    private final void arrayOfIntegersArraySequenceDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$44 = array;
        final boolean isArray$45 = iterable$44 instanceof .ceylon.language.Array;
        final boolean isTuple$46 = iterable$44 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$44).$getArray$() != null;
        .java.lang.Object elem$42 = null;
        final .java.lang.Object array$47;
        int i$48 = 0;
        final int length$49;
        if (isTuple$46) {
            array$47 = ((.ceylon.language.Tuple)iterable$44).$getArray$();
            i$48 = ((.ceylon.language.Tuple)iterable$44).$getFirst$();
            length$49 = i$48 + ((.ceylon.language.Tuple)iterable$44).$getLength$();
        } else if (isArray$45) {
            array$47 = ((.ceylon.language.Array)iterable$44).toArray();
            length$49 = .com.redhat.ceylon.compiler.java.Util.arrayLength(array$47);
        } else {
            array$47 = null;
            length$49 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$43 = isTuple$46 || isArray$45 ? null : iterable$44.iterator();
        loop_5: while (isTuple$46 || isArray$45 ? i$48 < length$49 : !((elem$42 = element$iterator$$43.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$46 || isArray$45) elem$42 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$47, i$48++);
            final long element = ((.ceylon.language.Integer)elem$42).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntegersArrayDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$52 = array;
        final boolean isTuple$53 = iterable$52 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$52).$getArray$() != null;
        .java.lang.Object elem$50 = null;
        final .java.lang.Object array$54;
        int i$55 = 0;
        final int length$56;
        if (isTuple$53) {
            array$54 = ((.ceylon.language.Tuple)iterable$52).$getArray$();
            i$55 = ((.ceylon.language.Tuple)iterable$52).$getFirst$();
            length$56 = i$55 + ((.ceylon.language.Tuple)iterable$52).$getLength$();
        } else {
            array$54 = null;
            length$56 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$51 = isTuple$53 ? null : iterable$52.iterator();
        loop_6: while (isTuple$53 ? i$55 < length$56 : !((elem$50 = element$iterator$$51.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$53) elem$50 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$54, i$55++);
            final long element = ((.ceylon.language.Integer)elem$50).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntegersDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$59 = array;
        final boolean isTuple$60 = iterable$59 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$59).$getArray$() != null;
        .java.lang.Object elem$57 = null;
        final .java.lang.Object array$61;
        int i$62 = 0;
        final int length$63;
        if (isTuple$60) {
            array$61 = ((.ceylon.language.Tuple)iterable$59).$getArray$();
            i$62 = ((.ceylon.language.Tuple)iterable$59).$getFirst$();
            length$63 = i$62 + ((.ceylon.language.Tuple)iterable$59).$getLength$();
        } else {
            array$61 = null;
            length$63 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$58 = isTuple$60 ? null : iterable$59.iterator();
        loop_7: while (isTuple$60 ? i$62 < length$63 : !((elem$57 = element$iterator$$58.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$60) elem$57 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$61, i$62++);
            final long element = ((.ceylon.language.Integer)elem$57).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
        .java.lang.Object elem$64;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$65 = array.iterator();
        loop_8: while (!((elem$64 = element$iterator$$65.next()) instanceof .ceylon.language.Finished)) {
            final long element = ((.ceylon.language.Integer)elem$64).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.loop.optim.ArrayIterationDynamic();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.loop.optim.ArrayIterationDynamic.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.loop.optim.ArrayIterationDynamic.class);
}