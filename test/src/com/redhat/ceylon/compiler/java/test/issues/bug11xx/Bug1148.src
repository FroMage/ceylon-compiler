package com.redhat.ceylon.compiler.java.test.issues.bug11xx;

public final class bug1148_ {
    
    private bug1148_() {
    }
    
    public static void bug1148() {
        final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> d = .ceylon.language.ArraySequence.<.java.lang.Object>instance(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.String.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.Character.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.Character.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor), .ceylon.language.Empty.$TypeDescriptor)), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.Float.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Float.$TypeDescriptor, .ceylon.language.Float.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.Character.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor))), new .java.lang.Object[]{
                new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.Character.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.Character.$TypeDescriptor, .ceylon.language.Null.$TypeDescriptor), .ceylon.language.Empty.$TypeDescriptor), "String({Character*})", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.String $call(final .java.lang.Object $param$0) {
                        final .ceylon.language.Iterable $ceylontmpcharacters = (.ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object>)(.ceylon.language.Iterable)$param$0;
                        return new .ceylon.language.String($ceylontmpcharacters);
                    }
                },
                new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Float>(.ceylon.language.Float.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Float.$TypeDescriptor, .ceylon.language.Float.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "Float(Float)", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Float $call(final .java.lang.Object $param$0) {
                        final double $ceylontmpfloat = ((.ceylon.language.Float)$param$0).doubleValue();
                        return new .ceylon.language.Float($ceylontmpfloat);
                    }
                },
                new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "Integer(Integer)", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Integer $call(final .java.lang.Object $param$0) {
                        final long $ceylontmpinteger = ((.ceylon.language.Integer)$param$0).longValue();
                        return new .ceylon.language.Integer($ceylontmpinteger);
                    }
                },
                new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Character>(.ceylon.language.Character.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), "Character(Integer)", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Character $call(final .java.lang.Object $param$0) {
                        final int $ceylontmpcharacter = (int)((.ceylon.language.Integer)$param$0).longValue();
                        return new .ceylon.language.Character($ceylontmpcharacter);
                    }
                }});
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug11xx.bug1148_.bug1148();
    }
}