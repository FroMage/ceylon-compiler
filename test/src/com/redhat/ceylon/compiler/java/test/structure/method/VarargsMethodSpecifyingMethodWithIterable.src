package com.redhat.ceylon.compiler.java.test.structure.method;

class VarargsMethodSpecifyingMethodWithIterable {
    
    VarargsMethodSpecifyingMethodWithIterable() {
    }
    
    private final void foo(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ?> seq) {
    }
    
    private final .java.lang.Object bar() {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$ints$1 = bar$ints();
            }
            returning bar($ceylontmp$ints$1);
        );
    }
    
    private final .ceylon.language.Sequential<? extends .ceylon.language.Integer> bar$ints() {
        return (.ceylon.language.Sequential).ceylon.language.empty_.getEmpty$();
    }
    
    private final .java.lang.Object bar(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> ints) {
        return (
            let
            {
                foo(ints);
            }
            returning null;
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.method.VarargsMethodSpecifyingMethodWithIterable();
    }
}