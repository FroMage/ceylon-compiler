package com.redhat.ceylon.compiler.java.test.structure.method;

class VarargsMethodSpecifyingMethodWithIterable {
    
    VarargsMethodSpecifyingMethodWithIterable() {
    }
    
    private final void foo(final .ceylon.language.Iterable<? extends .ceylon.language.Integer> seq) {
    }
    
    private final void bar() {
        (
            let
            {
                .ceylon.language.List<? extends .ceylon.language.Integer> $ceylontmp$ints$1 = bar$ints();
                bar($ceylontmp$ints$1);
            }
            returning null;
        );
    }
    
    private final .ceylon.language.List<? extends .ceylon.language.Integer> bar$ints() {
        return (.ceylon.language.List).ceylon.language.empty_.getEmpty$();
    }
    
    private final void bar(final .ceylon.language.List<? extends .ceylon.language.Integer> ints) {
        new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("Void(Iterable<Integer>)"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                return (
                    let
                    {
                        foo((.ceylon.language.Iterable)$param$0);
                    }
                    returning null;
                );
            }
        };
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.method.VarargsMethodSpecifyingMethodWithIterable();
    }
}