package com.redhat.ceylon.compiler.java.test.issues.bug08xx;

public final class bug898_ {
    
    private bug898_() {
    }
    
    public static void bug898() {
        final .ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object> fooForced = (.ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object>)(.ceylon.language.Iterable).ceylon.language.empty_.get_();
        final .ceylon.language.Empty fooInferred = .ceylon.language.empty_.get_();
        final .ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object> barForced = (.ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object>)(.ceylon.language.Iterable)new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Empty, .java.lang.Object>(.ceylon.language.Empty.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 1, false){
            
            @.java.lang.Override
            protected final .java.lang.invoke.MethodHandles.Lookup lookup() {
                return .java.lang.invoke.MethodHandles.lookup();
            }
            
            @.java.lang.Override
            protected final .java.lang.Object invoke(.java.lang.invoke.MethodHandle handle) {
                return handle.invokeExact(this);
            }
            
            private final .java.lang.Object $0() {
                return .ceylon.language.empty_.get_();
            }
        };
        final .ceylon.language.Iterable<? extends .ceylon.language.Empty, ? extends .java.lang.Object> barInferred = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Empty, .java.lang.Object>(.ceylon.language.Empty.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 1, false){
            
            @.java.lang.Override
            protected final .java.lang.invoke.MethodHandles.Lookup lookup() {
                return .java.lang.invoke.MethodHandles.lookup();
            }
            
            @.java.lang.Override
            protected final .java.lang.Object invoke(.java.lang.invoke.MethodHandle handle) {
                return handle.invokeExact(this);
            }
            
            private final .java.lang.Object $0() {
                return .ceylon.language.empty_.get_();
            }
        };
        final .ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object> geeForced = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, .java.lang.Object>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 1, false){
            
            @.java.lang.Override
            protected final .java.lang.invoke.MethodHandles.Lookup lookup() {
                return .java.lang.invoke.MethodHandles.lookup();
            }
            
            @.java.lang.Override
            protected final .java.lang.Object invoke(.java.lang.invoke.MethodHandle handle) {
                return handle.invokeExact(this);
            }
            
            private final .java.lang.Object $0() {
                return new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 1, false){
                    
                    @.java.lang.Override
                    protected final .java.lang.invoke.MethodHandles.Lookup lookup() {
                        return .java.lang.invoke.MethodHandles.lookup();
                    }
                    
                    @.java.lang.Override
                    protected final .java.lang.Object invoke(.java.lang.invoke.MethodHandle handle) {
                        return handle.invokeExact(this);
                    }
                    
                    private final .java.lang.Object $0() {
                        return .ceylon.language.String.instance("");
                    }
                };
            }
        };
        final .ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object> geeInferred = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, .java.lang.Object>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 1, false){
            
            @.java.lang.Override
            protected final .java.lang.invoke.MethodHandles.Lookup lookup() {
                return .java.lang.invoke.MethodHandles.lookup();
            }
            
            @.java.lang.Override
            protected final .java.lang.Object invoke(.java.lang.invoke.MethodHandle handle) {
                return handle.invokeExact(this);
            }
            
            private final .java.lang.Object $0() {
                return new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 1, false){
                    
                    @.java.lang.Override
                    protected final .java.lang.invoke.MethodHandles.Lookup lookup() {
                        return .java.lang.invoke.MethodHandles.lookup();
                    }
                    
                    @.java.lang.Override
                    protected final .java.lang.Object invoke(.java.lang.invoke.MethodHandle handle) {
                        return handle.invokeExact(this);
                    }
                    
                    private final .java.lang.Object $0() {
                        return .ceylon.language.String.instance("");
                    }
                };
            }
        };
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug08xx.bug898_.bug898();
    }
}