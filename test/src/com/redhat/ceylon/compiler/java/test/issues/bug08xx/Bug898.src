package com.redhat.ceylon.compiler.java.test.issues.bug08xx;

public final class bug898_ {
    
    private bug898_() {
    }
    
    public static void bug898() {
        final .ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object> fooForced = (.ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object>)(.ceylon.language.Iterable).ceylon.language.empty_.get_();
        final .ceylon.language.Empty fooInferred = .ceylon.language.empty_.get_();
        final .ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object> barForced = (.ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object>)(.ceylon.language.Iterable).ceylon.language.ArraySequence.<.ceylon.language.Empty>instance(.ceylon.language.Empty.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.empty_.get_()});
        final .ceylon.language.Iterable<? extends .ceylon.language.Empty, ? extends .java.lang.Object> barInferred = .ceylon.language.ArraySequence.<.ceylon.language.Empty>instance(.ceylon.language.Empty.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.empty_.get_()});
        final .ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object> geeForced = .ceylon.language.ArraySequence.<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>>instance(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType), new .java.lang.Object[]{.ceylon.language.ArraySequence.<.ceylon.language.String>instance(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.String.instance("")})});
        final .ceylon.language.Iterable<? extends .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, ? extends .java.lang.Object> geeInferred = .ceylon.language.ArraySequence.<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>>instance(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType), new .java.lang.Object[]{.ceylon.language.ArraySequence.<.ceylon.language.String>instance(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.String.instance("")})});
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug08xx.bug898_.bug898();
    }
}