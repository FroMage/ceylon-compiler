package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class callableArgumentNary_f_ {
    
    private callableArgumentNary_f_() {
    }
    
    static void callableArgumentNary_f(final .ceylon.language.Callable<? extends .java.lang.Object> foo) {
    }
}
final class callableArgumentNary_bar_ {
    
    private callableArgumentNary_bar_() {
    }
    
    static void callableArgumentNary_bar(final long i, final .java.lang.String s, final boolean b, final int c) {
    }
}
final class callableArgumentNary_m_ {
    
    private callableArgumentNary_m_() {
    }
    
    static void callableArgumentNary_m() {
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentNary_f_.callableArgumentNary_f(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.String.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Character.$TypeDescriptor), .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.String.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Character.$TypeDescriptor), .ceylon.language.String.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Character.$TypeDescriptor), .ceylon.language.Boolean.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Character.$TypeDescriptor, .ceylon.language.Character.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)))), "Anything(Integer, String, Boolean, Character)"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object... $param$0) {
                final long $$i = ((.ceylon.language.Integer)$param$0[0]).longValue();
                final .java.lang.String $$s = ((.ceylon.language.String)$param$0[1]).toString();
                final boolean $$b = ((.ceylon.language.Boolean)$param$0[2]).booleanValue();
                final int $$c = ((.ceylon.language.Character)$param$0[3]).intValue();
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentNary_bar_.callableArgumentNary_bar($$i, $$s, $$b, $$c);
                    }
                    returning null;
                );
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess$().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentNary_m_.callableArgumentNary_m();
    }
}