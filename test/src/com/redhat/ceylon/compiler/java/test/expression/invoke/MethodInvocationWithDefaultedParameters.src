package com.redhat.ceylon.compiler.java.test.expression.invoke;

class Fookls implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    Fookls(final long init) {
        this.init = init;
        this.prop = 42L;
        this.privProp = 24L;
    }
    private final long prop;
    
    public final long getProp() {
        return prop;
    }
    private final long privProp;
    
    private final long getPrivProp$priv() {
        return privProp;
    }
    private final long init;
    
    private final long getInit$priv() {
        return init;
    }
    
    public .java.lang.Object f1() {
        return (
            let
            {
                long $ceylontmp$n$0 = f1$n();
            }
            returning f1($ceylontmp$n$0);
        );
    }
    
    public final long f1$n() {
        return 5L;
    }
    
    public .java.lang.Object f1(final long n) {
        return null;
    }
    
    public .java.lang.Object f2(final long n) {
        return (
            let
            {
                .java.lang.String $ceylontmp$s$1 = f2$s(n);
            }
            returning f2(n, $ceylontmp$s$1);
        );
    }
    
    public final .java.lang.String f2$s(final long n) {
        return "test";
    }
    
    public .java.lang.Object f2(final long n, final .java.lang.String s) {
        return null;
    }
    
    public .java.lang.Object f3() {
        return (
            let
            {
                long $ceylontmp$n$2 = f3$n();
                long $ceylontmp$m$3 = f3$m($ceylontmp$n$2);
            }
            returning f3($ceylontmp$n$2, $ceylontmp$m$3);
        );
    }
    
    public final long f3$n() {
        return 5L;
    }
    
    public .java.lang.Object f3(final long n) {
        return (
            let
            {
                long $ceylontmp$m$4 = f3$m(n);
            }
            returning f3(n, $ceylontmp$m$4);
        );
    }
    
    public final long f3$m(final long n) {
        return n;
    }
    
    public .java.lang.Object f3(final long n, final long m) {
        return null;
    }
    
    public .java.lang.Object f4() {
        return (
            let
            {
                long $ceylontmp$n$5 = f4$n();
                long $ceylontmp$m$6 = f4$m($ceylontmp$n$5);
            }
            returning f4($ceylontmp$n$5, $ceylontmp$m$6);
        );
    }
    
    public final long f4$n() {
        return 5L;
    }
    
    public .java.lang.Object f4(final long n) {
        return (
            let
            {
                long $ceylontmp$m$7 = f4$m(n);
            }
            returning f4(n, $ceylontmp$m$7);
        );
    }
    
    public final long f4$m(final long n) {
        return n + 1L;
    }
    
    public .java.lang.Object f4(final long n, final long m) {
        return null;
    }
    
    public .java.lang.Object f5() {
        return (
            let
            {
                long $ceylontmp$n$8 = f5$n();
            }
            returning f5($ceylontmp$n$8);
        );
    }
    
    public final long f5$n() {
        return getProp();
    }
    
    public .java.lang.Object f5(final long n) {
        return null;
    }
    
    public .java.lang.Object f6() {
        return (
            let
            {
                long $ceylontmp$n$9 = f6$n();
            }
            returning f6($ceylontmp$n$9);
        );
    }
    
    public final long f6$n() {
        return getPrivProp$priv();
    }
    
    public .java.lang.Object f6(final long n) {
        return null;
    }
    
    public .java.lang.Object f7() {
        return (
            let
            {
                long $ceylontmp$n$10 = f7$n();
            }
            returning f7($ceylontmp$n$10);
        );
    }
    
    public final long f7$n() {
        return this.getProp();
    }
    
    public .java.lang.Object f7(final long n) {
        return null;
    }
    
    public .java.lang.Object f8() {
        return (
            let
            {
                long $ceylontmp$n$11 = f8$n();
            }
            returning f8($ceylontmp$n$11);
        );
    }
    
    public final long f8$n() {
        return getInit$priv();
    }
    
    public .java.lang.Object f8(final long n) {
        return null;
    }
    
    public .java.lang.Object f9() {
        return (
            let
            {
                long $ceylontmp$n$12 = f9$n();
            }
            returning f9($ceylontmp$n$12);
        );
    }
    
    public final long f9$n() {
        return .ceylon.language.Integer.getSuccessor(getProp());
    }
    
    public .java.lang.Object f9(final long n) {
        return null;
    }
    
    public .java.lang.Object fa() {
        return (
            let
            {
                long $ceylontmp$n$13 = fa$n();
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$seq$14 = fa$seq($ceylontmp$n$13);
            }
            returning fa($ceylontmp$n$13, $ceylontmp$seq$14);
        );
    }
    
    public final long fa$n() {
        return 5L;
    }
    
    public .java.lang.Object fa(final long n) {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$seq$15 = fa$seq(n);
            }
            returning fa(n, $ceylontmp$seq$15);
        );
    }
    
    public final .ceylon.language.Sequential<? extends .ceylon.language.Integer> fa$seq(final long n) {
        return (.ceylon.language.Sequential).ceylon.language.empty_.$get();
    }
    
    public .java.lang.Object fa(final long n, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> seq) {
        return null;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls.class);
}
class Foosubkls extends .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls {
    
    Foosubkls(final long init) {
        super(init);
    }
    
    @.java.lang.Override
    public final .java.lang.Object f1(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f2(final long n, final .java.lang.String s) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f3(final long n, final long m) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f4(final long n, final long m) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f5(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f6(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f7(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f8(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f9(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object fa(final long n, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> seq) {
        return null;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls.class);
}
interface Barface {
    
    public .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface$impl $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$impl();
    
    public abstract long getProp();
    
    public abstract .java.lang.Object f1();
    
    public abstract long f1$n();
    
    public abstract .java.lang.Object f1(final long n);
    
    public abstract .java.lang.Object f2(final long n);
    
    public abstract .java.lang.String f2$s(final long n);
    
    public abstract .java.lang.Object f2(final long n, final .java.lang.String s);
    
    public abstract .java.lang.Object f3();
    
    public abstract long f3$n();
    
    public abstract .java.lang.Object f3(final long n);
    
    public abstract long f3$m(final long n);
    
    public abstract .java.lang.Object f3(final long n, final long m);
    
    public abstract .java.lang.Object f4();
    
    public abstract long f4$n();
    
    public abstract .java.lang.Object f4(final long n);
    
    public abstract long f4$m(final long n);
    
    public abstract .java.lang.Object f4(final long n, final long m);
    
    public abstract .java.lang.Object f5();
    
    public abstract long f5$n();
    
    public abstract .java.lang.Object f5(final long n);
    
    public abstract .java.lang.Object f7();
    
    public abstract long f7$n();
    
    public abstract .java.lang.Object f7(final long n);
    
    public abstract .java.lang.Object f9();
    
    public abstract long f9$n();
    
    public abstract .java.lang.Object f9(final long n);
    
    public abstract .java.lang.Object fa();
    
    public abstract long fa$n();
    
    public abstract .java.lang.Object fa(final long n);
    
    public abstract .ceylon.language.Sequential<? extends .ceylon.language.Integer> fa$seq(final long n);
    
    public abstract .java.lang.Object fa(final long n, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> seq);
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.Barface.class);
}
final class Barface$impl {
    
    Barface$impl(.com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $this;
    
    public final .java.lang.Object f1() {
        return (
            let
            {
                long $ceylontmp$n$16 = f1$n();
            }
            returning $this.f1($ceylontmp$n$16);
        );
    }
    
    public final long f1$n() {
        return 5L;
    }
    
    public final .java.lang.Object f2(final long n) {
        return (
            let
            {
                .java.lang.String $ceylontmp$s$17 = f2$s(n);
            }
            returning $this.f2(n, $ceylontmp$s$17);
        );
    }
    
    public final .java.lang.String f2$s(final long n) {
        return "test";
    }
    
    public final .java.lang.Object f3() {
        return (
            let
            {
                long $ceylontmp$n$18 = f3$n();
                long $ceylontmp$m$19 = f3$m($ceylontmp$n$18);
            }
            returning $this.f3($ceylontmp$n$18, $ceylontmp$m$19);
        );
    }
    
    public final long f3$n() {
        return 5L;
    }
    
    public final .java.lang.Object f3(final long n) {
        return (
            let
            {
                long $ceylontmp$m$20 = f3$m(n);
            }
            returning $this.f3(n, $ceylontmp$m$20);
        );
    }
    
    public final long f3$m(final long n) {
        return n;
    }
    
    public final .java.lang.Object f4() {
        return (
            let
            {
                long $ceylontmp$n$21 = f4$n();
                long $ceylontmp$m$22 = f4$m($ceylontmp$n$21);
            }
            returning $this.f4($ceylontmp$n$21, $ceylontmp$m$22);
        );
    }
    
    public final long f4$n() {
        return 5L;
    }
    
    public final .java.lang.Object f4(final long n) {
        return (
            let
            {
                long $ceylontmp$m$23 = f4$m(n);
            }
            returning $this.f4(n, $ceylontmp$m$23);
        );
    }
    
    public final long f4$m(final long n) {
        return n + 1L;
    }
    
    public final .java.lang.Object f5() {
        return (
            let
            {
                long $ceylontmp$n$24 = f5$n();
            }
            returning $this.f5($ceylontmp$n$24);
        );
    }
    
    public final long f5$n() {
        return $this.getProp();
    }
    
    public final .java.lang.Object f7() {
        return (
            let
            {
                long $ceylontmp$n$25 = f7$n();
            }
            returning $this.f7($ceylontmp$n$25);
        );
    }
    
    public final long f7$n() {
        return $this.getProp();
    }
    
    public final .java.lang.Object f9() {
        return (
            let
            {
                long $ceylontmp$n$26 = f9$n();
            }
            returning $this.f9($ceylontmp$n$26);
        );
    }
    
    public final long f9$n() {
        return .ceylon.language.Integer.getSuccessor($this.getProp());
    }
    
    public final .java.lang.Object fa() {
        return (
            let
            {
                long $ceylontmp$n$27 = fa$n();
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$seq$28 = fa$seq($ceylontmp$n$27);
            }
            returning $this.fa($ceylontmp$n$27, $ceylontmp$seq$28);
        );
    }
    
    public final long fa$n() {
        return 5L;
    }
    
    public final .java.lang.Object fa(final long n) {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$seq$29 = fa$seq(n);
            }
            returning $this.fa(n, $ceylontmp$seq$29);
        );
    }
    
    public final .ceylon.language.Sequential<? extends .ceylon.language.Integer> fa$seq(final long n) {
        return (.ceylon.language.Sequential).ceylon.language.empty_.$get();
    }
}
class Barkls implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface {
    
    Barkls() {
        this.$com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this = new .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface$impl(this);
        this.prop = 42L;
    }
    protected final .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface$impl $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface$impl $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$impl() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this;
    }
    
    @.java.lang.Override
    public final long f1$n() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f1$n();
    }
    
    @.java.lang.Override
    public final .java.lang.Object f1() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f1();
    }
    
    @.java.lang.Override
    public final .java.lang.String f2$s(final long n) {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f2$s(n);
    }
    
    @.java.lang.Override
    public final .java.lang.Object f2(final long n) {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f2(n);
    }
    
    @.java.lang.Override
    public final long f3$n() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f3$n();
    }
    
    @.java.lang.Override
    public final .java.lang.Object f3() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f3();
    }
    
    @.java.lang.Override
    public final long f3$m(final long n) {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f3$m(n);
    }
    
    @.java.lang.Override
    public final .java.lang.Object f3(final long n) {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f3(n);
    }
    
    @.java.lang.Override
    public final long f4$n() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f4$n();
    }
    
    @.java.lang.Override
    public final .java.lang.Object f4() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f4();
    }
    
    @.java.lang.Override
    public final long f4$m(final long n) {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f4$m(n);
    }
    
    @.java.lang.Override
    public final .java.lang.Object f4(final long n) {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f4(n);
    }
    
    @.java.lang.Override
    public final long f5$n() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f5$n();
    }
    
    @.java.lang.Override
    public final .java.lang.Object f5() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f5();
    }
    
    @.java.lang.Override
    public final long f7$n() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f7$n();
    }
    
    @.java.lang.Override
    public final .java.lang.Object f7() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f7();
    }
    
    @.java.lang.Override
    public final long f9$n() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f9$n();
    }
    
    @.java.lang.Override
    public final .java.lang.Object f9() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.f9();
    }
    
    @.java.lang.Override
    public final long fa$n() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.fa$n();
    }
    
    @.java.lang.Override
    public final .java.lang.Object fa() {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.fa();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Sequential<? extends .ceylon.language.Integer> fa$seq(final long n) {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.fa$seq(n);
    }
    
    @.java.lang.Override
    public final .java.lang.Object fa(final long n) {
        return $com$redhat$ceylon$compiler$java$test$expression$invoke$Barface$this.fa(n);
    }
    private final long prop;
    
    @.java.lang.Override
    public final long getProp() {
        return prop;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f1(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f2(final long n, final .java.lang.String s) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f3(final long n, final long m) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f4(final long n, final long m) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f5(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f7(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object f9(final long n) {
        return null;
    }
    
    @.java.lang.Override
    public final .java.lang.Object fa(final long n, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> seq) {
        return null;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls.$TypeDescriptor;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls.class);
}
final class methodInvocationWithDefaultedParameters_ {
    
    private methodInvocationWithDefaultedParameters_() {
    }
    
    static void methodInvocationWithDefaultedParameters() {
        final .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls f = new .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls(88L);
        f.f1();
        f.f1(6L);
        f.f2(1L);
        f.f2(1L, "foo");
        f.f3();
        f.f3(6L);
        f.f3(6L, 9L);
        f.f4();
        f.f4(6L);
        f.f4(6L, 9L);
        f.f5();
        f.f5(6L);
        f.f6();
        f.f6(6L);
        f.f7();
        f.f7(6L);
        f.f8();
        f.f8(6L);
        f.f9();
        f.f9(6L);
        f.fa();
        f.fa(6L);
        f.fa(6L);
        f.fa(6L, .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        f.fa(6L, new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get()))));
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$30$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$30$this$ = $arg$30$callable$;
                long $arg$30$0 = $arg$30$this$.f1$n();
                $arg$30$callable$.f1($arg$30$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$31$callable$ = f;
                long $arg$31$0 = 6L;
                $arg$31$callable$.f1($arg$31$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$32$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$32$this$ = $arg$32$callable$;
                long $arg$32$0 = 1L;
                .java.lang.String $arg$32$1 = $arg$32$this$.f2$s($arg$32$0);
                $arg$32$callable$.f2($arg$32$0, $arg$32$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$33$callable$ = f;
                long $arg$33$0 = 1L;
                .java.lang.String $arg$33$1 = "foo";
                $arg$33$callable$.f2($arg$33$0, $arg$33$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$34$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$34$this$ = $arg$34$callable$;
                long $arg$34$0 = $arg$34$this$.f3$n();
                long $arg$34$1 = $arg$34$this$.f3$m($arg$34$0);
                $arg$34$callable$.f3($arg$34$0, $arg$34$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$35$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$35$this$ = $arg$35$callable$;
                long $arg$35$0 = 6L;
                long $arg$35$1 = $arg$35$this$.f3$m($arg$35$0);
                $arg$35$callable$.f3($arg$35$0, $arg$35$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$36$callable$ = f;
                long $arg$36$1 = 9L;
                long $arg$36$0 = 6L;
                $arg$36$callable$.f3($arg$36$0, $arg$36$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$37$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$37$this$ = $arg$37$callable$;
                long $arg$37$0 = $arg$37$this$.f4$n();
                long $arg$37$1 = $arg$37$this$.f4$m($arg$37$0);
                $arg$37$callable$.f4($arg$37$0, $arg$37$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$38$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$38$this$ = $arg$38$callable$;
                long $arg$38$0 = 6L;
                long $arg$38$1 = $arg$38$this$.f4$m($arg$38$0);
                $arg$38$callable$.f4($arg$38$0, $arg$38$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$39$callable$ = f;
                long $arg$39$1 = 9L;
                long $arg$39$0 = 6L;
                $arg$39$callable$.f4($arg$39$0, $arg$39$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$40$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$40$this$ = $arg$40$callable$;
                long $arg$40$0 = $arg$40$this$.f5$n();
                $arg$40$callable$.f5($arg$40$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$41$callable$ = f;
                long $arg$41$0 = 6L;
                $arg$41$callable$.f5($arg$41$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$42$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$42$this$ = $arg$42$callable$;
                long $arg$42$0 = $arg$42$this$.f6$n();
                $arg$42$callable$.f6($arg$42$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$43$callable$ = f;
                long $arg$43$0 = 6L;
                $arg$43$callable$.f6($arg$43$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$44$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$44$this$ = $arg$44$callable$;
                long $arg$44$0 = $arg$44$this$.f7$n();
                $arg$44$callable$.f7($arg$44$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$45$callable$ = f;
                long $arg$45$0 = 6L;
                $arg$45$callable$.f7($arg$45$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$46$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$46$this$ = $arg$46$callable$;
                long $arg$46$0 = $arg$46$this$.f8$n();
                $arg$46$callable$.f8($arg$46$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$47$callable$ = f;
                long $arg$47$0 = 6L;
                $arg$47$callable$.f8($arg$47$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$48$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$48$this$ = $arg$48$callable$;
                long $arg$48$0 = $arg$48$this$.f9$n();
                $arg$48$callable$.f9($arg$48$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$49$callable$ = f;
                long $arg$49$0 = 6L;
                $arg$49$callable$.f9($arg$49$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$50$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$50$this$ = $arg$50$callable$;
                long $arg$50$0 = $arg$50$this$.fa$n();
                .ceylon.language.Sequential $arg$50$1 = $arg$50$this$.fa$seq($arg$50$0);
                $arg$50$callable$.fa($arg$50$0, $arg$50$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$51$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$51$this$ = $arg$51$callable$;
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $arg$51$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get())));
                long $arg$51$0 = $arg$51$this$.fa$n();
                $arg$51$callable$.fa($arg$51$0, $arg$51$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$52$callable$ = f;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$52$this$ = $arg$52$callable$;
                long $arg$52$0 = 6L;
                .ceylon.language.Sequential $arg$52$1 = $arg$52$this$.fa$seq($arg$52$0);
                $arg$52$callable$.fa($arg$52$0, $arg$52$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Fookls $arg$53$callable$ = f;
                long $arg$53$0 = 6L;
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $arg$53$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get())));
                $arg$53$callable$.fa($arg$53$0, $arg$53$1);
            }
            returning null;
        );
        final .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls f2 = new .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls(88L);
        f2.f1();
        f2.f1(6L);
        f2.f2(1L);
        f2.f2(1L, "foo");
        f2.f3();
        f2.f3(6L);
        f2.f3(6L, 9L);
        f2.f4();
        f2.f4(6L);
        f2.f4(6L, 9L);
        f2.f5();
        f2.f5(6L);
        f2.f6();
        f2.f6(6L);
        f2.f7();
        f2.f7(6L);
        f2.f8();
        f2.f8(6L);
        f2.f9();
        f2.f9(6L);
        f2.fa();
        f2.fa(6L);
        f2.fa(6L);
        f2.fa(6L, .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        f2.fa(6L, new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get()))));
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$54$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$54$this$ = $arg$54$callable$;
                long $arg$54$0 = $arg$54$this$.f1$n();
                $arg$54$callable$.f1($arg$54$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$55$callable$ = f2;
                long $arg$55$0 = 6L;
                $arg$55$callable$.f1($arg$55$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$56$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$56$this$ = $arg$56$callable$;
                long $arg$56$0 = 1L;
                .java.lang.String $arg$56$1 = $arg$56$this$.f2$s($arg$56$0);
                $arg$56$callable$.f2($arg$56$0, $arg$56$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$57$callable$ = f2;
                long $arg$57$0 = 1L;
                .java.lang.String $arg$57$1 = "foo";
                $arg$57$callable$.f2($arg$57$0, $arg$57$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$58$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$58$this$ = $arg$58$callable$;
                long $arg$58$0 = $arg$58$this$.f3$n();
                long $arg$58$1 = $arg$58$this$.f3$m($arg$58$0);
                $arg$58$callable$.f3($arg$58$0, $arg$58$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$59$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$59$this$ = $arg$59$callable$;
                long $arg$59$0 = 6L;
                long $arg$59$1 = $arg$59$this$.f3$m($arg$59$0);
                $arg$59$callable$.f3($arg$59$0, $arg$59$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$60$callable$ = f2;
                long $arg$60$1 = 9L;
                long $arg$60$0 = 6L;
                $arg$60$callable$.f3($arg$60$0, $arg$60$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$61$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$61$this$ = $arg$61$callable$;
                long $arg$61$0 = $arg$61$this$.f4$n();
                long $arg$61$1 = $arg$61$this$.f4$m($arg$61$0);
                $arg$61$callable$.f4($arg$61$0, $arg$61$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$62$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$62$this$ = $arg$62$callable$;
                long $arg$62$0 = 6L;
                long $arg$62$1 = $arg$62$this$.f4$m($arg$62$0);
                $arg$62$callable$.f4($arg$62$0, $arg$62$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$63$callable$ = f2;
                long $arg$63$1 = 9L;
                long $arg$63$0 = 6L;
                $arg$63$callable$.f4($arg$63$0, $arg$63$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$64$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$64$this$ = $arg$64$callable$;
                long $arg$64$0 = $arg$64$this$.f5$n();
                $arg$64$callable$.f5($arg$64$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$65$callable$ = f2;
                long $arg$65$0 = 6L;
                $arg$65$callable$.f5($arg$65$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$66$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$66$this$ = $arg$66$callable$;
                long $arg$66$0 = $arg$66$this$.f6$n();
                $arg$66$callable$.f6($arg$66$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$67$callable$ = f2;
                long $arg$67$0 = 6L;
                $arg$67$callable$.f6($arg$67$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$68$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$68$this$ = $arg$68$callable$;
                long $arg$68$0 = $arg$68$this$.f7$n();
                $arg$68$callable$.f7($arg$68$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$69$callable$ = f2;
                long $arg$69$0 = 6L;
                $arg$69$callable$.f7($arg$69$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$70$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$70$this$ = $arg$70$callable$;
                long $arg$70$0 = $arg$70$this$.f8$n();
                $arg$70$callable$.f8($arg$70$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$71$callable$ = f2;
                long $arg$71$0 = 6L;
                $arg$71$callable$.f8($arg$71$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$72$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$72$this$ = $arg$72$callable$;
                long $arg$72$0 = $arg$72$this$.f9$n();
                $arg$72$callable$.f9($arg$72$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$73$callable$ = f2;
                long $arg$73$0 = 6L;
                $arg$73$callable$.f9($arg$73$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$74$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$74$this$ = $arg$74$callable$;
                long $arg$74$0 = $arg$74$this$.fa$n();
                .ceylon.language.Sequential $arg$74$1 = $arg$74$this$.fa$seq($arg$74$0);
                $arg$74$callable$.fa($arg$74$0, $arg$74$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$75$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$75$this$ = $arg$75$callable$;
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $arg$75$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get())));
                long $arg$75$0 = $arg$75$this$.fa$n();
                $arg$75$callable$.fa($arg$75$0, $arg$75$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$76$callable$ = f2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$76$this$ = $arg$76$callable$;
                long $arg$76$0 = 6L;
                .ceylon.language.Sequential $arg$76$1 = $arg$76$this$.fa$seq($arg$76$0);
                $arg$76$callable$.fa($arg$76$0, $arg$76$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foosubkls $arg$77$callable$ = f2;
                long $arg$77$0 = 6L;
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $arg$77$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get())));
                $arg$77$callable$.fa($arg$77$0, $arg$77$1);
            }
            returning null;
        );
        final .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface b = new .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls();
        b.f1();
        b.f1(6L);
        b.f2(1L);
        b.f2(1L, "foo");
        b.f3();
        b.f3(6L);
        b.f3(6L, 9L);
        b.f4();
        b.f4(6L);
        b.f4(6L, 9L);
        b.f5();
        b.f5(6L);
        b.f7();
        b.f7(6L);
        b.f9();
        b.f9(6L);
        b.fa(6L);
        b.fa(6L);
        b.fa(6L, .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        b.fa(6L, new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get()))));
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$78$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$78$this$ = $arg$78$callable$;
                long $arg$78$0 = $arg$78$this$.f1$n();
                $arg$78$callable$.f1($arg$78$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$79$callable$ = b;
                long $arg$79$0 = 6L;
                $arg$79$callable$.f1($arg$79$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$80$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$80$this$ = $arg$80$callable$;
                long $arg$80$0 = 1L;
                .java.lang.String $arg$80$1 = $arg$80$this$.f2$s($arg$80$0);
                $arg$80$callable$.f2($arg$80$0, $arg$80$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$81$callable$ = b;
                long $arg$81$0 = 1L;
                .java.lang.String $arg$81$1 = "foo";
                $arg$81$callable$.f2($arg$81$0, $arg$81$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$82$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$82$this$ = $arg$82$callable$;
                long $arg$82$0 = $arg$82$this$.f3$n();
                long $arg$82$1 = $arg$82$this$.f3$m($arg$82$0);
                $arg$82$callable$.f3($arg$82$0, $arg$82$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$83$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$83$this$ = $arg$83$callable$;
                long $arg$83$0 = 6L;
                long $arg$83$1 = $arg$83$this$.f3$m($arg$83$0);
                $arg$83$callable$.f3($arg$83$0, $arg$83$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$84$callable$ = b;
                long $arg$84$1 = 9L;
                long $arg$84$0 = 6L;
                $arg$84$callable$.f3($arg$84$0, $arg$84$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$85$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$85$this$ = $arg$85$callable$;
                long $arg$85$0 = $arg$85$this$.f4$n();
                long $arg$85$1 = $arg$85$this$.f4$m($arg$85$0);
                $arg$85$callable$.f4($arg$85$0, $arg$85$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$86$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$86$this$ = $arg$86$callable$;
                long $arg$86$0 = 6L;
                long $arg$86$1 = $arg$86$this$.f4$m($arg$86$0);
                $arg$86$callable$.f4($arg$86$0, $arg$86$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$87$callable$ = b;
                long $arg$87$1 = 9L;
                long $arg$87$0 = 6L;
                $arg$87$callable$.f4($arg$87$0, $arg$87$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$88$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$88$this$ = $arg$88$callable$;
                long $arg$88$0 = $arg$88$this$.f5$n();
                $arg$88$callable$.f5($arg$88$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$89$callable$ = b;
                long $arg$89$0 = 6L;
                $arg$89$callable$.f5($arg$89$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$90$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$90$this$ = $arg$90$callable$;
                long $arg$90$0 = $arg$90$this$.f7$n();
                $arg$90$callable$.f7($arg$90$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$91$callable$ = b;
                long $arg$91$0 = 6L;
                $arg$91$callable$.f7($arg$91$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$92$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$92$this$ = $arg$92$callable$;
                long $arg$92$0 = $arg$92$this$.f9$n();
                $arg$92$callable$.f9($arg$92$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$93$callable$ = b;
                long $arg$93$0 = 6L;
                $arg$93$callable$.f9($arg$93$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$94$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$94$this$ = $arg$94$callable$;
                long $arg$94$0 = $arg$94$this$.fa$n();
                .ceylon.language.Sequential $arg$94$1 = $arg$94$this$.fa$seq($arg$94$0);
                $arg$94$callable$.fa($arg$94$0, $arg$94$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$95$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$95$this$ = $arg$95$callable$;
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $arg$95$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get())));
                long $arg$95$0 = $arg$95$this$.fa$n();
                $arg$95$callable$.fa($arg$95$0, $arg$95$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$96$callable$ = b;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$96$this$ = $arg$96$callable$;
                long $arg$96$0 = 6L;
                .ceylon.language.Sequential $arg$96$1 = $arg$96$this$.fa$seq($arg$96$0);
                $arg$96$callable$.fa($arg$96$0, $arg$96$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barface $arg$97$callable$ = b;
                long $arg$97$0 = 6L;
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $arg$97$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get())));
                $arg$97$callable$.fa($arg$97$0, $arg$97$1);
            }
            returning null;
        );
        final .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls b2 = new .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls();
        b2.f1();
        b2.f1(6L);
        b2.f2(1L);
        b2.f2(1L, "foo");
        b2.f3();
        b2.f3(6L);
        b2.f3(6L, 9L);
        b2.f4();
        b2.f4(6L);
        b2.f4(6L, 9L);
        b2.f5();
        b2.f5(6L);
        b2.f7();
        b2.f7(6L);
        b2.f9();
        b2.f9(6L);
        b2.fa(6L);
        b2.fa(6L);
        b2.fa(6L, .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        b2.fa(6L, new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get()))));
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$98$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$98$this$ = $arg$98$callable$;
                long $arg$98$0 = $arg$98$this$.f1$n();
                $arg$98$callable$.f1($arg$98$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$99$callable$ = b2;
                long $arg$99$0 = 6L;
                $arg$99$callable$.f1($arg$99$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$100$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$100$this$ = $arg$100$callable$;
                long $arg$100$0 = 1L;
                .java.lang.String $arg$100$1 = $arg$100$this$.f2$s($arg$100$0);
                $arg$100$callable$.f2($arg$100$0, $arg$100$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$101$callable$ = b2;
                long $arg$101$0 = 1L;
                .java.lang.String $arg$101$1 = "foo";
                $arg$101$callable$.f2($arg$101$0, $arg$101$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$102$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$102$this$ = $arg$102$callable$;
                long $arg$102$0 = $arg$102$this$.f3$n();
                long $arg$102$1 = $arg$102$this$.f3$m($arg$102$0);
                $arg$102$callable$.f3($arg$102$0, $arg$102$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$103$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$103$this$ = $arg$103$callable$;
                long $arg$103$0 = 6L;
                long $arg$103$1 = $arg$103$this$.f3$m($arg$103$0);
                $arg$103$callable$.f3($arg$103$0, $arg$103$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$104$callable$ = b2;
                long $arg$104$1 = 9L;
                long $arg$104$0 = 6L;
                $arg$104$callable$.f3($arg$104$0, $arg$104$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$105$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$105$this$ = $arg$105$callable$;
                long $arg$105$0 = $arg$105$this$.f4$n();
                long $arg$105$1 = $arg$105$this$.f4$m($arg$105$0);
                $arg$105$callable$.f4($arg$105$0, $arg$105$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$106$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$106$this$ = $arg$106$callable$;
                long $arg$106$0 = 6L;
                long $arg$106$1 = $arg$106$this$.f4$m($arg$106$0);
                $arg$106$callable$.f4($arg$106$0, $arg$106$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$107$callable$ = b2;
                long $arg$107$1 = 9L;
                long $arg$107$0 = 6L;
                $arg$107$callable$.f4($arg$107$0, $arg$107$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$108$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$108$this$ = $arg$108$callable$;
                long $arg$108$0 = $arg$108$this$.f5$n();
                $arg$108$callable$.f5($arg$108$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$109$callable$ = b2;
                long $arg$109$0 = 6L;
                $arg$109$callable$.f5($arg$109$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$110$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$110$this$ = $arg$110$callable$;
                long $arg$110$0 = $arg$110$this$.f7$n();
                $arg$110$callable$.f7($arg$110$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$111$callable$ = b2;
                long $arg$111$0 = 6L;
                $arg$111$callable$.f7($arg$111$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$112$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$112$this$ = $arg$112$callable$;
                long $arg$112$0 = $arg$112$this$.f9$n();
                $arg$112$callable$.f9($arg$112$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$113$callable$ = b2;
                long $arg$113$0 = 6L;
                $arg$113$callable$.f9($arg$113$0);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$114$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$114$this$ = $arg$114$callable$;
                long $arg$114$0 = $arg$114$this$.fa$n();
                .ceylon.language.Sequential $arg$114$1 = $arg$114$this$.fa$seq($arg$114$0);
                $arg$114$callable$.fa($arg$114$0, $arg$114$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$115$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$115$this$ = $arg$115$callable$;
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $arg$115$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get())));
                long $arg$115$0 = $arg$115$this$.fa$n();
                $arg$115$callable$.fa($arg$115$0, $arg$115$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$116$callable$ = b2;
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$116$this$ = $arg$116$callable$;
                long $arg$116$0 = 6L;
                .ceylon.language.Sequential $arg$116$1 = $arg$116$this$.fa$seq($arg$116$0);
                $arg$116$callable$.fa($arg$116$0, $arg$116$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Barkls $arg$117$callable$ = b2;
                long $arg$117$0 = 6L;
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $arg$117$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), .ceylon.language.Integer.instance(1L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Empty>>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor), .ceylon.language.Integer.instance(2L), new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Empty>(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor, .ceylon.language.Integer.instance(3L), .ceylon.language.empty_.$get())));
                $arg$117$callable$.fa($arg$117$0, $arg$117$1);
            }
            returning null;
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.methodInvocationWithDefaultedParameters_.methodInvocationWithDefaultedParameters();
    }
}