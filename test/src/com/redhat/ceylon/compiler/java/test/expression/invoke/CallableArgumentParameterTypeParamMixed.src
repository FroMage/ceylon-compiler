package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class callableArgumentParameterTypeParamMixed_f_ {
    
    private callableArgumentParameterTypeParamMixed_f_() {
    }
    
    static <S, T>void callableArgumentParameterTypeParamMixed_f(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedS, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedT, final .ceylon.language.Callable<? extends S> foo) {
    }
}
final class callableArgumentParameterTypeParamMixed_bar_ {
    
    private callableArgumentParameterTypeParamMixed_bar_() {
    }
    
    static <U, V>U callableArgumentParameterTypeParamMixed_bar(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedU, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedV, final U u, final V v) {
        return u;
    }
}
final class callableArgumentParameterTypeParamMixed_baz_ {
    
    private callableArgumentParameterTypeParamMixed_baz_() {
    }
    
    static long callableArgumentParameterTypeParamMixed_baz(final long i, final boolean b) {
        return i;
    }
}
class CallableArgumentParameterTypeParamMixed<X> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    CallableArgumentParameterTypeParamMixed(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX) {
        this.$reifiedX = $reifiedX;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedX;
    
    private final <Y>void m$priv(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reifiedY) {
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_f_.<.ceylon.language.Integer, .ceylon.language.Boolean>callableArgumentParameterTypeParamMixed_f(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor), .ceylon.language.Integer.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), "Integer(Integer, Boolean)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long $$i = ((.ceylon.language.Integer)$param$0).longValue();
                final boolean $$b = ((.ceylon.language.Boolean)$param$1).booleanValue();
                return .ceylon.language.Integer.instance(.com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_baz_.callableArgumentParameterTypeParamMixed_baz($$i, $$b));
            }
        });
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_f_.<.ceylon.language.Boolean, .ceylon.language.Integer>callableArgumentParameterTypeParamMixed_f(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Boolean>(.ceylon.language.Boolean.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor), .ceylon.language.Boolean.$TypeDescriptor, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), "Boolean(Boolean, Integer)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Boolean $call(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .ceylon.language.Boolean $$u = (.ceylon.language.Boolean)$param$0;
                final .ceylon.language.Integer $$v = (.ceylon.language.Integer)$param$1;
                return .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_bar_.<.ceylon.language.Boolean, .ceylon.language.Integer>callableArgumentParameterTypeParamMixed_bar(.ceylon.language.Boolean.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, $$u, $$v);
            }
        });
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_f_.<X, .ceylon.language.Integer>callableArgumentParameterTypeParamMixed_f($reifiedX, .ceylon.language.Integer.$TypeDescriptor, new .com.redhat.ceylon.compiler.java.language.AbstractCallable<X>($reifiedX, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, .ceylon.language.Integer.$TypeDescriptor), $reifiedX, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Integer.$TypeDescriptor, .ceylon.language.Empty.$TypeDescriptor)), "X(X, Integer)", (short)-1){
            
            @.java.lang.Override
            public X $call(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final X $$u = (X)$param$0;
                final .ceylon.language.Integer $$v = (.ceylon.language.Integer)$param$1;
                return .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_bar_.<X, .ceylon.language.Integer>callableArgumentParameterTypeParamMixed_bar($reifiedX, .ceylon.language.Integer.$TypeDescriptor, $$u, $$v);
            }
        });
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_f_.<X, Y>callableArgumentParameterTypeParamMixed_f($reifiedX, $reifiedY, new .com.redhat.ceylon.compiler.java.language.AbstractCallable<X>($reifiedX, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), $reifiedX, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, $reifiedY, $reifiedY, .ceylon.language.Empty.$TypeDescriptor)), "X(X, Y)", (short)-1){
            
            @.java.lang.Override
            public X $call(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final X $$u = (X)$param$0;
                final Y $$v = (Y)$param$1;
                return .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_bar_.<X, Y>callableArgumentParameterTypeParamMixed_bar($reifiedX, $reifiedY, $$u, $$v);
            }
        });
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_f_.<.java.lang.Object, Y>callableArgumentParameterTypeParamMixed_f(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.intersection($reifiedX, $reifiedY), $reifiedY, new .com.redhat.ceylon.compiler.java.language.AbstractCallable(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.intersection($reifiedX, $reifiedY), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, $reifiedY, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.intersection($reifiedX, $reifiedY), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, $reifiedY, $reifiedY, .ceylon.language.Empty.$TypeDescriptor)), "<X&Y>(X&Y, Y)", (short)-1){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .java.lang.Object $$u = $param$0;
                final Y $$v = (Y)$param$1;
                return .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_bar_.<.java.lang.Object, Y>callableArgumentParameterTypeParamMixed_bar(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.intersection($reifiedX, $reifiedY), $reifiedY, $$u, $$v);
            }
        });
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_f_.<.java.lang.Object, Y>callableArgumentParameterTypeParamMixed_f(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), $reifiedY, new .com.redhat.ceylon.compiler.java.language.AbstractCallable(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, $reifiedY, $reifiedY, .ceylon.language.Empty.$TypeDescriptor)), "<X|Y>(X|Y, Y)", (short)-1){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .java.lang.Object $$u = $param$0;
                final Y $$v = (Y)$param$1;
                return .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterTypeParamMixed_bar_.<.java.lang.Object, Y>callableArgumentParameterTypeParamMixed_bar(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reifiedX, $reifiedY), $reifiedY, $$u, $$v);
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.$get().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentParameterTypeParamMixed(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentParameterTypeParamMixed.class, $reifiedX);
    }
}